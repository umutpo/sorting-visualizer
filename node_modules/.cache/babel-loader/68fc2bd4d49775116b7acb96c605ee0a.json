{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { AbstractScrollbar } from './abstractScrollbar.js';\nimport { ARROW_IMG_SIZE } from './scrollbarArrow.js';\nimport { ScrollbarState } from './scrollbarState.js';\nimport { Codicon, registerCodicon } from '../../../common/codicons.js';\nconst scrollbarButtonLeftIcon = registerCodicon('scrollbar-button-left', Codicon.triangleLeft);\nconst scrollbarButtonRightIcon = registerCodicon('scrollbar-button-right', Codicon.triangleRight);\nexport class HorizontalScrollbar extends AbstractScrollbar {\n  constructor(scrollable, options, host) {\n    const scrollDimensions = scrollable.getScrollDimensions();\n    const scrollPosition = scrollable.getCurrentScrollPosition();\n    super({\n      lazyRender: options.lazyRender,\n      host: host,\n      scrollbarState: new ScrollbarState(options.horizontalHasArrows ? options.arrowSize : 0, options.horizontal === 2\n      /* Hidden */\n      ? 0 : options.horizontalScrollbarSize, options.vertical === 2\n      /* Hidden */\n      ? 0 : options.verticalScrollbarSize, scrollDimensions.width, scrollDimensions.scrollWidth, scrollPosition.scrollLeft),\n      visibility: options.horizontal,\n      extraScrollbarClassName: 'horizontal',\n      scrollable: scrollable,\n      scrollByPage: options.scrollByPage\n    });\n\n    if (options.horizontalHasArrows) {\n      const arrowDelta = (options.arrowSize - ARROW_IMG_SIZE) / 2;\n      const scrollbarDelta = (options.horizontalScrollbarSize - ARROW_IMG_SIZE) / 2;\n\n      this._createArrow({\n        className: 'scra',\n        icon: scrollbarButtonLeftIcon,\n        top: scrollbarDelta,\n        left: arrowDelta,\n        bottom: undefined,\n        right: undefined,\n        bgWidth: options.arrowSize,\n        bgHeight: options.horizontalScrollbarSize,\n        onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 1, 0))\n      });\n\n      this._createArrow({\n        className: 'scra',\n        icon: scrollbarButtonRightIcon,\n        top: scrollbarDelta,\n        left: undefined,\n        bottom: undefined,\n        right: arrowDelta,\n        bgWidth: options.arrowSize,\n        bgHeight: options.horizontalScrollbarSize,\n        onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, -1, 0))\n      });\n    }\n\n    this._createSlider(Math.floor((options.horizontalScrollbarSize - options.horizontalSliderSize) / 2), 0, undefined, options.horizontalSliderSize);\n  }\n\n  _updateSlider(sliderSize, sliderPosition) {\n    this.slider.setWidth(sliderSize);\n    this.slider.setLeft(sliderPosition);\n  }\n\n  _renderDomNode(largeSize, smallSize) {\n    this.domNode.setWidth(largeSize);\n    this.domNode.setHeight(smallSize);\n    this.domNode.setLeft(0);\n    this.domNode.setBottom(0);\n  }\n\n  onDidScroll(e) {\n    this._shouldRender = this._onElementScrollSize(e.scrollWidth) || this._shouldRender;\n    this._shouldRender = this._onElementScrollPosition(e.scrollLeft) || this._shouldRender;\n    this._shouldRender = this._onElementSize(e.width) || this._shouldRender;\n    return this._shouldRender;\n  }\n\n  _mouseDownRelativePosition(offsetX, offsetY) {\n    return offsetX;\n  }\n\n  _sliderMousePosition(e) {\n    return e.posx;\n  }\n\n  _sliderOrthogonalMousePosition(e) {\n    return e.posy;\n  }\n\n  _updateScrollbarSize(size) {\n    this.slider.setHeight(size);\n  }\n\n  writeScrollPosition(target, scrollPosition) {\n    target.scrollLeft = scrollPosition;\n  }\n\n  updateOptions(options) {\n    this.updateScrollbarSize(options.horizontal === 2\n    /* Hidden */\n    ? 0 : options.horizontalScrollbarSize);\n\n    this._scrollbarState.setOppositeScrollbarSize(options.vertical === 2\n    /* Hidden */\n    ? 0 : options.verticalScrollbarSize);\n\n    this._visibilityController.setVisibility(options.horizontal);\n\n    this._scrollByPage = options.scrollByPage;\n  }\n\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/horizontalScrollbar.js"],"names":["StandardWheelEvent","AbstractScrollbar","ARROW_IMG_SIZE","ScrollbarState","Codicon","registerCodicon","scrollbarButtonLeftIcon","triangleLeft","scrollbarButtonRightIcon","triangleRight","HorizontalScrollbar","constructor","scrollable","options","host","scrollDimensions","getScrollDimensions","scrollPosition","getCurrentScrollPosition","lazyRender","scrollbarState","horizontalHasArrows","arrowSize","horizontal","horizontalScrollbarSize","vertical","verticalScrollbarSize","width","scrollWidth","scrollLeft","visibility","extraScrollbarClassName","scrollByPage","arrowDelta","scrollbarDelta","_createArrow","className","icon","top","left","bottom","undefined","right","bgWidth","bgHeight","onActivate","_host","onMouseWheel","_createSlider","Math","floor","horizontalSliderSize","_updateSlider","sliderSize","sliderPosition","slider","setWidth","setLeft","_renderDomNode","largeSize","smallSize","domNode","setHeight","setBottom","onDidScroll","e","_shouldRender","_onElementScrollSize","_onElementScrollPosition","_onElementSize","_mouseDownRelativePosition","offsetX","offsetY","_sliderMousePosition","posx","_sliderOrthogonalMousePosition","posy","_updateScrollbarSize","size","writeScrollPosition","target","updateOptions","updateScrollbarSize","_scrollbarState","setOppositeScrollbarSize","_visibilityController","setVisibility","_scrollByPage"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { AbstractScrollbar } from './abstractScrollbar.js';\nimport { ARROW_IMG_SIZE } from './scrollbarArrow.js';\nimport { ScrollbarState } from './scrollbarState.js';\nimport { Codicon, registerCodicon } from '../../../common/codicons.js';\nconst scrollbarButtonLeftIcon = registerCodicon('scrollbar-button-left', Codicon.triangleLeft);\nconst scrollbarButtonRightIcon = registerCodicon('scrollbar-button-right', Codicon.triangleRight);\nexport class HorizontalScrollbar extends AbstractScrollbar {\n    constructor(scrollable, options, host) {\n        const scrollDimensions = scrollable.getScrollDimensions();\n        const scrollPosition = scrollable.getCurrentScrollPosition();\n        super({\n            lazyRender: options.lazyRender,\n            host: host,\n            scrollbarState: new ScrollbarState((options.horizontalHasArrows ? options.arrowSize : 0), (options.horizontal === 2 /* Hidden */ ? 0 : options.horizontalScrollbarSize), (options.vertical === 2 /* Hidden */ ? 0 : options.verticalScrollbarSize), scrollDimensions.width, scrollDimensions.scrollWidth, scrollPosition.scrollLeft),\n            visibility: options.horizontal,\n            extraScrollbarClassName: 'horizontal',\n            scrollable: scrollable,\n            scrollByPage: options.scrollByPage\n        });\n        if (options.horizontalHasArrows) {\n            const arrowDelta = (options.arrowSize - ARROW_IMG_SIZE) / 2;\n            const scrollbarDelta = (options.horizontalScrollbarSize - ARROW_IMG_SIZE) / 2;\n            this._createArrow({\n                className: 'scra',\n                icon: scrollbarButtonLeftIcon,\n                top: scrollbarDelta,\n                left: arrowDelta,\n                bottom: undefined,\n                right: undefined,\n                bgWidth: options.arrowSize,\n                bgHeight: options.horizontalScrollbarSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 1, 0)),\n            });\n            this._createArrow({\n                className: 'scra',\n                icon: scrollbarButtonRightIcon,\n                top: scrollbarDelta,\n                left: undefined,\n                bottom: undefined,\n                right: arrowDelta,\n                bgWidth: options.arrowSize,\n                bgHeight: options.horizontalScrollbarSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, -1, 0)),\n            });\n        }\n        this._createSlider(Math.floor((options.horizontalScrollbarSize - options.horizontalSliderSize) / 2), 0, undefined, options.horizontalSliderSize);\n    }\n    _updateSlider(sliderSize, sliderPosition) {\n        this.slider.setWidth(sliderSize);\n        this.slider.setLeft(sliderPosition);\n    }\n    _renderDomNode(largeSize, smallSize) {\n        this.domNode.setWidth(largeSize);\n        this.domNode.setHeight(smallSize);\n        this.domNode.setLeft(0);\n        this.domNode.setBottom(0);\n    }\n    onDidScroll(e) {\n        this._shouldRender = this._onElementScrollSize(e.scrollWidth) || this._shouldRender;\n        this._shouldRender = this._onElementScrollPosition(e.scrollLeft) || this._shouldRender;\n        this._shouldRender = this._onElementSize(e.width) || this._shouldRender;\n        return this._shouldRender;\n    }\n    _mouseDownRelativePosition(offsetX, offsetY) {\n        return offsetX;\n    }\n    _sliderMousePosition(e) {\n        return e.posx;\n    }\n    _sliderOrthogonalMousePosition(e) {\n        return e.posy;\n    }\n    _updateScrollbarSize(size) {\n        this.slider.setHeight(size);\n    }\n    writeScrollPosition(target, scrollPosition) {\n        target.scrollLeft = scrollPosition;\n    }\n    updateOptions(options) {\n        this.updateScrollbarSize(options.horizontal === 2 /* Hidden */ ? 0 : options.horizontalScrollbarSize);\n        this._scrollbarState.setOppositeScrollbarSize(options.vertical === 2 /* Hidden */ ? 0 : options.verticalScrollbarSize);\n        this._visibilityController.setVisibility(options.horizontal);\n        this._scrollByPage = options.scrollByPage;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}