{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { HoverAction, HoverWidget } from '../../../base/browser/ui/hover/hoverWidget.js';\nimport { Widget } from '../../../base/browser/ui/widget.js';\nimport { coalesce, flatten } from '../../../base/common/arrays.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../common/modes.js';\nimport { ColorHoverParticipant } from './colorHoverParticipant.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverRangeAnchor } from './hoverTypes.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\nimport { InlineCompletionsHoverParticipant } from '../inlineCompletions/inlineCompletionsHoverParticipant.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { Context as SuggestContext } from '../suggest/suggest.js';\nconst $ = dom.$;\nlet EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\n  constructor(_keybindingService) {\n    super();\n    this._keybindingService = _keybindingService;\n    this._hasContent = false;\n    this.hoverElement = $('div.hover-row.status-bar');\n    this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n  }\n\n  get hasContent() {\n    return this._hasContent;\n  }\n\n  addAction(actionOptions) {\n    const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n\n    const keybindingLabel = keybinding ? keybinding.getLabel() : null;\n    this._hasContent = true;\n    return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n  }\n\n  append(element) {\n    const result = dom.append(this.actionsElement, element);\n    this._hasContent = true;\n    return result;\n  }\n\n};\nEditorHoverStatusBar = __decorate([__param(0, IKeybindingService)], EditorHoverStatusBar);\n\nclass ModesContentComputer {\n  constructor(editor, _participants) {\n    this._participants = _participants;\n    this._editor = editor;\n    this._result = [];\n    this._anchor = null;\n  }\n\n  setAnchor(anchor) {\n    this._anchor = anchor;\n    this._result = [];\n  }\n\n  clearResult() {\n    this._result = [];\n  }\n\n  static _getLineDecorations(editor, anchor) {\n    if (anchor.type !== 1\n    /* Range */\n    ) {\n      return [];\n    }\n\n    const model = editor.getModel();\n    const lineNumber = anchor.range.startLineNumber;\n    const maxColumn = model.getLineMaxColumn(lineNumber);\n    return editor.getLineDecorations(lineNumber).filter(d => {\n      if (d.options.isWholeLine) {\n        return true;\n      }\n\n      const startColumn = d.range.startLineNumber === lineNumber ? d.range.startColumn : 1;\n      const endColumn = d.range.endLineNumber === lineNumber ? d.range.endColumn : maxColumn;\n\n      if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  computeAsync(token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const anchor = this._anchor;\n\n      if (!this._editor.hasModel() || !anchor) {\n        return Promise.resolve([]);\n      }\n\n      const lineDecorations = ModesContentComputer._getLineDecorations(this._editor, anchor);\n\n      const allResults = yield Promise.all(this._participants.map(p => this._computeAsync(p, lineDecorations, anchor, token)));\n      return flatten(allResults);\n    });\n  }\n\n  _computeAsync(participant, lineDecorations, anchor, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!participant.computeAsync) {\n        return [];\n      }\n\n      return participant.computeAsync(anchor, lineDecorations, token);\n    });\n  }\n\n  computeSync() {\n    if (!this._editor.hasModel() || !this._anchor) {\n      return [];\n    }\n\n    const lineDecorations = ModesContentComputer._getLineDecorations(this._editor, this._anchor);\n\n    let result = [];\n\n    for (const participant of this._participants) {\n      result = result.concat(participant.computeSync(this._anchor, lineDecorations));\n    }\n\n    return coalesce(result);\n  }\n\n  onResult(result, isFromSynchronousComputation) {\n    // Always put synchronous messages before asynchronous ones\n    if (isFromSynchronousComputation) {\n      this._result = result.concat(this._result);\n    } else {\n      this._result = this._result.concat(result);\n    }\n  }\n\n  getResult() {\n    return this._result.slice(0);\n  }\n\n  getResultWithLoadingMessage() {\n    if (this._anchor) {\n      for (const participant of this._participants) {\n        if (participant.createLoadingMessage) {\n          const loadingMessage = participant.createLoadingMessage(this._anchor);\n\n          if (loadingMessage) {\n            return this._result.slice(0).concat([loadingMessage]);\n          }\n        }\n      }\n    }\n\n    return this._result.slice(0);\n  }\n\n}\n\nlet ModesContentHoverWidget = class ModesContentHoverWidget extends Widget {\n  constructor(editor, _hoverVisibleKey, instantiationService, _keybindingService, _contextKeyService) {\n    super();\n    this._hoverVisibleKey = _hoverVisibleKey;\n    this._keybindingService = _keybindingService;\n    this._contextKeyService = _contextKeyService; // IContentWidget.allowEditorOverflow\n\n    this.allowEditorOverflow = true;\n    this._participants = [instantiationService.createInstance(ColorHoverParticipant, editor, this), instantiationService.createInstance(MarkdownHoverParticipant, editor, this), instantiationService.createInstance(InlineCompletionsHoverParticipant, editor, this), instantiationService.createInstance(MarkerHoverParticipant, editor, this)];\n    this._editor = editor;\n    this._isVisible = false;\n    this._stoleFocus = false;\n    this._renderDisposable = null;\n    this._hover = this._register(new HoverWidget());\n\n    this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n\n    this.onkeydown(this._hover.containerDomNode, e => {\n      if (e.equals(9\n      /* Escape */\n      )) {\n        this.hide();\n      }\n    });\n\n    this._register(this._editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(43\n      /* fontInfo */\n      )) {\n        this._updateFont();\n      }\n    }));\n\n    this._editor.onDidLayoutChange(() => this.layout());\n\n    this.layout();\n\n    this._editor.addContentWidget(this);\n\n    this._showAtPosition = null;\n    this._showAtRange = null;\n    this._stoleFocus = false;\n    this._messages = [];\n    this._lastAnchor = null;\n    this._computer = new ModesContentComputer(this._editor, this._participants);\n    this._highlightDecorations = [];\n    this._isChangingDecorations = false;\n    this._shouldFocus = false;\n    this._colorPicker = null;\n    this._preferAbove = this._editor.getOption(52\n    /* hover */\n    ).above;\n    this._hoverOperation = new HoverOperation(this._computer, result => this._withResult(result, true), null, result => this._withResult(result, false), this._editor.getOption(52\n    /* hover */\n    ).delay);\n\n    this._register(dom.addStandardDisposableListener(this.getDomNode(), dom.EventType.FOCUS, () => {\n      if (this._colorPicker) {\n        this.getDomNode().classList.add('colorpicker-hover');\n      }\n    }));\n\n    this._register(dom.addStandardDisposableListener(this.getDomNode(), dom.EventType.BLUR, () => {\n      this.getDomNode().classList.remove('colorpicker-hover');\n    }));\n\n    this._register(editor.onDidChangeConfiguration(() => {\n      this._hoverOperation.setHoverTime(this._editor.getOption(52\n      /* hover */\n      ).delay);\n\n      this._preferAbove = this._editor.getOption(52\n      /* hover */\n      ).above;\n    }));\n\n    this._register(TokenizationRegistry.onDidChange(() => {\n      if (this._isVisible && this._lastAnchor && this._messages.length > 0) {\n        this._hover.contentsDomNode.textContent = '';\n\n        this._renderMessages(this._lastAnchor, this._messages);\n      }\n    }));\n  }\n\n  dispose() {\n    this._hoverOperation.cancel();\n\n    this._editor.removeContentWidget(this);\n\n    super.dispose();\n  }\n\n  getId() {\n    return ModesContentHoverWidget.ID;\n  }\n\n  getDomNode() {\n    return this._hover.containerDomNode;\n  }\n\n  _shouldShowAt(mouseEvent) {\n    const targetType = mouseEvent.target.type;\n\n    if (targetType === 6\n    /* CONTENT_TEXT */\n    ) {\n      return true;\n    }\n\n    if (targetType === 7\n    /* CONTENT_EMPTY */\n    ) {\n      const epsilon = this._editor.getOption(43\n      /* fontInfo */\n      ).typicalHalfwidthCharacterWidth / 2;\n      const data = mouseEvent.target.detail;\n\n      if (data && !data.isAfterLines && typeof data.horizontalDistanceToText === 'number' && data.horizontalDistanceToText < epsilon) {\n        // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  maybeShowAt(mouseEvent) {\n    var _a;\n\n    const anchorCandidates = [];\n\n    for (const participant of this._participants) {\n      if (typeof participant.suggestHoverAnchor === 'function') {\n        const anchor = participant.suggestHoverAnchor(mouseEvent);\n\n        if (anchor) {\n          anchorCandidates.push(anchor);\n        }\n      }\n    }\n\n    if (this._shouldShowAt(mouseEvent) && mouseEvent.target.range) {\n      // TODO@rebornix. This should be removed if we move Color Picker out of Hover component.\n      // Check if mouse is hovering on color decorator\n      const hoverOnColorDecorator = [...(((_a = mouseEvent.target.element) === null || _a === void 0 ? void 0 : _a.classList.values()) || [])].find(className => className.startsWith('ced-colorBox')) && mouseEvent.target.range.endColumn - mouseEvent.target.range.startColumn === 1;\n      const showAtRange = hoverOnColorDecorator // shift the mouse focus by one as color decorator is a `before` decoration of next character.\n      ? new Range(mouseEvent.target.range.startLineNumber, mouseEvent.target.range.startColumn + 1, mouseEvent.target.range.endLineNumber, mouseEvent.target.range.endColumn + 1) : mouseEvent.target.range;\n      anchorCandidates.push(new HoverRangeAnchor(0, showAtRange));\n    }\n\n    if (anchorCandidates.length === 0) {\n      return false;\n    }\n\n    anchorCandidates.sort((a, b) => b.priority - a.priority);\n\n    this._startShowingAt(anchorCandidates[0], 0\n    /* Delayed */\n    , false);\n\n    return true;\n  }\n\n  _showAt(position, range, focus) {\n    // Position has changed\n    this._showAtPosition = position;\n    this._showAtRange = range;\n\n    this._hoverVisibleKey.set(true);\n\n    this._isVisible = true;\n\n    this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n\n    this._editor.layoutContentWidget(this); // Simply force a synchronous render on the editor\n    // such that the widget does not really render with left = '0px'\n\n\n    this._editor.render();\n\n    this._stoleFocus = focus;\n\n    if (focus) {\n      this._hover.containerDomNode.focus();\n    }\n  }\n\n  getPosition() {\n    if (this._isVisible) {\n      let preferAbove = this._preferAbove;\n\n      if (!preferAbove && this._contextKeyService.getContextKeyValue(SuggestContext.Visible.key)) {\n        // Prefer rendering above if the suggest widget is visible\n        preferAbove = true;\n      }\n\n      return {\n        position: this._showAtPosition,\n        range: this._showAtRange,\n        preference: preferAbove ? [1\n        /* ABOVE */\n        , 2\n        /* BELOW */\n        ] : [2\n        /* BELOW */\n        , 1\n        /* ABOVE */\n        ]\n      };\n    }\n\n    return null;\n  }\n\n  _updateFont() {\n    const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n    codeClasses.forEach(node => this._editor.applyFontInfo(node));\n  }\n\n  _updateContents(node) {\n    this._hover.contentsDomNode.textContent = '';\n\n    this._hover.contentsDomNode.appendChild(node);\n\n    this._updateFont();\n\n    this._editor.layoutContentWidget(this);\n\n    this._hover.onContentsChanged();\n  }\n\n  layout() {\n    const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\n\n    const {\n      fontSize,\n      lineHeight\n    } = this._editor.getOption(43\n    /* fontInfo */\n    );\n\n    this._hover.contentsDomNode.style.fontSize = `${fontSize}px`;\n    this._hover.contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n    this._hover.contentsDomNode.style.maxHeight = `${height}px`;\n    this._hover.contentsDomNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\n  }\n\n  onModelDecorationsChanged() {\n    if (this._isChangingDecorations) {\n      return;\n    }\n\n    if (this._isVisible) {\n      // The decorations have changed and the hover is visible,\n      // we need to recompute the displayed text\n      this._hoverOperation.cancel();\n\n      this._computer.clearResult();\n\n      if (!this._colorPicker) {\n        // TODO@Michel ensure that displayed text for other decorations is computed even if color picker is in place\n        this._hoverOperation.start(0\n        /* Delayed */\n        );\n      }\n    }\n  }\n\n  startShowingAtRange(range, mode, focus) {\n    this._startShowingAt(new HoverRangeAnchor(0, range), mode, focus);\n  }\n\n  _startShowingAt(anchor, mode, focus) {\n    if (this._lastAnchor && this._lastAnchor.equals(anchor)) {\n      // We have to show the widget at the exact same range as before, so no work is needed\n      return;\n    }\n\n    this._hoverOperation.cancel();\n\n    if (this._isVisible) {\n      // The range might have changed, but the hover is visible\n      // Instead of hiding it completely, filter out messages that are still in the new range and\n      // kick off a new computation\n      if (!this._showAtPosition || !this._lastAnchor || !anchor.canAdoptVisibleHover(this._lastAnchor, this._showAtPosition)) {\n        this.hide();\n      } else {\n        const filteredMessages = this._messages.filter(m => m.isValidForHoverAnchor(anchor));\n\n        if (filteredMessages.length === 0) {\n          this.hide();\n        } else if (filteredMessages.length === this._messages.length) {\n          // no change\n          return;\n        } else {\n          this._renderMessages(anchor, filteredMessages);\n        }\n      }\n    }\n\n    this._lastAnchor = anchor;\n\n    this._computer.setAnchor(anchor);\n\n    this._shouldFocus = focus;\n\n    this._hoverOperation.start(mode);\n  }\n\n  hide() {\n    this._lastAnchor = null;\n\n    this._hoverOperation.cancel();\n\n    if (this._isVisible) {\n      setTimeout(() => {\n        // Give commands a chance to see the key\n        if (!this._isVisible) {\n          this._hoverVisibleKey.set(false);\n        }\n      }, 0);\n      this._isVisible = false;\n\n      this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n\n      this._editor.layoutContentWidget(this);\n\n      if (this._stoleFocus) {\n        this._editor.focus();\n      }\n    }\n\n    this._isChangingDecorations = true;\n    this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, []);\n    this._isChangingDecorations = false;\n\n    if (this._renderDisposable) {\n      this._renderDisposable.dispose();\n\n      this._renderDisposable = null;\n    }\n\n    this._colorPicker = null;\n  }\n\n  isColorPickerVisible() {\n    return !!this._colorPicker;\n  }\n\n  setColorPicker(widget) {\n    this._colorPicker = widget;\n  }\n\n  onContentsChanged() {\n    this._hover.onContentsChanged();\n  }\n\n  _withResult(result, complete) {\n    this._messages = result;\n\n    if (this._lastAnchor && this._messages.length > 0) {\n      this._renderMessages(this._lastAnchor, this._messages);\n    } else if (complete) {\n      this.hide();\n    }\n  }\n\n  _renderMessages(anchor, messages) {\n    if (this._renderDisposable) {\n      this._renderDisposable.dispose();\n\n      this._renderDisposable = null;\n    }\n\n    this._colorPicker = null; // TODO: TypeScript thinks this is always null\n    // update column from which to show\n\n    let renderColumn = 1073741824\n    /* MAX_SAFE_SMALL_INTEGER */\n    ;\n    let highlightRange = messages[0].range;\n    let forceShowAtRange = null;\n    let fragment = document.createDocumentFragment();\n    const disposables = new DisposableStore();\n    const hoverParts = new Map();\n\n    for (const msg of messages) {\n      renderColumn = Math.min(renderColumn, msg.range.startColumn);\n      highlightRange = Range.plusRange(highlightRange, msg.range);\n\n      if (msg.forceShowAtRange) {\n        forceShowAtRange = msg.range;\n      }\n\n      if (!hoverParts.has(msg.owner)) {\n        hoverParts.set(msg.owner, []);\n      }\n\n      const dest = hoverParts.get(msg.owner);\n      dest.push(msg);\n    }\n\n    const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n\n    for (const [participant, participantHoverParts] of hoverParts) {\n      disposables.add(participant.renderHoverParts(participantHoverParts, fragment, statusBar));\n    }\n\n    if (statusBar.hasContent) {\n      fragment.appendChild(statusBar.hoverElement);\n    }\n\n    this._renderDisposable = disposables; // show\n\n    if (fragment.hasChildNodes()) {\n      if (forceShowAtRange) {\n        this._showAt(forceShowAtRange.getStartPosition(), forceShowAtRange, this._shouldFocus);\n      } else {\n        this._showAt(new Position(anchor.range.startLineNumber, renderColumn), highlightRange, this._shouldFocus);\n      }\n\n      this._updateContents(fragment);\n    }\n\n    if (this._colorPicker) {\n      this._colorPicker.layout();\n    }\n\n    this._isChangingDecorations = true;\n    this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, highlightRange ? [{\n      range: highlightRange,\n      options: ModesContentHoverWidget._DECORATION_OPTIONS\n    }] : []);\n    this._isChangingDecorations = false;\n  }\n\n};\nModesContentHoverWidget.ID = 'editor.contrib.modesContentHoverWidget';\nModesContentHoverWidget._DECORATION_OPTIONS = ModelDecorationOptions.register({\n  description: 'content-hover-highlight',\n  className: 'hoverHighlight'\n});\nModesContentHoverWidget = __decorate([__param(2, IInstantiationService), __param(3, IKeybindingService), __param(4, IContextKeyService)], ModesContentHoverWidget);\nexport { ModesContentHoverWidget };","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/editor/contrib/hover/modesContentHover.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","dom","HoverAction","HoverWidget","Widget","coalesce","flatten","Disposable","DisposableStore","Position","Range","ModelDecorationOptions","TokenizationRegistry","ColorHoverParticipant","HoverOperation","HoverRangeAnchor","MarkdownHoverParticipant","MarkerHoverParticipant","InlineCompletionsHoverParticipant","IContextKeyService","IInstantiationService","IKeybindingService","Context","SuggestContext","$","EditorHoverStatusBar","constructor","_keybindingService","_hasContent","hoverElement","actionsElement","append","hasContent","addAction","actionOptions","keybinding","lookupKeybinding","commandId","keybindingLabel","getLabel","_register","render","element","ModesContentComputer","editor","_participants","_editor","_result","_anchor","setAnchor","anchor","clearResult","_getLineDecorations","type","model","getModel","lineNumber","range","startLineNumber","maxColumn","getLineMaxColumn","getLineDecorations","filter","options","isWholeLine","startColumn","endColumn","endLineNumber","computeAsync","token","hasModel","lineDecorations","allResults","all","map","p","_computeAsync","participant","computeSync","concat","onResult","isFromSynchronousComputation","getResult","slice","getResultWithLoadingMessage","createLoadingMessage","loadingMessage","ModesContentHoverWidget","_hoverVisibleKey","instantiationService","_contextKeyService","allowEditorOverflow","createInstance","_isVisible","_stoleFocus","_renderDisposable","_hover","containerDomNode","classList","toggle","onkeydown","equals","hide","onDidChangeConfiguration","hasChanged","_updateFont","onDidLayoutChange","layout","addContentWidget","_showAtPosition","_showAtRange","_messages","_lastAnchor","_computer","_highlightDecorations","_isChangingDecorations","_shouldFocus","_colorPicker","_preferAbove","getOption","above","_hoverOperation","_withResult","delay","addStandardDisposableListener","getDomNode","EventType","FOCUS","add","BLUR","remove","setHoverTime","onDidChange","contentsDomNode","textContent","_renderMessages","dispose","cancel","removeContentWidget","getId","ID","_shouldShowAt","mouseEvent","targetType","epsilon","typicalHalfwidthCharacterWidth","data","detail","isAfterLines","horizontalDistanceToText","maybeShowAt","_a","anchorCandidates","suggestHoverAnchor","push","hoverOnColorDecorator","values","find","className","startsWith","showAtRange","sort","a","b","priority","_startShowingAt","_showAt","position","focus","set","layoutContentWidget","getPosition","preferAbove","getContextKeyValue","Visible","preference","codeClasses","Array","prototype","call","getElementsByClassName","forEach","node","applyFontInfo","_updateContents","appendChild","onContentsChanged","height","Math","max","getLayoutInfo","fontSize","lineHeight","style","maxHeight","maxWidth","width","onModelDecorationsChanged","start","startShowingAtRange","mode","canAdoptVisibleHover","filteredMessages","m","isValidForHoverAnchor","setTimeout","deltaDecorations","isColorPickerVisible","setColorPicker","widget","complete","messages","renderColumn","highlightRange","forceShowAtRange","fragment","document","createDocumentFragment","disposables","hoverParts","Map","msg","min","plusRange","has","owner","dest","get","statusBar","participantHoverParts","renderHoverParts","hasChildNodes","getStartPosition","_DECORATION_OPTIONS","register","description"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { HoverAction, HoverWidget } from '../../../base/browser/ui/hover/hoverWidget.js';\nimport { Widget } from '../../../base/browser/ui/widget.js';\nimport { coalesce, flatten } from '../../../base/common/arrays.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../common/modes.js';\nimport { ColorHoverParticipant } from './colorHoverParticipant.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverRangeAnchor } from './hoverTypes.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\nimport { InlineCompletionsHoverParticipant } from '../inlineCompletions/inlineCompletionsHoverParticipant.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { Context as SuggestContext } from '../suggest/suggest.js';\nconst $ = dom.$;\nlet EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\n    constructor(_keybindingService) {\n        super();\n        this._keybindingService = _keybindingService;\n        this._hasContent = false;\n        this.hoverElement = $('div.hover-row.status-bar');\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n    }\n    get hasContent() {\n        return this._hasContent;\n    }\n    addAction(actionOptions) {\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\n        this._hasContent = true;\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n    }\n    append(element) {\n        const result = dom.append(this.actionsElement, element);\n        this._hasContent = true;\n        return result;\n    }\n};\nEditorHoverStatusBar = __decorate([\n    __param(0, IKeybindingService)\n], EditorHoverStatusBar);\nclass ModesContentComputer {\n    constructor(editor, _participants) {\n        this._participants = _participants;\n        this._editor = editor;\n        this._result = [];\n        this._anchor = null;\n    }\n    setAnchor(anchor) {\n        this._anchor = anchor;\n        this._result = [];\n    }\n    clearResult() {\n        this._result = [];\n    }\n    static _getLineDecorations(editor, anchor) {\n        if (anchor.type !== 1 /* Range */) {\n            return [];\n        }\n        const model = editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        return editor.getLineDecorations(lineNumber).filter((d) => {\n            if (d.options.isWholeLine) {\n                return true;\n            }\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n                return false;\n            }\n            return true;\n        });\n    }\n    computeAsync(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const anchor = this._anchor;\n            if (!this._editor.hasModel() || !anchor) {\n                return Promise.resolve([]);\n            }\n            const lineDecorations = ModesContentComputer._getLineDecorations(this._editor, anchor);\n            const allResults = yield Promise.all(this._participants.map(p => this._computeAsync(p, lineDecorations, anchor, token)));\n            return flatten(allResults);\n        });\n    }\n    _computeAsync(participant, lineDecorations, anchor, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!participant.computeAsync) {\n                return [];\n            }\n            return participant.computeAsync(anchor, lineDecorations, token);\n        });\n    }\n    computeSync() {\n        if (!this._editor.hasModel() || !this._anchor) {\n            return [];\n        }\n        const lineDecorations = ModesContentComputer._getLineDecorations(this._editor, this._anchor);\n        let result = [];\n        for (const participant of this._participants) {\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\n        }\n        return coalesce(result);\n    }\n    onResult(result, isFromSynchronousComputation) {\n        // Always put synchronous messages before asynchronous ones\n        if (isFromSynchronousComputation) {\n            this._result = result.concat(this._result);\n        }\n        else {\n            this._result = this._result.concat(result);\n        }\n    }\n    getResult() {\n        return this._result.slice(0);\n    }\n    getResultWithLoadingMessage() {\n        if (this._anchor) {\n            for (const participant of this._participants) {\n                if (participant.createLoadingMessage) {\n                    const loadingMessage = participant.createLoadingMessage(this._anchor);\n                    if (loadingMessage) {\n                        return this._result.slice(0).concat([loadingMessage]);\n                    }\n                }\n            }\n        }\n        return this._result.slice(0);\n    }\n}\nlet ModesContentHoverWidget = class ModesContentHoverWidget extends Widget {\n    constructor(editor, _hoverVisibleKey, instantiationService, _keybindingService, _contextKeyService) {\n        super();\n        this._hoverVisibleKey = _hoverVisibleKey;\n        this._keybindingService = _keybindingService;\n        this._contextKeyService = _contextKeyService;\n        // IContentWidget.allowEditorOverflow\n        this.allowEditorOverflow = true;\n        this._participants = [\n            instantiationService.createInstance(ColorHoverParticipant, editor, this),\n            instantiationService.createInstance(MarkdownHoverParticipant, editor, this),\n            instantiationService.createInstance(InlineCompletionsHoverParticipant, editor, this),\n            instantiationService.createInstance(MarkerHoverParticipant, editor, this),\n        ];\n        this._editor = editor;\n        this._isVisible = false;\n        this._stoleFocus = false;\n        this._renderDisposable = null;\n        this._hover = this._register(new HoverWidget());\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        this.onkeydown(this._hover.containerDomNode, (e) => {\n            if (e.equals(9 /* Escape */)) {\n                this.hide();\n            }\n        });\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(43 /* fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._editor.onDidLayoutChange(() => this.layout());\n        this.layout();\n        this._editor.addContentWidget(this);\n        this._showAtPosition = null;\n        this._showAtRange = null;\n        this._stoleFocus = false;\n        this._messages = [];\n        this._lastAnchor = null;\n        this._computer = new ModesContentComputer(this._editor, this._participants);\n        this._highlightDecorations = [];\n        this._isChangingDecorations = false;\n        this._shouldFocus = false;\n        this._colorPicker = null;\n        this._preferAbove = this._editor.getOption(52 /* hover */).above;\n        this._hoverOperation = new HoverOperation(this._computer, result => this._withResult(result, true), null, result => this._withResult(result, false), this._editor.getOption(52 /* hover */).delay);\n        this._register(dom.addStandardDisposableListener(this.getDomNode(), dom.EventType.FOCUS, () => {\n            if (this._colorPicker) {\n                this.getDomNode().classList.add('colorpicker-hover');\n            }\n        }));\n        this._register(dom.addStandardDisposableListener(this.getDomNode(), dom.EventType.BLUR, () => {\n            this.getDomNode().classList.remove('colorpicker-hover');\n        }));\n        this._register(editor.onDidChangeConfiguration(() => {\n            this._hoverOperation.setHoverTime(this._editor.getOption(52 /* hover */).delay);\n            this._preferAbove = this._editor.getOption(52 /* hover */).above;\n        }));\n        this._register(TokenizationRegistry.onDidChange(() => {\n            if (this._isVisible && this._lastAnchor && this._messages.length > 0) {\n                this._hover.contentsDomNode.textContent = '';\n                this._renderMessages(this._lastAnchor, this._messages);\n            }\n        }));\n    }\n    dispose() {\n        this._hoverOperation.cancel();\n        this._editor.removeContentWidget(this);\n        super.dispose();\n    }\n    getId() {\n        return ModesContentHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    _shouldShowAt(mouseEvent) {\n        const targetType = mouseEvent.target.type;\n        if (targetType === 6 /* CONTENT_TEXT */) {\n            return true;\n        }\n        if (targetType === 7 /* CONTENT_EMPTY */) {\n            const epsilon = this._editor.getOption(43 /* fontInfo */).typicalHalfwidthCharacterWidth / 2;\n            const data = mouseEvent.target.detail;\n            if (data && !data.isAfterLines && typeof data.horizontalDistanceToText === 'number' && data.horizontalDistanceToText < epsilon) {\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n                return true;\n            }\n        }\n        return false;\n    }\n    maybeShowAt(mouseEvent) {\n        var _a;\n        const anchorCandidates = [];\n        for (const participant of this._participants) {\n            if (typeof participant.suggestHoverAnchor === 'function') {\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\n                if (anchor) {\n                    anchorCandidates.push(anchor);\n                }\n            }\n        }\n        if (this._shouldShowAt(mouseEvent) && mouseEvent.target.range) {\n            // TODO@rebornix. This should be removed if we move Color Picker out of Hover component.\n            // Check if mouse is hovering on color decorator\n            const hoverOnColorDecorator = [...((_a = mouseEvent.target.element) === null || _a === void 0 ? void 0 : _a.classList.values()) || []].find(className => className.startsWith('ced-colorBox'))\n                && mouseEvent.target.range.endColumn - mouseEvent.target.range.startColumn === 1;\n            const showAtRange = (hoverOnColorDecorator // shift the mouse focus by one as color decorator is a `before` decoration of next character.\n                ? new Range(mouseEvent.target.range.startLineNumber, mouseEvent.target.range.startColumn + 1, mouseEvent.target.range.endLineNumber, mouseEvent.target.range.endColumn + 1)\n                : mouseEvent.target.range);\n            anchorCandidates.push(new HoverRangeAnchor(0, showAtRange));\n        }\n        if (anchorCandidates.length === 0) {\n            return false;\n        }\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\n        this._startShowingAt(anchorCandidates[0], 0 /* Delayed */, false);\n        return true;\n    }\n    _showAt(position, range, focus) {\n        // Position has changed\n        this._showAtPosition = position;\n        this._showAtRange = range;\n        this._hoverVisibleKey.set(true);\n        this._isVisible = true;\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        this._editor.layoutContentWidget(this);\n        // Simply force a synchronous render on the editor\n        // such that the widget does not really render with left = '0px'\n        this._editor.render();\n        this._stoleFocus = focus;\n        if (focus) {\n            this._hover.containerDomNode.focus();\n        }\n    }\n    getPosition() {\n        if (this._isVisible) {\n            let preferAbove = this._preferAbove;\n            if (!preferAbove && this._contextKeyService.getContextKeyValue(SuggestContext.Visible.key)) {\n                // Prefer rendering above if the suggest widget is visible\n                preferAbove = true;\n            }\n            return {\n                position: this._showAtPosition,\n                range: this._showAtRange,\n                preference: preferAbove ? [\n                    1 /* ABOVE */,\n                    2 /* BELOW */,\n                ] : [\n                    2 /* BELOW */,\n                    1 /* ABOVE */,\n                ],\n            };\n        }\n        return null;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _updateContents(node) {\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._updateFont();\n        this._editor.layoutContentWidget(this);\n        this._hover.onContentsChanged();\n    }\n    layout() {\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\n        const { fontSize, lineHeight } = this._editor.getOption(43 /* fontInfo */);\n        this._hover.contentsDomNode.style.fontSize = `${fontSize}px`;\n        this._hover.contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n        this._hover.contentsDomNode.style.maxHeight = `${height}px`;\n        this._hover.contentsDomNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\n    }\n    onModelDecorationsChanged() {\n        if (this._isChangingDecorations) {\n            return;\n        }\n        if (this._isVisible) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            this._computer.clearResult();\n            if (!this._colorPicker) { // TODO@Michel ensure that displayed text for other decorations is computed even if color picker is in place\n                this._hoverOperation.start(0 /* Delayed */);\n            }\n        }\n    }\n    startShowingAtRange(range, mode, focus) {\n        this._startShowingAt(new HoverRangeAnchor(0, range), mode, focus);\n    }\n    _startShowingAt(anchor, mode, focus) {\n        if (this._lastAnchor && this._lastAnchor.equals(anchor)) {\n            // We have to show the widget at the exact same range as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        if (this._isVisible) {\n            // The range might have changed, but the hover is visible\n            // Instead of hiding it completely, filter out messages that are still in the new range and\n            // kick off a new computation\n            if (!this._showAtPosition || !this._lastAnchor || !anchor.canAdoptVisibleHover(this._lastAnchor, this._showAtPosition)) {\n                this.hide();\n            }\n            else {\n                const filteredMessages = this._messages.filter((m) => m.isValidForHoverAnchor(anchor));\n                if (filteredMessages.length === 0) {\n                    this.hide();\n                }\n                else if (filteredMessages.length === this._messages.length) {\n                    // no change\n                    return;\n                }\n                else {\n                    this._renderMessages(anchor, filteredMessages);\n                }\n            }\n        }\n        this._lastAnchor = anchor;\n        this._computer.setAnchor(anchor);\n        this._shouldFocus = focus;\n        this._hoverOperation.start(mode);\n    }\n    hide() {\n        this._lastAnchor = null;\n        this._hoverOperation.cancel();\n        if (this._isVisible) {\n            setTimeout(() => {\n                // Give commands a chance to see the key\n                if (!this._isVisible) {\n                    this._hoverVisibleKey.set(false);\n                }\n            }, 0);\n            this._isVisible = false;\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n            this._editor.layoutContentWidget(this);\n            if (this._stoleFocus) {\n                this._editor.focus();\n            }\n        }\n        this._isChangingDecorations = true;\n        this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, []);\n        this._isChangingDecorations = false;\n        if (this._renderDisposable) {\n            this._renderDisposable.dispose();\n            this._renderDisposable = null;\n        }\n        this._colorPicker = null;\n    }\n    isColorPickerVisible() {\n        return !!this._colorPicker;\n    }\n    setColorPicker(widget) {\n        this._colorPicker = widget;\n    }\n    onContentsChanged() {\n        this._hover.onContentsChanged();\n    }\n    _withResult(result, complete) {\n        this._messages = result;\n        if (this._lastAnchor && this._messages.length > 0) {\n            this._renderMessages(this._lastAnchor, this._messages);\n        }\n        else if (complete) {\n            this.hide();\n        }\n    }\n    _renderMessages(anchor, messages) {\n        if (this._renderDisposable) {\n            this._renderDisposable.dispose();\n            this._renderDisposable = null;\n        }\n        this._colorPicker = null; // TODO: TypeScript thinks this is always null\n        // update column from which to show\n        let renderColumn = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        let highlightRange = messages[0].range;\n        let forceShowAtRange = null;\n        let fragment = document.createDocumentFragment();\n        const disposables = new DisposableStore();\n        const hoverParts = new Map();\n        for (const msg of messages) {\n            renderColumn = Math.min(renderColumn, msg.range.startColumn);\n            highlightRange = Range.plusRange(highlightRange, msg.range);\n            if (msg.forceShowAtRange) {\n                forceShowAtRange = msg.range;\n            }\n            if (!hoverParts.has(msg.owner)) {\n                hoverParts.set(msg.owner, []);\n            }\n            const dest = hoverParts.get(msg.owner);\n            dest.push(msg);\n        }\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n        for (const [participant, participantHoverParts] of hoverParts) {\n            disposables.add(participant.renderHoverParts(participantHoverParts, fragment, statusBar));\n        }\n        if (statusBar.hasContent) {\n            fragment.appendChild(statusBar.hoverElement);\n        }\n        this._renderDisposable = disposables;\n        // show\n        if (fragment.hasChildNodes()) {\n            if (forceShowAtRange) {\n                this._showAt(forceShowAtRange.getStartPosition(), forceShowAtRange, this._shouldFocus);\n            }\n            else {\n                this._showAt(new Position(anchor.range.startLineNumber, renderColumn), highlightRange, this._shouldFocus);\n            }\n            this._updateContents(fragment);\n        }\n        if (this._colorPicker) {\n            this._colorPicker.layout();\n        }\n        this._isChangingDecorations = true;\n        this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, highlightRange ? [{\n                range: highlightRange,\n                options: ModesContentHoverWidget._DECORATION_OPTIONS\n            }] : []);\n        this._isChangingDecorations = false;\n    }\n};\nModesContentHoverWidget.ID = 'editor.contrib.modesContentHoverWidget';\nModesContentHoverWidget._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'content-hover-highlight',\n    className: 'hoverHighlight'\n});\nModesContentHoverWidget = __decorate([\n    __param(2, IInstantiationService),\n    __param(3, IKeybindingService),\n    __param(4, IContextKeyService)\n], ModesContentHoverWidget);\nexport { ModesContentHoverWidget };\n"]},"metadata":{},"sourceType":"module"}