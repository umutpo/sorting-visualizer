{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport './bracketMatching.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../common/model.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { editorBracketMatchBackground, editorBracketMatchBorder } from '../../common/view/editorColorRegistry.js';\nimport * as nls from '../../../nls.js';\nimport { MenuId, MenuRegistry } from '../../../platform/actions/common/actions.js';\nimport { registerColor } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant, themeColorFromId } from '../../../platform/theme/common/themeService.js';\nconst overviewRulerBracketMatchForeground = registerColor('editorOverviewRuler.bracketMatchForeground', {\n  dark: '#A0A0A0',\n  light: '#A0A0A0',\n  hc: '#A0A0A0'\n}, nls.localize('overviewRulerBracketMatchForeground', 'Overview ruler marker color for matching brackets.'));\n\nclass JumpToBracketAction extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.jumpToBracket',\n      label: nls.localize('smartSelect.jumpBracket', \"Go to Bracket\"),\n      alias: 'Go to Bracket',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048\n        /* CtrlCmd */\n        | 1024\n        /* Shift */\n        | 88\n        /* Backslash */\n        ,\n        weight: 100\n        /* EditorContrib */\n\n      }\n    });\n  }\n\n  run(accessor, editor) {\n    let controller = BracketMatchingController.get(editor);\n\n    if (!controller) {\n      return;\n    }\n\n    controller.jumpToBracket();\n  }\n\n}\n\nclass SelectToBracketAction extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.selectToBracket',\n      label: nls.localize('smartSelect.selectToBracket', \"Select to Bracket\"),\n      alias: 'Select to Bracket',\n      precondition: undefined,\n      description: {\n        description: `Select to Bracket`,\n        args: [{\n          name: 'args',\n          schema: {\n            type: 'object',\n            properties: {\n              'selectBrackets': {\n                type: 'boolean',\n                default: true\n              }\n            }\n          }\n        }]\n      }\n    });\n  }\n\n  run(accessor, editor, args) {\n    const controller = BracketMatchingController.get(editor);\n\n    if (!controller) {\n      return;\n    }\n\n    let selectBrackets = true;\n\n    if (args && args.selectBrackets === false) {\n      selectBrackets = false;\n    }\n\n    controller.selectToBracket(selectBrackets);\n  }\n\n}\n\nclass BracketsData {\n  constructor(position, brackets, options) {\n    this.position = position;\n    this.brackets = brackets;\n    this.options = options;\n  }\n\n}\n\nexport class BracketMatchingController extends Disposable {\n  constructor(editor) {\n    super();\n    this._editor = editor;\n    this._lastBracketsData = [];\n    this._lastVersionId = 0;\n    this._decorations = [];\n    this._updateBracketsSoon = this._register(new RunOnceScheduler(() => this._updateBrackets(), 50));\n    this._matchBrackets = this._editor.getOption(63\n    /* matchBrackets */\n    );\n\n    this._updateBracketsSoon.schedule();\n\n    this._register(editor.onDidChangeCursorPosition(e => {\n      if (this._matchBrackets === 'never') {\n        // Early exit if nothing needs to be done!\n        // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n        return;\n      }\n\n      this._updateBracketsSoon.schedule();\n    }));\n\n    this._register(editor.onDidChangeModelContent(e => {\n      this._updateBracketsSoon.schedule();\n    }));\n\n    this._register(editor.onDidChangeModel(e => {\n      this._lastBracketsData = [];\n      this._decorations = [];\n\n      this._updateBracketsSoon.schedule();\n    }));\n\n    this._register(editor.onDidChangeModelLanguageConfiguration(e => {\n      this._lastBracketsData = [];\n\n      this._updateBracketsSoon.schedule();\n    }));\n\n    this._register(editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(63\n      /* matchBrackets */\n      )) {\n        this._matchBrackets = this._editor.getOption(63\n        /* matchBrackets */\n        );\n        this._decorations = this._editor.deltaDecorations(this._decorations, []);\n        this._lastBracketsData = [];\n        this._lastVersionId = 0;\n\n        this._updateBracketsSoon.schedule();\n      }\n    }));\n\n    this._register(editor.onDidBlurEditorWidget(() => {\n      this._updateBracketsSoon.schedule();\n    }));\n\n    this._register(editor.onDidFocusEditorWidget(() => {\n      this._updateBracketsSoon.schedule();\n    }));\n  }\n\n  static get(editor) {\n    return editor.getContribution(BracketMatchingController.ID);\n  }\n\n  jumpToBracket() {\n    if (!this._editor.hasModel()) {\n      return;\n    }\n\n    const model = this._editor.getModel();\n\n    const newSelections = this._editor.getSelections().map(selection => {\n      const position = selection.getStartPosition(); // find matching brackets if position is on a bracket\n\n      const brackets = model.matchBracket(position);\n      let newCursorPosition = null;\n\n      if (brackets) {\n        if (brackets[0].containsPosition(position)) {\n          newCursorPosition = brackets[1].getStartPosition();\n        } else if (brackets[1].containsPosition(position)) {\n          newCursorPosition = brackets[0].getStartPosition();\n        }\n      } else {\n        // find the enclosing brackets if the position isn't on a matching bracket\n        const enclosingBrackets = model.findEnclosingBrackets(position);\n\n        if (enclosingBrackets) {\n          newCursorPosition = enclosingBrackets[0].getStartPosition();\n        } else {\n          // no enclosing brackets, try the very first next bracket\n          const nextBracket = model.findNextBracket(position);\n\n          if (nextBracket && nextBracket.range) {\n            newCursorPosition = nextBracket.range.getStartPosition();\n          }\n        }\n      }\n\n      if (newCursorPosition) {\n        return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n      }\n\n      return new Selection(position.lineNumber, position.column, position.lineNumber, position.column);\n    });\n\n    this._editor.setSelections(newSelections);\n\n    this._editor.revealRange(newSelections[0]);\n  }\n\n  selectToBracket(selectBrackets) {\n    if (!this._editor.hasModel()) {\n      return;\n    }\n\n    const model = this._editor.getModel();\n\n    const newSelections = [];\n\n    this._editor.getSelections().forEach(selection => {\n      const position = selection.getStartPosition();\n      let brackets = model.matchBracket(position);\n\n      if (!brackets) {\n        brackets = model.findEnclosingBrackets(position);\n\n        if (!brackets) {\n          const nextBracket = model.findNextBracket(position);\n\n          if (nextBracket && nextBracket.range) {\n            brackets = model.matchBracket(nextBracket.range.getStartPosition());\n          }\n        }\n      }\n\n      let selectFrom = null;\n      let selectTo = null;\n\n      if (brackets) {\n        brackets.sort(Range.compareRangesUsingStarts);\n        const [open, close] = brackets;\n        selectFrom = selectBrackets ? open.getStartPosition() : open.getEndPosition();\n        selectTo = selectBrackets ? close.getEndPosition() : close.getStartPosition();\n\n        if (close.containsPosition(position)) {\n          // select backwards if the cursor was on the closing bracket\n          const tmp = selectFrom;\n          selectFrom = selectTo;\n          selectTo = tmp;\n        }\n      }\n\n      if (selectFrom && selectTo) {\n        newSelections.push(new Selection(selectFrom.lineNumber, selectFrom.column, selectTo.lineNumber, selectTo.column));\n      }\n    });\n\n    if (newSelections.length > 0) {\n      this._editor.setSelections(newSelections);\n\n      this._editor.revealRange(newSelections[0]);\n    }\n  }\n\n  _updateBrackets() {\n    if (this._matchBrackets === 'never') {\n      return;\n    }\n\n    this._recomputeBrackets();\n\n    let newDecorations = [],\n        newDecorationsLen = 0;\n\n    for (const bracketData of this._lastBracketsData) {\n      let brackets = bracketData.brackets;\n\n      if (brackets) {\n        newDecorations[newDecorationsLen++] = {\n          range: brackets[0],\n          options: bracketData.options\n        };\n        newDecorations[newDecorationsLen++] = {\n          range: brackets[1],\n          options: bracketData.options\n        };\n      }\n    }\n\n    this._decorations = this._editor.deltaDecorations(this._decorations, newDecorations);\n  }\n\n  _recomputeBrackets() {\n    if (!this._editor.hasModel() || !this._editor.hasWidgetFocus()) {\n      // no model or no focus => no brackets!\n      this._lastBracketsData = [];\n      this._lastVersionId = 0;\n      return;\n    }\n\n    const selections = this._editor.getSelections();\n\n    if (selections.length > 100) {\n      // no bracket matching for high numbers of selections\n      this._lastBracketsData = [];\n      this._lastVersionId = 0;\n      return;\n    }\n\n    const model = this._editor.getModel();\n\n    const versionId = model.getVersionId();\n    let previousData = [];\n\n    if (this._lastVersionId === versionId) {\n      // use the previous data only if the model is at the same version id\n      previousData = this._lastBracketsData;\n    }\n\n    let positions = [],\n        positionsLen = 0;\n\n    for (let i = 0, len = selections.length; i < len; i++) {\n      let selection = selections[i];\n\n      if (selection.isEmpty()) {\n        // will bracket match a cursor only if the selection is collapsed\n        positions[positionsLen++] = selection.getStartPosition();\n      }\n    } // sort positions for `previousData` cache hits\n\n\n    if (positions.length > 1) {\n      positions.sort(Position.compare);\n    }\n\n    let newData = [],\n        newDataLen = 0;\n    let previousIndex = 0,\n        previousLen = previousData.length;\n\n    for (let i = 0, len = positions.length; i < len; i++) {\n      let position = positions[i];\n\n      while (previousIndex < previousLen && previousData[previousIndex].position.isBefore(position)) {\n        previousIndex++;\n      }\n\n      if (previousIndex < previousLen && previousData[previousIndex].position.equals(position)) {\n        newData[newDataLen++] = previousData[previousIndex];\n      } else {\n        let brackets = model.matchBracket(position);\n        let options = BracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;\n\n        if (!brackets && this._matchBrackets === 'always') {\n          brackets = model.findEnclosingBrackets(position, 20\n          /* give at most 20ms to compute */\n          );\n          options = BracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER;\n        }\n\n        newData[newDataLen++] = new BracketsData(position, brackets, options);\n      }\n    }\n\n    this._lastBracketsData = newData;\n    this._lastVersionId = versionId;\n  }\n\n}\nBracketMatchingController.ID = 'editor.contrib.bracketMatchingController';\nBracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER = ModelDecorationOptions.register({\n  description: 'bracket-match-overview',\n  stickiness: 1\n  /* NeverGrowsWhenTypingAtEdges */\n  ,\n  className: 'bracket-match',\n  overviewRuler: {\n    color: themeColorFromId(overviewRulerBracketMatchForeground),\n    position: OverviewRulerLane.Center\n  }\n});\nBracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER = ModelDecorationOptions.register({\n  description: 'bracket-match-no-overview',\n  stickiness: 1\n  /* NeverGrowsWhenTypingAtEdges */\n  ,\n  className: 'bracket-match'\n});\nregisterEditorContribution(BracketMatchingController.ID, BracketMatchingController);\nregisterEditorAction(SelectToBracketAction);\nregisterEditorAction(JumpToBracketAction);\nregisterThemingParticipant((theme, collector) => {\n  const bracketMatchBackground = theme.getColor(editorBracketMatchBackground);\n\n  if (bracketMatchBackground) {\n    collector.addRule(`.monaco-editor .bracket-match { background-color: ${bracketMatchBackground}; }`);\n  }\n\n  const bracketMatchBorder = theme.getColor(editorBracketMatchBorder);\n\n  if (bracketMatchBorder) {\n    collector.addRule(`.monaco-editor .bracket-match { border: 1px solid ${bracketMatchBorder}; }`);\n  }\n}); // Go to menu\n\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n  group: '5_infile_nav',\n  command: {\n    id: 'editor.action.jumpToBracket',\n    title: nls.localize({\n      key: 'miGoToBracket',\n      comment: ['&& denotes a mnemonic']\n    }, \"Go to &&Bracket\")\n  },\n  order: 2\n});","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/editor/contrib/bracketMatching/bracketMatching.js"],"names":["RunOnceScheduler","Disposable","EditorAction","registerEditorAction","registerEditorContribution","Position","Range","Selection","EditorContextKeys","OverviewRulerLane","ModelDecorationOptions","editorBracketMatchBackground","editorBracketMatchBorder","nls","MenuId","MenuRegistry","registerColor","registerThemingParticipant","themeColorFromId","overviewRulerBracketMatchForeground","dark","light","hc","localize","JumpToBracketAction","constructor","id","label","alias","precondition","undefined","kbOpts","kbExpr","editorTextFocus","primary","weight","run","accessor","editor","controller","BracketMatchingController","get","jumpToBracket","SelectToBracketAction","description","args","name","schema","type","properties","default","selectBrackets","selectToBracket","BracketsData","position","brackets","options","_editor","_lastBracketsData","_lastVersionId","_decorations","_updateBracketsSoon","_register","_updateBrackets","_matchBrackets","getOption","schedule","onDidChangeCursorPosition","e","onDidChangeModelContent","onDidChangeModel","onDidChangeModelLanguageConfiguration","onDidChangeConfiguration","hasChanged","deltaDecorations","onDidBlurEditorWidget","onDidFocusEditorWidget","getContribution","ID","hasModel","model","getModel","newSelections","getSelections","map","selection","getStartPosition","matchBracket","newCursorPosition","containsPosition","enclosingBrackets","findEnclosingBrackets","nextBracket","findNextBracket","range","lineNumber","column","setSelections","revealRange","forEach","selectFrom","selectTo","sort","compareRangesUsingStarts","open","close","getEndPosition","tmp","push","length","_recomputeBrackets","newDecorations","newDecorationsLen","bracketData","hasWidgetFocus","selections","versionId","getVersionId","previousData","positions","positionsLen","i","len","isEmpty","compare","newData","newDataLen","previousIndex","previousLen","isBefore","equals","_DECORATION_OPTIONS_WITH_OVERVIEW_RULER","_DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER","register","stickiness","className","overviewRuler","color","Center","theme","collector","bracketMatchBackground","getColor","addRule","bracketMatchBorder","appendMenuItem","MenubarGoMenu","group","command","title","key","comment","order"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport './bracketMatching.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../common/model.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { editorBracketMatchBackground, editorBracketMatchBorder } from '../../common/view/editorColorRegistry.js';\nimport * as nls from '../../../nls.js';\nimport { MenuId, MenuRegistry } from '../../../platform/actions/common/actions.js';\nimport { registerColor } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant, themeColorFromId } from '../../../platform/theme/common/themeService.js';\nconst overviewRulerBracketMatchForeground = registerColor('editorOverviewRuler.bracketMatchForeground', { dark: '#A0A0A0', light: '#A0A0A0', hc: '#A0A0A0' }, nls.localize('overviewRulerBracketMatchForeground', 'Overview ruler marker color for matching brackets.'));\nclass JumpToBracketAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.jumpToBracket',\n            label: nls.localize('smartSelect.jumpBracket', \"Go to Bracket\"),\n            alias: 'Go to Bracket',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 88 /* Backslash */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        let controller = BracketMatchingController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.jumpToBracket();\n    }\n}\nclass SelectToBracketAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.selectToBracket',\n            label: nls.localize('smartSelect.selectToBracket', \"Select to Bracket\"),\n            alias: 'Select to Bracket',\n            precondition: undefined,\n            description: {\n                description: `Select to Bracket`,\n                args: [{\n                        name: 'args',\n                        schema: {\n                            type: 'object',\n                            properties: {\n                                'selectBrackets': {\n                                    type: 'boolean',\n                                    default: true\n                                }\n                            },\n                        }\n                    }]\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        const controller = BracketMatchingController.get(editor);\n        if (!controller) {\n            return;\n        }\n        let selectBrackets = true;\n        if (args && args.selectBrackets === false) {\n            selectBrackets = false;\n        }\n        controller.selectToBracket(selectBrackets);\n    }\n}\nclass BracketsData {\n    constructor(position, brackets, options) {\n        this.position = position;\n        this.brackets = brackets;\n        this.options = options;\n    }\n}\nexport class BracketMatchingController extends Disposable {\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._lastBracketsData = [];\n        this._lastVersionId = 0;\n        this._decorations = [];\n        this._updateBracketsSoon = this._register(new RunOnceScheduler(() => this._updateBrackets(), 50));\n        this._matchBrackets = this._editor.getOption(63 /* matchBrackets */);\n        this._updateBracketsSoon.schedule();\n        this._register(editor.onDidChangeCursorPosition((e) => {\n            if (this._matchBrackets === 'never') {\n                // Early exit if nothing needs to be done!\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n                return;\n            }\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidChangeModel((e) => {\n            this._lastBracketsData = [];\n            this._decorations = [];\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidChangeModelLanguageConfiguration((e) => {\n            this._lastBracketsData = [];\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(63 /* matchBrackets */)) {\n                this._matchBrackets = this._editor.getOption(63 /* matchBrackets */);\n                this._decorations = this._editor.deltaDecorations(this._decorations, []);\n                this._lastBracketsData = [];\n                this._lastVersionId = 0;\n                this._updateBracketsSoon.schedule();\n            }\n        }));\n        this._register(editor.onDidBlurEditorWidget(() => {\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidFocusEditorWidget(() => {\n            this._updateBracketsSoon.schedule();\n        }));\n    }\n    static get(editor) {\n        return editor.getContribution(BracketMatchingController.ID);\n    }\n    jumpToBracket() {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const newSelections = this._editor.getSelections().map(selection => {\n            const position = selection.getStartPosition();\n            // find matching brackets if position is on a bracket\n            const brackets = model.matchBracket(position);\n            let newCursorPosition = null;\n            if (brackets) {\n                if (brackets[0].containsPosition(position)) {\n                    newCursorPosition = brackets[1].getStartPosition();\n                }\n                else if (brackets[1].containsPosition(position)) {\n                    newCursorPosition = brackets[0].getStartPosition();\n                }\n            }\n            else {\n                // find the enclosing brackets if the position isn't on a matching bracket\n                const enclosingBrackets = model.findEnclosingBrackets(position);\n                if (enclosingBrackets) {\n                    newCursorPosition = enclosingBrackets[0].getStartPosition();\n                }\n                else {\n                    // no enclosing brackets, try the very first next bracket\n                    const nextBracket = model.findNextBracket(position);\n                    if (nextBracket && nextBracket.range) {\n                        newCursorPosition = nextBracket.range.getStartPosition();\n                    }\n                }\n            }\n            if (newCursorPosition) {\n                return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n            }\n            return new Selection(position.lineNumber, position.column, position.lineNumber, position.column);\n        });\n        this._editor.setSelections(newSelections);\n        this._editor.revealRange(newSelections[0]);\n    }\n    selectToBracket(selectBrackets) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const newSelections = [];\n        this._editor.getSelections().forEach(selection => {\n            const position = selection.getStartPosition();\n            let brackets = model.matchBracket(position);\n            if (!brackets) {\n                brackets = model.findEnclosingBrackets(position);\n                if (!brackets) {\n                    const nextBracket = model.findNextBracket(position);\n                    if (nextBracket && nextBracket.range) {\n                        brackets = model.matchBracket(nextBracket.range.getStartPosition());\n                    }\n                }\n            }\n            let selectFrom = null;\n            let selectTo = null;\n            if (brackets) {\n                brackets.sort(Range.compareRangesUsingStarts);\n                const [open, close] = brackets;\n                selectFrom = selectBrackets ? open.getStartPosition() : open.getEndPosition();\n                selectTo = selectBrackets ? close.getEndPosition() : close.getStartPosition();\n                if (close.containsPosition(position)) {\n                    // select backwards if the cursor was on the closing bracket\n                    const tmp = selectFrom;\n                    selectFrom = selectTo;\n                    selectTo = tmp;\n                }\n            }\n            if (selectFrom && selectTo) {\n                newSelections.push(new Selection(selectFrom.lineNumber, selectFrom.column, selectTo.lineNumber, selectTo.column));\n            }\n        });\n        if (newSelections.length > 0) {\n            this._editor.setSelections(newSelections);\n            this._editor.revealRange(newSelections[0]);\n        }\n    }\n    _updateBrackets() {\n        if (this._matchBrackets === 'never') {\n            return;\n        }\n        this._recomputeBrackets();\n        let newDecorations = [], newDecorationsLen = 0;\n        for (const bracketData of this._lastBracketsData) {\n            let brackets = bracketData.brackets;\n            if (brackets) {\n                newDecorations[newDecorationsLen++] = { range: brackets[0], options: bracketData.options };\n                newDecorations[newDecorationsLen++] = { range: brackets[1], options: bracketData.options };\n            }\n        }\n        this._decorations = this._editor.deltaDecorations(this._decorations, newDecorations);\n    }\n    _recomputeBrackets() {\n        if (!this._editor.hasModel() || !this._editor.hasWidgetFocus()) {\n            // no model or no focus => no brackets!\n            this._lastBracketsData = [];\n            this._lastVersionId = 0;\n            return;\n        }\n        const selections = this._editor.getSelections();\n        if (selections.length > 100) {\n            // no bracket matching for high numbers of selections\n            this._lastBracketsData = [];\n            this._lastVersionId = 0;\n            return;\n        }\n        const model = this._editor.getModel();\n        const versionId = model.getVersionId();\n        let previousData = [];\n        if (this._lastVersionId === versionId) {\n            // use the previous data only if the model is at the same version id\n            previousData = this._lastBracketsData;\n        }\n        let positions = [], positionsLen = 0;\n        for (let i = 0, len = selections.length; i < len; i++) {\n            let selection = selections[i];\n            if (selection.isEmpty()) {\n                // will bracket match a cursor only if the selection is collapsed\n                positions[positionsLen++] = selection.getStartPosition();\n            }\n        }\n        // sort positions for `previousData` cache hits\n        if (positions.length > 1) {\n            positions.sort(Position.compare);\n        }\n        let newData = [], newDataLen = 0;\n        let previousIndex = 0, previousLen = previousData.length;\n        for (let i = 0, len = positions.length; i < len; i++) {\n            let position = positions[i];\n            while (previousIndex < previousLen && previousData[previousIndex].position.isBefore(position)) {\n                previousIndex++;\n            }\n            if (previousIndex < previousLen && previousData[previousIndex].position.equals(position)) {\n                newData[newDataLen++] = previousData[previousIndex];\n            }\n            else {\n                let brackets = model.matchBracket(position);\n                let options = BracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;\n                if (!brackets && this._matchBrackets === 'always') {\n                    brackets = model.findEnclosingBrackets(position, 20 /* give at most 20ms to compute */);\n                    options = BracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER;\n                }\n                newData[newDataLen++] = new BracketsData(position, brackets, options);\n            }\n        }\n        this._lastBracketsData = newData;\n        this._lastVersionId = versionId;\n    }\n}\nBracketMatchingController.ID = 'editor.contrib.bracketMatchingController';\nBracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER = ModelDecorationOptions.register({\n    description: 'bracket-match-overview',\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n    className: 'bracket-match',\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerBracketMatchForeground),\n        position: OverviewRulerLane.Center\n    }\n});\nBracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER = ModelDecorationOptions.register({\n    description: 'bracket-match-no-overview',\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n    className: 'bracket-match'\n});\nregisterEditorContribution(BracketMatchingController.ID, BracketMatchingController);\nregisterEditorAction(SelectToBracketAction);\nregisterEditorAction(JumpToBracketAction);\nregisterThemingParticipant((theme, collector) => {\n    const bracketMatchBackground = theme.getColor(editorBracketMatchBackground);\n    if (bracketMatchBackground) {\n        collector.addRule(`.monaco-editor .bracket-match { background-color: ${bracketMatchBackground}; }`);\n    }\n    const bracketMatchBorder = theme.getColor(editorBracketMatchBorder);\n    if (bracketMatchBorder) {\n        collector.addRule(`.monaco-editor .bracket-match { border: 1px solid ${bracketMatchBorder}; }`);\n    }\n});\n// Go to menu\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n    group: '5_infile_nav',\n    command: {\n        id: 'editor.action.jumpToBracket',\n        title: nls.localize({ key: 'miGoToBracket', comment: ['&& denotes a mnemonic'] }, \"Go to &&Bracket\")\n    },\n    order: 2\n});\n"]},"metadata":{},"sourceType":"module"}