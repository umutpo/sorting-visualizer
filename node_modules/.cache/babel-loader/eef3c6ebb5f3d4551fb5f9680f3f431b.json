{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { IBulkEditService } from '../../browser/services/bulkEditService.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\nimport { EditorWorkerServiceImpl } from '../../common/services/editorWorkerServiceImpl.js';\nimport { IModeService } from '../../common/services/modeService.js';\nimport { ModeServiceImpl } from '../../common/services/modeServiceImpl.js';\nimport { IModelService } from '../../common/services/modelService.js';\nimport { ModelServiceImpl } from '../../common/services/modelServiceImpl.js';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../common/services/textResourceConfigurationService.js';\nimport { SimpleBulkEditService, SimpleConfigurationService, SimpleDialogService, SimpleNotificationService, SimpleEditorProgressService, SimpleResourceConfigurationService, SimpleResourcePropertiesService, SimpleUriLabelService, SimpleWorkspaceContextService, StandaloneCommandService, StandaloneKeybindingService, StandaloneTelemetryService, SimpleLayoutService } from './simpleServices.js';\nimport { StandaloneCodeEditorServiceImpl } from './standaloneCodeServiceImpl.js';\nimport { StandaloneThemeServiceImpl } from './standaloneThemeServiceImpl.js';\nimport { IStandaloneThemeService } from '../common/standaloneThemeService.js';\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { IInstantiationService, createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\nimport { ConsoleLogger, ILogService, LogService } from '../../../platform/log/common/log.js';\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IWorkspaceContextService } from '../../../platform/workspace/common/workspace.js';\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\nimport { IMarkerDecorationsService } from '../../common/services/markersDecorationService.js';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsServiceImpl.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\nimport { getSingletonServiceDescriptors } from '../../../platform/instantiation/common/extensions.js';\nimport { AccessibilityService } from '../../../platform/accessibility/browser/accessibilityService.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService.js';\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { UndoRedoService } from '../../../platform/undoRedo/common/undoRedoService.js';\nimport { StandaloneQuickInputServiceImpl } from './quickInput/standaloneQuickInputServiceImpl.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nimport { ILanguageConfigurationService, LanguageConfigurationService } from '../../common/modes/languageConfigurationRegistry.js';\nexport var StaticServices;\n\n(function (StaticServices) {\n  const _serviceCollection = new ServiceCollection();\n\n  class LazyStaticService {\n    constructor(serviceId, factory) {\n      this._serviceId = serviceId;\n      this._factory = factory;\n      this._value = null;\n    }\n\n    get id() {\n      return this._serviceId;\n    }\n\n    get(overrides) {\n      if (!this._value) {\n        if (overrides) {\n          this._value = overrides[this._serviceId.toString()];\n        }\n\n        if (!this._value) {\n          this._value = this._factory(overrides);\n        }\n\n        if (!this._value) {\n          throw new Error('Service ' + this._serviceId + ' is missing!');\n        }\n\n        _serviceCollection.set(this._serviceId, this._value);\n      }\n\n      return this._value;\n    }\n\n  }\n\n  StaticServices.LazyStaticService = LazyStaticService;\n  let _all = [];\n\n  function define(serviceId, factory) {\n    let r = new LazyStaticService(serviceId, factory);\n\n    _all.push(r);\n\n    return r;\n  }\n\n  function init(overrides) {\n    // Create a fresh service collection\n    let result = new ServiceCollection(); // make sure to add all services that use `registerSingleton`\n\n    for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n      result.set(id, descriptor);\n    } // Initialize the service collection with the overrides\n\n\n    for (let serviceId in overrides) {\n      if (overrides.hasOwnProperty(serviceId)) {\n        result.set(createDecorator(serviceId), overrides[serviceId]);\n      }\n    } // Make sure the same static services are present in all service collections\n\n\n    _all.forEach(service => result.set(service.id, service.get(overrides))); // Ensure the collection gets the correct instantiation service\n\n\n    let instantiationService = new InstantiationService(result, true);\n    result.set(IInstantiationService, instantiationService);\n    return [result, instantiationService];\n  }\n\n  StaticServices.init = init;\n  StaticServices.instantiationService = define(IInstantiationService, () => new InstantiationService(_serviceCollection, true));\n  const configurationServiceImpl = new SimpleConfigurationService();\n  StaticServices.configurationService = define(IConfigurationService, () => configurationServiceImpl);\n  StaticServices.resourceConfigurationService = define(ITextResourceConfigurationService, () => new SimpleResourceConfigurationService(configurationServiceImpl));\n  StaticServices.resourcePropertiesService = define(ITextResourcePropertiesService, () => new SimpleResourcePropertiesService(configurationServiceImpl));\n  StaticServices.contextService = define(IWorkspaceContextService, () => new SimpleWorkspaceContextService());\n  StaticServices.labelService = define(ILabelService, () => new SimpleUriLabelService());\n  StaticServices.telemetryService = define(ITelemetryService, () => new StandaloneTelemetryService());\n  StaticServices.dialogService = define(IDialogService, () => new SimpleDialogService());\n  StaticServices.notificationService = define(INotificationService, () => new SimpleNotificationService());\n  StaticServices.markerService = define(IMarkerService, () => new MarkerService());\n  StaticServices.modeService = define(IModeService, o => new ModeServiceImpl());\n  StaticServices.standaloneThemeService = define(IStandaloneThemeService, () => new StandaloneThemeServiceImpl());\n  StaticServices.logService = define(ILogService, () => new LogService(new ConsoleLogger()));\n  StaticServices.undoRedoService = define(IUndoRedoService, o => new UndoRedoService(StaticServices.dialogService.get(o), StaticServices.notificationService.get(o)));\n  StaticServices.languageConfigurationService = define(ILanguageConfigurationService, o => new LanguageConfigurationService(StaticServices.configurationService.get(o), StaticServices.modeService.get(o)));\n  StaticServices.modelService = define(IModelService, o => new ModelServiceImpl(StaticServices.configurationService.get(o), StaticServices.resourcePropertiesService.get(o), StaticServices.standaloneThemeService.get(o), StaticServices.logService.get(o), StaticServices.undoRedoService.get(o), StaticServices.modeService.get(o), StaticServices.languageConfigurationService.get(o)));\n  StaticServices.markerDecorationsService = define(IMarkerDecorationsService, o => new MarkerDecorationsService(StaticServices.modelService.get(o), StaticServices.markerService.get(o)));\n  StaticServices.contextKeyService = define(IContextKeyService, o => new ContextKeyService(StaticServices.configurationService.get(o)));\n  StaticServices.codeEditorService = define(ICodeEditorService, o => new StandaloneCodeEditorServiceImpl(null, StaticServices.contextKeyService.get(o), StaticServices.standaloneThemeService.get(o)));\n  StaticServices.editorProgressService = define(IEditorProgressService, () => new SimpleEditorProgressService());\n  StaticServices.storageService = define(IStorageService, () => new InMemoryStorageService());\n  StaticServices.editorWorkerService = define(IEditorWorkerService, o => new EditorWorkerServiceImpl(StaticServices.modelService.get(o), StaticServices.resourceConfigurationService.get(o), StaticServices.logService.get(o)));\n})(StaticServices || (StaticServices = {}));\n\nexport class DynamicStandaloneServices extends Disposable {\n  constructor(domElement, overrides) {\n    super();\n    const [_serviceCollection, _instantiationService] = StaticServices.init(overrides);\n    this._serviceCollection = _serviceCollection;\n    this._instantiationService = _instantiationService;\n    const configurationService = this.get(IConfigurationService);\n    const notificationService = this.get(INotificationService);\n    const telemetryService = this.get(ITelemetryService);\n    const themeService = this.get(IThemeService);\n    const logService = this.get(ILogService);\n    const contextKeyService = this.get(IContextKeyService);\n\n    let ensure = (serviceId, factory) => {\n      let value = null;\n\n      if (overrides) {\n        value = overrides[serviceId.toString()];\n      }\n\n      if (!value) {\n        value = factory();\n      }\n\n      this._serviceCollection.set(serviceId, value);\n\n      return value;\n    };\n\n    ensure(IAccessibilityService, () => new AccessibilityService(contextKeyService, configurationService));\n    ensure(IListService, () => new ListService(themeService));\n    let commandService = ensure(ICommandService, () => new StandaloneCommandService(this._instantiationService));\n    let keybindingService = ensure(IKeybindingService, () => this._register(new StandaloneKeybindingService(contextKeyService, commandService, telemetryService, notificationService, logService, domElement)));\n    let layoutService = ensure(ILayoutService, () => new SimpleLayoutService(StaticServices.codeEditorService.get(ICodeEditorService), domElement));\n    ensure(IQuickInputService, () => new StandaloneQuickInputServiceImpl(_instantiationService, StaticServices.codeEditorService.get(ICodeEditorService)));\n    let contextViewService = ensure(IContextViewService, () => this._register(new ContextViewService(layoutService)));\n    ensure(IClipboardService, () => new BrowserClipboardService());\n    ensure(IContextMenuService, () => {\n      const contextMenuService = new ContextMenuService(telemetryService, notificationService, contextViewService, keybindingService, themeService);\n      contextMenuService.configure({\n        blockMouse: false\n      }); // we do not want that in the standalone editor\n\n      return this._register(contextMenuService);\n    });\n    ensure(IMenuService, () => new MenuService(commandService));\n    ensure(IBulkEditService, () => new SimpleBulkEditService(StaticServices.modelService.get(IModelService)));\n  }\n\n  get(serviceId) {\n    let r = this._serviceCollection.get(serviceId);\n\n    if (!r) {\n      throw new Error('Missing service ' + serviceId);\n    }\n\n    return r;\n  }\n\n  set(serviceId, instance) {\n    this._serviceCollection.set(serviceId, instance);\n  }\n\n  has(serviceId) {\n    return this._serviceCollection.has(serviceId);\n  }\n\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js"],"names":["Disposable","IBulkEditService","ICodeEditorService","IEditorWorkerService","EditorWorkerServiceImpl","IModeService","ModeServiceImpl","IModelService","ModelServiceImpl","ITextResourceConfigurationService","ITextResourcePropertiesService","SimpleBulkEditService","SimpleConfigurationService","SimpleDialogService","SimpleNotificationService","SimpleEditorProgressService","SimpleResourceConfigurationService","SimpleResourcePropertiesService","SimpleUriLabelService","SimpleWorkspaceContextService","StandaloneCommandService","StandaloneKeybindingService","StandaloneTelemetryService","SimpleLayoutService","StandaloneCodeEditorServiceImpl","StandaloneThemeServiceImpl","IStandaloneThemeService","IMenuService","ICommandService","IConfigurationService","ContextKeyService","IContextKeyService","ContextMenuService","IContextMenuService","IContextViewService","ContextViewService","IDialogService","IInstantiationService","createDecorator","InstantiationService","ServiceCollection","IKeybindingService","ILabelService","IListService","ListService","ConsoleLogger","ILogService","LogService","MarkerService","IMarkerService","INotificationService","IEditorProgressService","IStorageService","InMemoryStorageService","ITelemetryService","IThemeService","IWorkspaceContextService","MenuService","IMarkerDecorationsService","MarkerDecorationsService","IAccessibilityService","ILayoutService","getSingletonServiceDescriptors","AccessibilityService","IClipboardService","BrowserClipboardService","IUndoRedoService","UndoRedoService","StandaloneQuickInputServiceImpl","IQuickInputService","ILanguageConfigurationService","LanguageConfigurationService","StaticServices","_serviceCollection","LazyStaticService","constructor","serviceId","factory","_serviceId","_factory","_value","id","get","overrides","toString","Error","set","_all","define","r","push","init","result","descriptor","hasOwnProperty","forEach","service","instantiationService","configurationServiceImpl","configurationService","resourceConfigurationService","resourcePropertiesService","contextService","labelService","telemetryService","dialogService","notificationService","markerService","modeService","o","standaloneThemeService","logService","undoRedoService","languageConfigurationService","modelService","markerDecorationsService","contextKeyService","codeEditorService","editorProgressService","storageService","editorWorkerService","DynamicStandaloneServices","domElement","_instantiationService","themeService","ensure","value","commandService","keybindingService","_register","layoutService","contextViewService","contextMenuService","configure","blockMouse","instance","has"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { IBulkEditService } from '../../browser/services/bulkEditService.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\nimport { EditorWorkerServiceImpl } from '../../common/services/editorWorkerServiceImpl.js';\nimport { IModeService } from '../../common/services/modeService.js';\nimport { ModeServiceImpl } from '../../common/services/modeServiceImpl.js';\nimport { IModelService } from '../../common/services/modelService.js';\nimport { ModelServiceImpl } from '../../common/services/modelServiceImpl.js';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../common/services/textResourceConfigurationService.js';\nimport { SimpleBulkEditService, SimpleConfigurationService, SimpleDialogService, SimpleNotificationService, SimpleEditorProgressService, SimpleResourceConfigurationService, SimpleResourcePropertiesService, SimpleUriLabelService, SimpleWorkspaceContextService, StandaloneCommandService, StandaloneKeybindingService, StandaloneTelemetryService, SimpleLayoutService } from './simpleServices.js';\nimport { StandaloneCodeEditorServiceImpl } from './standaloneCodeServiceImpl.js';\nimport { StandaloneThemeServiceImpl } from './standaloneThemeServiceImpl.js';\nimport { IStandaloneThemeService } from '../common/standaloneThemeService.js';\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { IInstantiationService, createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\nimport { ConsoleLogger, ILogService, LogService } from '../../../platform/log/common/log.js';\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IWorkspaceContextService } from '../../../platform/workspace/common/workspace.js';\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\nimport { IMarkerDecorationsService } from '../../common/services/markersDecorationService.js';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsServiceImpl.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\nimport { getSingletonServiceDescriptors } from '../../../platform/instantiation/common/extensions.js';\nimport { AccessibilityService } from '../../../platform/accessibility/browser/accessibilityService.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService.js';\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { UndoRedoService } from '../../../platform/undoRedo/common/undoRedoService.js';\nimport { StandaloneQuickInputServiceImpl } from './quickInput/standaloneQuickInputServiceImpl.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nimport { ILanguageConfigurationService, LanguageConfigurationService } from '../../common/modes/languageConfigurationRegistry.js';\nexport var StaticServices;\n(function (StaticServices) {\n    const _serviceCollection = new ServiceCollection();\n    class LazyStaticService {\n        constructor(serviceId, factory) {\n            this._serviceId = serviceId;\n            this._factory = factory;\n            this._value = null;\n        }\n        get id() { return this._serviceId; }\n        get(overrides) {\n            if (!this._value) {\n                if (overrides) {\n                    this._value = overrides[this._serviceId.toString()];\n                }\n                if (!this._value) {\n                    this._value = this._factory(overrides);\n                }\n                if (!this._value) {\n                    throw new Error('Service ' + this._serviceId + ' is missing!');\n                }\n                _serviceCollection.set(this._serviceId, this._value);\n            }\n            return this._value;\n        }\n    }\n    StaticServices.LazyStaticService = LazyStaticService;\n    let _all = [];\n    function define(serviceId, factory) {\n        let r = new LazyStaticService(serviceId, factory);\n        _all.push(r);\n        return r;\n    }\n    function init(overrides) {\n        // Create a fresh service collection\n        let result = new ServiceCollection();\n        // make sure to add all services that use `registerSingleton`\n        for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n            result.set(id, descriptor);\n        }\n        // Initialize the service collection with the overrides\n        for (let serviceId in overrides) {\n            if (overrides.hasOwnProperty(serviceId)) {\n                result.set(createDecorator(serviceId), overrides[serviceId]);\n            }\n        }\n        // Make sure the same static services are present in all service collections\n        _all.forEach(service => result.set(service.id, service.get(overrides)));\n        // Ensure the collection gets the correct instantiation service\n        let instantiationService = new InstantiationService(result, true);\n        result.set(IInstantiationService, instantiationService);\n        return [result, instantiationService];\n    }\n    StaticServices.init = init;\n    StaticServices.instantiationService = define(IInstantiationService, () => new InstantiationService(_serviceCollection, true));\n    const configurationServiceImpl = new SimpleConfigurationService();\n    StaticServices.configurationService = define(IConfigurationService, () => configurationServiceImpl);\n    StaticServices.resourceConfigurationService = define(ITextResourceConfigurationService, () => new SimpleResourceConfigurationService(configurationServiceImpl));\n    StaticServices.resourcePropertiesService = define(ITextResourcePropertiesService, () => new SimpleResourcePropertiesService(configurationServiceImpl));\n    StaticServices.contextService = define(IWorkspaceContextService, () => new SimpleWorkspaceContextService());\n    StaticServices.labelService = define(ILabelService, () => new SimpleUriLabelService());\n    StaticServices.telemetryService = define(ITelemetryService, () => new StandaloneTelemetryService());\n    StaticServices.dialogService = define(IDialogService, () => new SimpleDialogService());\n    StaticServices.notificationService = define(INotificationService, () => new SimpleNotificationService());\n    StaticServices.markerService = define(IMarkerService, () => new MarkerService());\n    StaticServices.modeService = define(IModeService, (o) => new ModeServiceImpl());\n    StaticServices.standaloneThemeService = define(IStandaloneThemeService, () => new StandaloneThemeServiceImpl());\n    StaticServices.logService = define(ILogService, () => new LogService(new ConsoleLogger()));\n    StaticServices.undoRedoService = define(IUndoRedoService, (o) => new UndoRedoService(StaticServices.dialogService.get(o), StaticServices.notificationService.get(o)));\n    StaticServices.languageConfigurationService = define(ILanguageConfigurationService, (o) => new LanguageConfigurationService(StaticServices.configurationService.get(o), StaticServices.modeService.get(o)));\n    StaticServices.modelService = define(IModelService, (o) => new ModelServiceImpl(StaticServices.configurationService.get(o), StaticServices.resourcePropertiesService.get(o), StaticServices.standaloneThemeService.get(o), StaticServices.logService.get(o), StaticServices.undoRedoService.get(o), StaticServices.modeService.get(o), StaticServices.languageConfigurationService.get(o)));\n    StaticServices.markerDecorationsService = define(IMarkerDecorationsService, (o) => new MarkerDecorationsService(StaticServices.modelService.get(o), StaticServices.markerService.get(o)));\n    StaticServices.contextKeyService = define(IContextKeyService, (o) => new ContextKeyService(StaticServices.configurationService.get(o)));\n    StaticServices.codeEditorService = define(ICodeEditorService, (o) => new StandaloneCodeEditorServiceImpl(null, StaticServices.contextKeyService.get(o), StaticServices.standaloneThemeService.get(o)));\n    StaticServices.editorProgressService = define(IEditorProgressService, () => new SimpleEditorProgressService());\n    StaticServices.storageService = define(IStorageService, () => new InMemoryStorageService());\n    StaticServices.editorWorkerService = define(IEditorWorkerService, (o) => new EditorWorkerServiceImpl(StaticServices.modelService.get(o), StaticServices.resourceConfigurationService.get(o), StaticServices.logService.get(o)));\n})(StaticServices || (StaticServices = {}));\nexport class DynamicStandaloneServices extends Disposable {\n    constructor(domElement, overrides) {\n        super();\n        const [_serviceCollection, _instantiationService] = StaticServices.init(overrides);\n        this._serviceCollection = _serviceCollection;\n        this._instantiationService = _instantiationService;\n        const configurationService = this.get(IConfigurationService);\n        const notificationService = this.get(INotificationService);\n        const telemetryService = this.get(ITelemetryService);\n        const themeService = this.get(IThemeService);\n        const logService = this.get(ILogService);\n        const contextKeyService = this.get(IContextKeyService);\n        let ensure = (serviceId, factory) => {\n            let value = null;\n            if (overrides) {\n                value = overrides[serviceId.toString()];\n            }\n            if (!value) {\n                value = factory();\n            }\n            this._serviceCollection.set(serviceId, value);\n            return value;\n        };\n        ensure(IAccessibilityService, () => new AccessibilityService(contextKeyService, configurationService));\n        ensure(IListService, () => new ListService(themeService));\n        let commandService = ensure(ICommandService, () => new StandaloneCommandService(this._instantiationService));\n        let keybindingService = ensure(IKeybindingService, () => this._register(new StandaloneKeybindingService(contextKeyService, commandService, telemetryService, notificationService, logService, domElement)));\n        let layoutService = ensure(ILayoutService, () => new SimpleLayoutService(StaticServices.codeEditorService.get(ICodeEditorService), domElement));\n        ensure(IQuickInputService, () => new StandaloneQuickInputServiceImpl(_instantiationService, StaticServices.codeEditorService.get(ICodeEditorService)));\n        let contextViewService = ensure(IContextViewService, () => this._register(new ContextViewService(layoutService)));\n        ensure(IClipboardService, () => new BrowserClipboardService());\n        ensure(IContextMenuService, () => {\n            const contextMenuService = new ContextMenuService(telemetryService, notificationService, contextViewService, keybindingService, themeService);\n            contextMenuService.configure({ blockMouse: false }); // we do not want that in the standalone editor\n            return this._register(contextMenuService);\n        });\n        ensure(IMenuService, () => new MenuService(commandService));\n        ensure(IBulkEditService, () => new SimpleBulkEditService(StaticServices.modelService.get(IModelService)));\n    }\n    get(serviceId) {\n        let r = this._serviceCollection.get(serviceId);\n        if (!r) {\n            throw new Error('Missing service ' + serviceId);\n        }\n        return r;\n    }\n    set(serviceId, instance) {\n        this._serviceCollection.set(serviceId, instance);\n    }\n    has(serviceId) {\n        return this._serviceCollection.has(serviceId);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}