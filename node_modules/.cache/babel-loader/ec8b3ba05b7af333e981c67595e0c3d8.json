{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { isFirefox } from '../../browser.js';\nimport { DataTransfers, StaticDND } from '../../dnd.js';\nimport { $, addDisposableListener, animate, getContentHeight, getContentWidth, getTopLeftOffset, scheduleAtNextAnimationFrame } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\nimport { SmoothScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { distinct, equals } from '../../../common/arrays.js';\nimport { Delayer, disposableTimeout } from '../../../common/async.js';\nimport { memoize } from '../../../common/decorators.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { getOrDefault } from '../../../common/objects.js';\nimport { Range } from '../../../common/range.js';\nimport { Scrollable } from '../../../common/scrollable.js';\nimport { RangeMap, shift } from './rangeMap.js';\nimport { RowCache } from './rowCache.js';\nconst DefaultOptions = {\n  useShadows: true,\n  verticalScrollMode: 1\n  /* Auto */\n  ,\n  setRowLineHeight: true,\n  setRowHeight: true,\n  supportDynamicHeights: false,\n  dnd: {\n    getDragElements(e) {\n      return [e];\n    },\n\n    getDragURI() {\n      return null;\n    },\n\n    onDragStart() {},\n\n    onDragOver() {\n      return false;\n    },\n\n    drop() {}\n\n  },\n  horizontalScrolling: false,\n  transformOptimization: true,\n  alwaysConsumeMouseWheel: true\n};\nexport class ElementsDragAndDropData {\n  constructor(elements) {\n    this.elements = elements;\n  }\n\n  update() {}\n\n  getData() {\n    return this.elements;\n  }\n\n}\nexport class ExternalElementsDragAndDropData {\n  constructor(elements) {\n    this.elements = elements;\n  }\n\n  update() {}\n\n  getData() {\n    return this.elements;\n  }\n\n}\nexport class NativeDragAndDropData {\n  constructor() {\n    this.types = [];\n    this.files = [];\n  }\n\n  update(dataTransfer) {\n    if (dataTransfer.types) {\n      this.types.splice(0, this.types.length, ...dataTransfer.types);\n    }\n\n    if (dataTransfer.files) {\n      this.files.splice(0, this.files.length);\n\n      for (let i = 0; i < dataTransfer.files.length; i++) {\n        const file = dataTransfer.files.item(i);\n\n        if (file && (file.size || file.type)) {\n          this.files.push(file);\n        }\n      }\n    }\n  }\n\n  getData() {\n    return {\n      types: this.types,\n      files: this.files\n    };\n  }\n\n}\n\nfunction equalsDragFeedback(f1, f2) {\n  if (Array.isArray(f1) && Array.isArray(f2)) {\n    return equals(f1, f2);\n  }\n\n  return f1 === f2;\n}\n\nclass ListViewAccessibilityProvider {\n  constructor(accessibilityProvider) {\n    if (accessibilityProvider === null || accessibilityProvider === void 0 ? void 0 : accessibilityProvider.getSetSize) {\n      this.getSetSize = accessibilityProvider.getSetSize.bind(accessibilityProvider);\n    } else {\n      this.getSetSize = (e, i, l) => l;\n    }\n\n    if (accessibilityProvider === null || accessibilityProvider === void 0 ? void 0 : accessibilityProvider.getPosInSet) {\n      this.getPosInSet = accessibilityProvider.getPosInSet.bind(accessibilityProvider);\n    } else {\n      this.getPosInSet = (e, i) => i + 1;\n    }\n\n    if (accessibilityProvider === null || accessibilityProvider === void 0 ? void 0 : accessibilityProvider.getRole) {\n      this.getRole = accessibilityProvider.getRole.bind(accessibilityProvider);\n    } else {\n      this.getRole = _ => 'listitem';\n    }\n\n    if (accessibilityProvider === null || accessibilityProvider === void 0 ? void 0 : accessibilityProvider.isChecked) {\n      this.isChecked = accessibilityProvider.isChecked.bind(accessibilityProvider);\n    } else {\n      this.isChecked = _ => undefined;\n    }\n  }\n\n}\n\nexport class ListView {\n  constructor(container, virtualDelegate, renderers) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DefaultOptions;\n    this.virtualDelegate = virtualDelegate;\n    this.domId = `list_id_${++ListView.InstanceCount}`;\n    this.renderers = new Map();\n    this.renderWidth = 0;\n    this._scrollHeight = 0;\n    this.scrollableElementUpdateDisposable = null;\n    this.scrollableElementWidthDelayer = new Delayer(50);\n    this.splicing = false;\n    this.dragOverAnimationStopDisposable = Disposable.None;\n    this.dragOverMouseY = 0;\n    this.canDrop = false;\n    this.currentDragFeedbackDisposable = Disposable.None;\n    this.onDragLeaveTimeout = Disposable.None;\n    this.disposables = new DisposableStore();\n    this._onDidChangeContentHeight = new Emitter();\n    this._horizontalScrolling = false;\n\n    if (options.horizontalScrolling && options.supportDynamicHeights) {\n      throw new Error('Horizontal scrolling and dynamic heights not supported simultaneously');\n    }\n\n    this.items = [];\n    this.itemId = 0;\n    this.rangeMap = new RangeMap();\n\n    for (const renderer of renderers) {\n      this.renderers.set(renderer.templateId, renderer);\n    }\n\n    this.cache = this.disposables.add(new RowCache(this.renderers));\n    this.lastRenderTop = 0;\n    this.lastRenderHeight = 0;\n    this.domNode = document.createElement('div');\n    this.domNode.className = 'monaco-list';\n    this.domNode.classList.add(this.domId);\n    this.domNode.tabIndex = 0;\n    this.domNode.classList.toggle('mouse-support', typeof options.mouseSupport === 'boolean' ? options.mouseSupport : true);\n    this._horizontalScrolling = getOrDefault(options, o => o.horizontalScrolling, DefaultOptions.horizontalScrolling);\n    this.domNode.classList.toggle('horizontal-scrolling', this._horizontalScrolling);\n    this.additionalScrollHeight = typeof options.additionalScrollHeight === 'undefined' ? 0 : options.additionalScrollHeight;\n    this.accessibilityProvider = new ListViewAccessibilityProvider(options.accessibilityProvider);\n    this.rowsContainer = document.createElement('div');\n    this.rowsContainer.className = 'monaco-list-rows';\n    const transformOptimization = getOrDefault(options, o => o.transformOptimization, DefaultOptions.transformOptimization);\n\n    if (transformOptimization) {\n      this.rowsContainer.style.transform = 'translate3d(0px, 0px, 0px)';\n    }\n\n    this.disposables.add(Gesture.addTarget(this.rowsContainer));\n    this.scrollable = new Scrollable(getOrDefault(options, o => o.smoothScrolling, false) ? 125 : 0, cb => scheduleAtNextAnimationFrame(cb));\n    this.scrollableElement = this.disposables.add(new SmoothScrollableElement(this.rowsContainer, {\n      alwaysConsumeMouseWheel: getOrDefault(options, o => o.alwaysConsumeMouseWheel, DefaultOptions.alwaysConsumeMouseWheel),\n      horizontal: 1\n      /* Auto */\n      ,\n      vertical: getOrDefault(options, o => o.verticalScrollMode, DefaultOptions.verticalScrollMode),\n      useShadows: getOrDefault(options, o => o.useShadows, DefaultOptions.useShadows),\n      mouseWheelScrollSensitivity: options.mouseWheelScrollSensitivity,\n      fastScrollSensitivity: options.fastScrollSensitivity\n    }, this.scrollable));\n    this.domNode.appendChild(this.scrollableElement.getDomNode());\n    container.appendChild(this.domNode);\n    this.scrollableElement.onScroll(this.onScroll, this, this.disposables);\n    this.disposables.add(addDisposableListener(this.rowsContainer, TouchEventType.Change, e => this.onTouchChange(e))); // Prevent the monaco-scrollable-element from scrolling\n    // https://github.com/microsoft/vscode/issues/44181\n\n    this.disposables.add(addDisposableListener(this.scrollableElement.getDomNode(), 'scroll', e => e.target.scrollTop = 0));\n    this.disposables.add(addDisposableListener(this.domNode, 'dragover', e => this.onDragOver(this.toDragEvent(e))));\n    this.disposables.add(addDisposableListener(this.domNode, 'drop', e => this.onDrop(this.toDragEvent(e))));\n    this.disposables.add(addDisposableListener(this.domNode, 'dragleave', e => this.onDragLeave(this.toDragEvent(e))));\n    this.disposables.add(addDisposableListener(this.domNode, 'dragend', e => this.onDragEnd(e)));\n    this.setRowLineHeight = getOrDefault(options, o => o.setRowLineHeight, DefaultOptions.setRowLineHeight);\n    this.setRowHeight = getOrDefault(options, o => o.setRowHeight, DefaultOptions.setRowHeight);\n    this.supportDynamicHeights = getOrDefault(options, o => o.supportDynamicHeights, DefaultOptions.supportDynamicHeights);\n    this.dnd = getOrDefault(options, o => o.dnd, DefaultOptions.dnd);\n    this.layout();\n  }\n\n  get contentHeight() {\n    return this.rangeMap.size;\n  }\n\n  get horizontalScrolling() {\n    return this._horizontalScrolling;\n  }\n\n  set horizontalScrolling(value) {\n    if (value === this._horizontalScrolling) {\n      return;\n    }\n\n    if (value && this.supportDynamicHeights) {\n      throw new Error('Horizontal scrolling and dynamic heights not supported simultaneously');\n    }\n\n    this._horizontalScrolling = value;\n    this.domNode.classList.toggle('horizontal-scrolling', this._horizontalScrolling);\n\n    if (this._horizontalScrolling) {\n      for (const item of this.items) {\n        this.measureItemWidth(item);\n      }\n\n      this.updateScrollWidth();\n      this.scrollableElement.setScrollDimensions({\n        width: getContentWidth(this.domNode)\n      });\n      this.rowsContainer.style.width = `${Math.max(this.scrollWidth || 0, this.renderWidth)}px`;\n    } else {\n      this.scrollableElementWidthDelayer.cancel();\n      this.scrollableElement.setScrollDimensions({\n        width: this.renderWidth,\n        scrollWidth: this.renderWidth\n      });\n      this.rowsContainer.style.width = '';\n    }\n  }\n\n  updateOptions(options) {\n    if (options.additionalScrollHeight !== undefined) {\n      this.additionalScrollHeight = options.additionalScrollHeight;\n      this.scrollableElement.setScrollDimensions({\n        scrollHeight: this.scrollHeight\n      });\n    }\n\n    if (options.smoothScrolling !== undefined) {\n      this.scrollable.setSmoothScrollDuration(options.smoothScrolling ? 125 : 0);\n    }\n\n    if (options.horizontalScrolling !== undefined) {\n      this.horizontalScrolling = options.horizontalScrolling;\n    }\n\n    if (options.mouseWheelScrollSensitivity !== undefined) {\n      this.scrollableElement.updateOptions({\n        mouseWheelScrollSensitivity: options.mouseWheelScrollSensitivity\n      });\n    }\n\n    if (options.fastScrollSensitivity !== undefined) {\n      this.scrollableElement.updateOptions({\n        fastScrollSensitivity: options.fastScrollSensitivity\n      });\n    }\n  }\n\n  splice(start, deleteCount) {\n    let elements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n    if (this.splicing) {\n      throw new Error('Can\\'t run recursive splices.');\n    }\n\n    this.splicing = true;\n\n    try {\n      return this._splice(start, deleteCount, elements);\n    } finally {\n      this.splicing = false;\n\n      this._onDidChangeContentHeight.fire(this.contentHeight);\n    }\n  }\n\n  _splice(start, deleteCount) {\n    let elements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    const previousRenderRange = this.getRenderRange(this.lastRenderTop, this.lastRenderHeight);\n    const deleteRange = {\n      start,\n      end: start + deleteCount\n    };\n    const removeRange = Range.intersect(previousRenderRange, deleteRange); // try to reuse rows, avoid removing them from DOM\n\n    const rowsToDispose = new Map();\n\n    for (let i = removeRange.start; i < removeRange.end; i++) {\n      const item = this.items[i];\n      item.dragStartDisposable.dispose();\n\n      if (item.row) {\n        let rows = rowsToDispose.get(item.templateId);\n\n        if (!rows) {\n          rows = [];\n          rowsToDispose.set(item.templateId, rows);\n        }\n\n        const renderer = this.renderers.get(item.templateId);\n\n        if (renderer && renderer.disposeElement) {\n          renderer.disposeElement(item.element, i, item.row.templateData, item.size);\n        }\n\n        rows.push(item.row);\n      }\n\n      item.row = null;\n    }\n\n    const previousRestRange = {\n      start: start + deleteCount,\n      end: this.items.length\n    };\n    const previousRenderedRestRange = Range.intersect(previousRestRange, previousRenderRange);\n    const previousUnrenderedRestRanges = Range.relativeComplement(previousRestRange, previousRenderRange);\n    const inserted = elements.map(element => ({\n      id: String(this.itemId++),\n      element,\n      templateId: this.virtualDelegate.getTemplateId(element),\n      size: this.virtualDelegate.getHeight(element),\n      width: undefined,\n      hasDynamicHeight: !!this.virtualDelegate.hasDynamicHeight && this.virtualDelegate.hasDynamicHeight(element),\n      lastDynamicHeightWidth: undefined,\n      row: null,\n      uri: undefined,\n      dropTarget: false,\n      dragStartDisposable: Disposable.None\n    }));\n    let deleted; // TODO@joao: improve this optimization to catch even more cases\n\n    if (start === 0 && deleteCount >= this.items.length) {\n      this.rangeMap = new RangeMap();\n      this.rangeMap.splice(0, 0, inserted);\n      deleted = this.items;\n      this.items = inserted;\n    } else {\n      this.rangeMap.splice(start, deleteCount, inserted);\n      deleted = this.items.splice(start, deleteCount, ...inserted);\n    }\n\n    const delta = elements.length - deleteCount;\n    const renderRange = this.getRenderRange(this.lastRenderTop, this.lastRenderHeight);\n    const renderedRestRange = shift(previousRenderedRestRange, delta);\n    const updateRange = Range.intersect(renderRange, renderedRestRange);\n\n    for (let i = updateRange.start; i < updateRange.end; i++) {\n      this.updateItemInDOM(this.items[i], i);\n    }\n\n    const removeRanges = Range.relativeComplement(renderedRestRange, renderRange);\n\n    for (const range of removeRanges) {\n      for (let i = range.start; i < range.end; i++) {\n        this.removeItemFromDOM(i);\n      }\n    }\n\n    const unrenderedRestRanges = previousUnrenderedRestRanges.map(r => shift(r, delta));\n    const elementsRange = {\n      start,\n      end: start + elements.length\n    };\n    const insertRanges = [elementsRange, ...unrenderedRestRanges].map(r => Range.intersect(renderRange, r));\n    const beforeElement = this.getNextToLastElement(insertRanges);\n\n    for (const range of insertRanges) {\n      for (let i = range.start; i < range.end; i++) {\n        const item = this.items[i];\n        const rows = rowsToDispose.get(item.templateId);\n        const row = rows === null || rows === void 0 ? void 0 : rows.pop();\n        this.insertItemInDOM(i, beforeElement, row);\n      }\n    }\n\n    for (const rows of rowsToDispose.values()) {\n      for (const row of rows) {\n        this.cache.release(row);\n      }\n    }\n\n    this.eventuallyUpdateScrollDimensions();\n\n    if (this.supportDynamicHeights) {\n      this._rerender(this.scrollTop, this.renderHeight);\n    }\n\n    return deleted.map(i => i.element);\n  }\n\n  eventuallyUpdateScrollDimensions() {\n    this._scrollHeight = this.contentHeight;\n    this.rowsContainer.style.height = `${this._scrollHeight}px`;\n\n    if (!this.scrollableElementUpdateDisposable) {\n      this.scrollableElementUpdateDisposable = scheduleAtNextAnimationFrame(() => {\n        this.scrollableElement.setScrollDimensions({\n          scrollHeight: this.scrollHeight\n        });\n        this.updateScrollWidth();\n        this.scrollableElementUpdateDisposable = null;\n      });\n    }\n  }\n\n  eventuallyUpdateScrollWidth() {\n    if (!this.horizontalScrolling) {\n      this.scrollableElementWidthDelayer.cancel();\n      return;\n    }\n\n    this.scrollableElementWidthDelayer.trigger(() => this.updateScrollWidth());\n  }\n\n  updateScrollWidth() {\n    if (!this.horizontalScrolling) {\n      return;\n    }\n\n    let scrollWidth = 0;\n\n    for (const item of this.items) {\n      if (typeof item.width !== 'undefined') {\n        scrollWidth = Math.max(scrollWidth, item.width);\n      }\n    }\n\n    this.scrollWidth = scrollWidth;\n    this.scrollableElement.setScrollDimensions({\n      scrollWidth: scrollWidth === 0 ? 0 : scrollWidth + 10\n    });\n  }\n\n  rerender() {\n    if (!this.supportDynamicHeights) {\n      return;\n    }\n\n    for (const item of this.items) {\n      item.lastDynamicHeightWidth = undefined;\n    }\n\n    this._rerender(this.lastRenderTop, this.lastRenderHeight);\n  }\n\n  get length() {\n    return this.items.length;\n  }\n\n  get renderHeight() {\n    const scrollDimensions = this.scrollableElement.getScrollDimensions();\n    return scrollDimensions.height;\n  }\n\n  element(index) {\n    return this.items[index].element;\n  }\n\n  domElement(index) {\n    const row = this.items[index].row;\n    return row && row.domNode;\n  }\n\n  elementHeight(index) {\n    return this.items[index].size;\n  }\n\n  elementTop(index) {\n    return this.rangeMap.positionAt(index);\n  }\n\n  indexAt(position) {\n    return this.rangeMap.indexAt(position);\n  }\n\n  indexAfter(position) {\n    return this.rangeMap.indexAfter(position);\n  }\n\n  layout(height, width) {\n    let scrollDimensions = {\n      height: typeof height === 'number' ? height : getContentHeight(this.domNode)\n    };\n\n    if (this.scrollableElementUpdateDisposable) {\n      this.scrollableElementUpdateDisposable.dispose();\n      this.scrollableElementUpdateDisposable = null;\n      scrollDimensions.scrollHeight = this.scrollHeight;\n    }\n\n    this.scrollableElement.setScrollDimensions(scrollDimensions);\n\n    if (typeof width !== 'undefined') {\n      this.renderWidth = width;\n\n      if (this.supportDynamicHeights) {\n        this._rerender(this.scrollTop, this.renderHeight);\n      }\n    }\n\n    if (this.horizontalScrolling) {\n      this.scrollableElement.setScrollDimensions({\n        width: typeof width === 'number' ? width : getContentWidth(this.domNode)\n      });\n    }\n  } // Render\n\n\n  render(previousRenderRange, renderTop, renderHeight, renderLeft, scrollWidth) {\n    let updateItemsInDOM = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    const renderRange = this.getRenderRange(renderTop, renderHeight);\n    const rangesToInsert = Range.relativeComplement(renderRange, previousRenderRange);\n    const rangesToRemove = Range.relativeComplement(previousRenderRange, renderRange);\n    const beforeElement = this.getNextToLastElement(rangesToInsert);\n\n    if (updateItemsInDOM) {\n      const rangesToUpdate = Range.intersect(previousRenderRange, renderRange);\n\n      for (let i = rangesToUpdate.start; i < rangesToUpdate.end; i++) {\n        this.updateItemInDOM(this.items[i], i);\n      }\n    }\n\n    for (const range of rangesToInsert) {\n      for (let i = range.start; i < range.end; i++) {\n        this.insertItemInDOM(i, beforeElement);\n      }\n    }\n\n    for (const range of rangesToRemove) {\n      for (let i = range.start; i < range.end; i++) {\n        this.removeItemFromDOM(i);\n      }\n    }\n\n    if (renderLeft !== undefined) {\n      this.rowsContainer.style.left = `-${renderLeft}px`;\n    }\n\n    this.rowsContainer.style.top = `-${renderTop}px`;\n\n    if (this.horizontalScrolling && scrollWidth !== undefined) {\n      this.rowsContainer.style.width = `${Math.max(scrollWidth, this.renderWidth)}px`;\n    }\n\n    this.lastRenderTop = renderTop;\n    this.lastRenderHeight = renderHeight;\n  } // DOM operations\n\n\n  insertItemInDOM(index, beforeElement, row) {\n    const item = this.items[index];\n\n    if (!item.row) {\n      item.row = row !== null && row !== void 0 ? row : this.cache.alloc(item.templateId);\n    }\n\n    const role = this.accessibilityProvider.getRole(item.element) || 'listitem';\n    item.row.domNode.setAttribute('role', role);\n    const checked = this.accessibilityProvider.isChecked(item.element);\n\n    if (typeof checked !== 'undefined') {\n      item.row.domNode.setAttribute('aria-checked', String(!!checked));\n    }\n\n    if (!item.row.domNode.parentElement) {\n      if (beforeElement) {\n        this.rowsContainer.insertBefore(item.row.domNode, beforeElement);\n      } else {\n        this.rowsContainer.appendChild(item.row.domNode);\n      }\n    }\n\n    this.updateItemInDOM(item, index);\n    const renderer = this.renderers.get(item.templateId);\n\n    if (!renderer) {\n      throw new Error(`No renderer found for template id ${item.templateId}`);\n    }\n\n    if (renderer) {\n      renderer.renderElement(item.element, index, item.row.templateData, item.size);\n    }\n\n    const uri = this.dnd.getDragURI(item.element);\n    item.dragStartDisposable.dispose();\n    item.row.domNode.draggable = !!uri;\n\n    if (uri) {\n      item.dragStartDisposable = addDisposableListener(item.row.domNode, 'dragstart', event => this.onDragStart(item.element, uri, event));\n    }\n\n    if (this.horizontalScrolling) {\n      this.measureItemWidth(item);\n      this.eventuallyUpdateScrollWidth();\n    }\n  }\n\n  measureItemWidth(item) {\n    if (!item.row || !item.row.domNode) {\n      return;\n    }\n\n    item.row.domNode.style.width = isFirefox ? '-moz-fit-content' : 'fit-content';\n    item.width = getContentWidth(item.row.domNode);\n    const style = window.getComputedStyle(item.row.domNode);\n\n    if (style.paddingLeft) {\n      item.width += parseFloat(style.paddingLeft);\n    }\n\n    if (style.paddingRight) {\n      item.width += parseFloat(style.paddingRight);\n    }\n\n    item.row.domNode.style.width = '';\n  }\n\n  updateItemInDOM(item, index) {\n    item.row.domNode.style.top = `${this.elementTop(index)}px`;\n\n    if (this.setRowHeight) {\n      item.row.domNode.style.height = `${item.size}px`;\n    }\n\n    if (this.setRowLineHeight) {\n      item.row.domNode.style.lineHeight = `${item.size}px`;\n    }\n\n    item.row.domNode.setAttribute('data-index', `${index}`);\n    item.row.domNode.setAttribute('data-last-element', index === this.length - 1 ? 'true' : 'false');\n    item.row.domNode.setAttribute('data-parity', index % 2 === 0 ? 'even' : 'odd');\n    item.row.domNode.setAttribute('aria-setsize', String(this.accessibilityProvider.getSetSize(item.element, index, this.length)));\n    item.row.domNode.setAttribute('aria-posinset', String(this.accessibilityProvider.getPosInSet(item.element, index)));\n    item.row.domNode.setAttribute('id', this.getElementDomId(index));\n    item.row.domNode.classList.toggle('drop-target', item.dropTarget);\n  }\n\n  removeItemFromDOM(index) {\n    const item = this.items[index];\n    item.dragStartDisposable.dispose();\n\n    if (item.row) {\n      const renderer = this.renderers.get(item.templateId);\n\n      if (renderer && renderer.disposeElement) {\n        renderer.disposeElement(item.element, index, item.row.templateData, item.size);\n      }\n\n      this.cache.release(item.row);\n      item.row = null;\n    }\n\n    if (this.horizontalScrolling) {\n      this.eventuallyUpdateScrollWidth();\n    }\n  }\n\n  getScrollTop() {\n    const scrollPosition = this.scrollableElement.getScrollPosition();\n    return scrollPosition.scrollTop;\n  }\n\n  setScrollTop(scrollTop, reuseAnimation) {\n    if (this.scrollableElementUpdateDisposable) {\n      this.scrollableElementUpdateDisposable.dispose();\n      this.scrollableElementUpdateDisposable = null;\n      this.scrollableElement.setScrollDimensions({\n        scrollHeight: this.scrollHeight\n      });\n    }\n\n    this.scrollableElement.setScrollPosition({\n      scrollTop,\n      reuseAnimation\n    });\n  }\n\n  get scrollTop() {\n    return this.getScrollTop();\n  }\n\n  set scrollTop(scrollTop) {\n    this.setScrollTop(scrollTop);\n  }\n\n  get scrollHeight() {\n    return this._scrollHeight + (this.horizontalScrolling ? 10 : 0) + this.additionalScrollHeight;\n  } // Events\n\n\n  get onMouseClick() {\n    return Event.map(this.disposables.add(new DomEmitter(this.domNode, 'click')).event, e => this.toMouseEvent(e));\n  }\n\n  get onMouseDblClick() {\n    return Event.map(this.disposables.add(new DomEmitter(this.domNode, 'dblclick')).event, e => this.toMouseEvent(e));\n  }\n\n  get onMouseMiddleClick() {\n    return Event.filter(Event.map(this.disposables.add(new DomEmitter(this.domNode, 'auxclick')).event, e => this.toMouseEvent(e)), e => e.browserEvent.button === 1);\n  }\n\n  get onMouseDown() {\n    return Event.map(this.disposables.add(new DomEmitter(this.domNode, 'mousedown')).event, e => this.toMouseEvent(e));\n  }\n\n  get onContextMenu() {\n    return Event.any(Event.map(this.disposables.add(new DomEmitter(this.domNode, 'contextmenu')).event, e => this.toMouseEvent(e)), Event.map(this.disposables.add(new DomEmitter(this.domNode, TouchEventType.Contextmenu)).event, e => this.toGestureEvent(e)));\n  }\n\n  get onTouchStart() {\n    return Event.map(this.disposables.add(new DomEmitter(this.domNode, 'touchstart')).event, e => this.toTouchEvent(e));\n  }\n\n  get onTap() {\n    return Event.map(this.disposables.add(new DomEmitter(this.rowsContainer, TouchEventType.Tap)).event, e => this.toGestureEvent(e));\n  }\n\n  toMouseEvent(browserEvent) {\n    const index = this.getItemIndexFromEventTarget(browserEvent.target || null);\n    const item = typeof index === 'undefined' ? undefined : this.items[index];\n    const element = item && item.element;\n    return {\n      browserEvent,\n      index,\n      element\n    };\n  }\n\n  toTouchEvent(browserEvent) {\n    const index = this.getItemIndexFromEventTarget(browserEvent.target || null);\n    const item = typeof index === 'undefined' ? undefined : this.items[index];\n    const element = item && item.element;\n    return {\n      browserEvent,\n      index,\n      element\n    };\n  }\n\n  toGestureEvent(browserEvent) {\n    const index = this.getItemIndexFromEventTarget(browserEvent.initialTarget || null);\n    const item = typeof index === 'undefined' ? undefined : this.items[index];\n    const element = item && item.element;\n    return {\n      browserEvent,\n      index,\n      element\n    };\n  }\n\n  toDragEvent(browserEvent) {\n    const index = this.getItemIndexFromEventTarget(browserEvent.target || null);\n    const item = typeof index === 'undefined' ? undefined : this.items[index];\n    const element = item && item.element;\n    return {\n      browserEvent,\n      index,\n      element\n    };\n  }\n\n  onScroll(e) {\n    try {\n      const previousRenderRange = this.getRenderRange(this.lastRenderTop, this.lastRenderHeight);\n      this.render(previousRenderRange, e.scrollTop, e.height, e.scrollLeft, e.scrollWidth);\n\n      if (this.supportDynamicHeights) {\n        this._rerender(e.scrollTop, e.height, e.inSmoothScrolling);\n      }\n    } catch (err) {\n      console.error('Got bad scroll event:', e);\n      throw err;\n    }\n  }\n\n  onTouchChange(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.scrollTop -= event.translationY;\n  } // DND\n\n\n  onDragStart(element, uri, event) {\n    if (!event.dataTransfer) {\n      return;\n    }\n\n    const elements = this.dnd.getDragElements(element);\n    event.dataTransfer.effectAllowed = 'copyMove';\n    event.dataTransfer.setData(DataTransfers.TEXT, uri);\n\n    if (event.dataTransfer.setDragImage) {\n      let label;\n\n      if (this.dnd.getDragLabel) {\n        label = this.dnd.getDragLabel(elements, event);\n      }\n\n      if (typeof label === 'undefined') {\n        label = String(elements.length);\n      }\n\n      const dragImage = $('.monaco-drag-image');\n      dragImage.textContent = label;\n      document.body.appendChild(dragImage);\n      event.dataTransfer.setDragImage(dragImage, -10, -10);\n      setTimeout(() => document.body.removeChild(dragImage), 0);\n    }\n\n    this.currentDragData = new ElementsDragAndDropData(elements);\n    StaticDND.CurrentDragAndDropData = new ExternalElementsDragAndDropData(elements);\n\n    if (this.dnd.onDragStart) {\n      this.dnd.onDragStart(this.currentDragData, event);\n    }\n  }\n\n  onDragOver(event) {\n    event.browserEvent.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n\n    this.onDragLeaveTimeout.dispose();\n\n    if (StaticDND.CurrentDragAndDropData && StaticDND.CurrentDragAndDropData.getData() === 'vscode-ui') {\n      return false;\n    }\n\n    this.setupDragAndDropScrollTopAnimation(event.browserEvent);\n\n    if (!event.browserEvent.dataTransfer) {\n      return false;\n    } // Drag over from outside\n\n\n    if (!this.currentDragData) {\n      if (StaticDND.CurrentDragAndDropData) {\n        // Drag over from another list\n        this.currentDragData = StaticDND.CurrentDragAndDropData;\n      } else {\n        // Drag over from the desktop\n        if (!event.browserEvent.dataTransfer.types) {\n          return false;\n        }\n\n        this.currentDragData = new NativeDragAndDropData();\n      }\n    }\n\n    const result = this.dnd.onDragOver(this.currentDragData, event.element, event.index, event.browserEvent);\n    this.canDrop = typeof result === 'boolean' ? result : result.accept;\n\n    if (!this.canDrop) {\n      this.currentDragFeedback = undefined;\n      this.currentDragFeedbackDisposable.dispose();\n      return false;\n    }\n\n    event.browserEvent.dataTransfer.dropEffect = typeof result !== 'boolean' && result.effect === 0\n    /* Copy */\n    ? 'copy' : 'move';\n    let feedback;\n\n    if (typeof result !== 'boolean' && result.feedback) {\n      feedback = result.feedback;\n    } else {\n      if (typeof event.index === 'undefined') {\n        feedback = [-1];\n      } else {\n        feedback = [event.index];\n      }\n    } // sanitize feedback list\n\n\n    feedback = distinct(feedback).filter(i => i >= -1 && i < this.length).sort((a, b) => a - b);\n    feedback = feedback[0] === -1 ? [-1] : feedback;\n\n    if (equalsDragFeedback(this.currentDragFeedback, feedback)) {\n      return true;\n    }\n\n    this.currentDragFeedback = feedback;\n    this.currentDragFeedbackDisposable.dispose();\n\n    if (feedback[0] === -1) {\n      // entire list feedback\n      this.domNode.classList.add('drop-target');\n      this.rowsContainer.classList.add('drop-target');\n      this.currentDragFeedbackDisposable = toDisposable(() => {\n        this.domNode.classList.remove('drop-target');\n        this.rowsContainer.classList.remove('drop-target');\n      });\n    } else {\n      for (const index of feedback) {\n        const item = this.items[index];\n        item.dropTarget = true;\n\n        if (item.row) {\n          item.row.domNode.classList.add('drop-target');\n        }\n      }\n\n      this.currentDragFeedbackDisposable = toDisposable(() => {\n        for (const index of feedback) {\n          const item = this.items[index];\n          item.dropTarget = false;\n\n          if (item.row) {\n            item.row.domNode.classList.remove('drop-target');\n          }\n        }\n      });\n    }\n\n    return true;\n  }\n\n  onDragLeave(event) {\n    var _a, _b;\n\n    this.onDragLeaveTimeout.dispose();\n    this.onDragLeaveTimeout = disposableTimeout(() => this.clearDragOverFeedback(), 100);\n\n    if (this.currentDragData) {\n      (_b = (_a = this.dnd).onDragLeave) === null || _b === void 0 ? void 0 : _b.call(_a, this.currentDragData, event.element, event.index, event.browserEvent);\n    }\n  }\n\n  onDrop(event) {\n    if (!this.canDrop) {\n      return;\n    }\n\n    const dragData = this.currentDragData;\n    this.teardownDragAndDropScrollTopAnimation();\n    this.clearDragOverFeedback();\n    this.currentDragData = undefined;\n    StaticDND.CurrentDragAndDropData = undefined;\n\n    if (!dragData || !event.browserEvent.dataTransfer) {\n      return;\n    }\n\n    event.browserEvent.preventDefault();\n    dragData.update(event.browserEvent.dataTransfer);\n    this.dnd.drop(dragData, event.element, event.index, event.browserEvent);\n  }\n\n  onDragEnd(event) {\n    this.canDrop = false;\n    this.teardownDragAndDropScrollTopAnimation();\n    this.clearDragOverFeedback();\n    this.currentDragData = undefined;\n    StaticDND.CurrentDragAndDropData = undefined;\n\n    if (this.dnd.onDragEnd) {\n      this.dnd.onDragEnd(event);\n    }\n  }\n\n  clearDragOverFeedback() {\n    this.currentDragFeedback = undefined;\n    this.currentDragFeedbackDisposable.dispose();\n    this.currentDragFeedbackDisposable = Disposable.None;\n  } // DND scroll top animation\n\n\n  setupDragAndDropScrollTopAnimation(event) {\n    if (!this.dragOverAnimationDisposable) {\n      const viewTop = getTopLeftOffset(this.domNode).top;\n      this.dragOverAnimationDisposable = animate(this.animateDragAndDropScrollTop.bind(this, viewTop));\n    }\n\n    this.dragOverAnimationStopDisposable.dispose();\n    this.dragOverAnimationStopDisposable = disposableTimeout(() => {\n      if (this.dragOverAnimationDisposable) {\n        this.dragOverAnimationDisposable.dispose();\n        this.dragOverAnimationDisposable = undefined;\n      }\n    }, 1000);\n    this.dragOverMouseY = event.pageY;\n  }\n\n  animateDragAndDropScrollTop(viewTop) {\n    if (this.dragOverMouseY === undefined) {\n      return;\n    }\n\n    const diff = this.dragOverMouseY - viewTop;\n    const upperLimit = this.renderHeight - 35;\n\n    if (diff < 35) {\n      this.scrollTop += Math.max(-14, Math.floor(0.3 * (diff - 35)));\n    } else if (diff > upperLimit) {\n      this.scrollTop += Math.min(14, Math.floor(0.3 * (diff - upperLimit)));\n    }\n  }\n\n  teardownDragAndDropScrollTopAnimation() {\n    this.dragOverAnimationStopDisposable.dispose();\n\n    if (this.dragOverAnimationDisposable) {\n      this.dragOverAnimationDisposable.dispose();\n      this.dragOverAnimationDisposable = undefined;\n    }\n  } // Util\n\n\n  getItemIndexFromEventTarget(target) {\n    const scrollableElement = this.scrollableElement.getDomNode();\n    let element = target;\n\n    while (element instanceof HTMLElement && element !== this.rowsContainer && scrollableElement.contains(element)) {\n      const rawIndex = element.getAttribute('data-index');\n\n      if (rawIndex) {\n        const index = Number(rawIndex);\n\n        if (!isNaN(index)) {\n          return index;\n        }\n      }\n\n      element = element.parentElement;\n    }\n\n    return undefined;\n  }\n\n  getRenderRange(renderTop, renderHeight) {\n    return {\n      start: this.rangeMap.indexAt(renderTop),\n      end: this.rangeMap.indexAfter(renderTop + renderHeight - 1)\n    };\n  }\n  /**\n   * Given a stable rendered state, checks every rendered element whether it needs\n   * to be probed for dynamic height. Adjusts scroll height and top if necessary.\n   */\n\n\n  _rerender(renderTop, renderHeight, inSmoothScrolling) {\n    const previousRenderRange = this.getRenderRange(renderTop, renderHeight); // Let's remember the second element's position, this helps in scrolling up\n    // and preserving a linear upwards scroll movement\n\n    let anchorElementIndex;\n    let anchorElementTopDelta;\n\n    if (renderTop === this.elementTop(previousRenderRange.start)) {\n      anchorElementIndex = previousRenderRange.start;\n      anchorElementTopDelta = 0;\n    } else if (previousRenderRange.end - previousRenderRange.start > 1) {\n      anchorElementIndex = previousRenderRange.start + 1;\n      anchorElementTopDelta = this.elementTop(anchorElementIndex) - renderTop;\n    }\n\n    let heightDiff = 0;\n\n    while (true) {\n      const renderRange = this.getRenderRange(renderTop, renderHeight);\n      let didChange = false;\n\n      for (let i = renderRange.start; i < renderRange.end; i++) {\n        const diff = this.probeDynamicHeight(i);\n\n        if (diff !== 0) {\n          this.rangeMap.splice(i, 1, [this.items[i]]);\n        }\n\n        heightDiff += diff;\n        didChange = didChange || diff !== 0;\n      }\n\n      if (!didChange) {\n        if (heightDiff !== 0) {\n          this.eventuallyUpdateScrollDimensions();\n        }\n\n        const unrenderRanges = Range.relativeComplement(previousRenderRange, renderRange);\n\n        for (const range of unrenderRanges) {\n          for (let i = range.start; i < range.end; i++) {\n            if (this.items[i].row) {\n              this.removeItemFromDOM(i);\n            }\n          }\n        }\n\n        const renderRanges = Range.relativeComplement(renderRange, previousRenderRange);\n\n        for (const range of renderRanges) {\n          for (let i = range.start; i < range.end; i++) {\n            const afterIndex = i + 1;\n            const beforeRow = afterIndex < this.items.length ? this.items[afterIndex].row : null;\n            const beforeElement = beforeRow ? beforeRow.domNode : null;\n            this.insertItemInDOM(i, beforeElement);\n          }\n        }\n\n        for (let i = renderRange.start; i < renderRange.end; i++) {\n          if (this.items[i].row) {\n            this.updateItemInDOM(this.items[i], i);\n          }\n        }\n\n        if (typeof anchorElementIndex === 'number') {\n          // To compute a destination scroll top, we need to take into account the current smooth scrolling\n          // animation, and then reuse it with a new target (to avoid prolonging the scroll)\n          // See https://github.com/microsoft/vscode/issues/104144\n          // See https://github.com/microsoft/vscode/pull/104284\n          // See https://github.com/microsoft/vscode/issues/107704\n          const deltaScrollTop = this.scrollable.getFutureScrollPosition().scrollTop - renderTop;\n          const newScrollTop = this.elementTop(anchorElementIndex) - anchorElementTopDelta + deltaScrollTop;\n          this.setScrollTop(newScrollTop, inSmoothScrolling);\n        }\n\n        this._onDidChangeContentHeight.fire(this.contentHeight);\n\n        return;\n      }\n    }\n  }\n\n  probeDynamicHeight(index) {\n    const item = this.items[index];\n\n    if (!!this.virtualDelegate.getDynamicHeight) {\n      const newSize = this.virtualDelegate.getDynamicHeight(item.element);\n\n      if (newSize !== null) {\n        const size = item.size;\n        item.size = newSize;\n        item.lastDynamicHeightWidth = this.renderWidth;\n        return newSize - size;\n      }\n    }\n\n    if (!item.hasDynamicHeight || item.lastDynamicHeightWidth === this.renderWidth) {\n      return 0;\n    }\n\n    if (!!this.virtualDelegate.hasDynamicHeight && !this.virtualDelegate.hasDynamicHeight(item.element)) {\n      return 0;\n    }\n\n    const size = item.size;\n\n    if (!this.setRowHeight && item.row) {\n      let newSize = item.row.domNode.offsetHeight;\n      item.size = newSize;\n      item.lastDynamicHeightWidth = this.renderWidth;\n      return newSize - size;\n    }\n\n    const row = this.cache.alloc(item.templateId);\n    row.domNode.style.height = '';\n    this.rowsContainer.appendChild(row.domNode);\n    const renderer = this.renderers.get(item.templateId);\n\n    if (renderer) {\n      renderer.renderElement(item.element, index, row.templateData, undefined);\n\n      if (renderer.disposeElement) {\n        renderer.disposeElement(item.element, index, row.templateData, undefined);\n      }\n    }\n\n    item.size = row.domNode.offsetHeight;\n\n    if (this.virtualDelegate.setDynamicHeight) {\n      this.virtualDelegate.setDynamicHeight(item.element, item.size);\n    }\n\n    item.lastDynamicHeightWidth = this.renderWidth;\n    this.rowsContainer.removeChild(row.domNode);\n    this.cache.release(row);\n    return item.size - size;\n  }\n\n  getNextToLastElement(ranges) {\n    const lastRange = ranges[ranges.length - 1];\n\n    if (!lastRange) {\n      return null;\n    }\n\n    const nextToLastItem = this.items[lastRange.end];\n\n    if (!nextToLastItem) {\n      return null;\n    }\n\n    if (!nextToLastItem.row) {\n      return null;\n    }\n\n    return nextToLastItem.row.domNode;\n  }\n\n  getElementDomId(index) {\n    return `${this.domId}_${index}`;\n  } // Dispose\n\n\n  dispose() {\n    if (this.items) {\n      for (const item of this.items) {\n        if (item.row) {\n          const renderer = this.renderers.get(item.row.templateId);\n\n          if (renderer) {\n            if (renderer.disposeElement) {\n              renderer.disposeElement(item.element, -1, item.row.templateData, undefined);\n            }\n\n            renderer.disposeTemplate(item.row.templateData);\n          }\n        }\n      }\n\n      this.items = [];\n    }\n\n    if (this.domNode && this.domNode.parentNode) {\n      this.domNode.parentNode.removeChild(this.domNode);\n    }\n\n    dispose(this.disposables);\n  }\n\n}\nListView.InstanceCount = 0;\n\n__decorate([memoize], ListView.prototype, \"onMouseClick\", null);\n\n__decorate([memoize], ListView.prototype, \"onMouseDblClick\", null);\n\n__decorate([memoize], ListView.prototype, \"onMouseMiddleClick\", null);\n\n__decorate([memoize], ListView.prototype, \"onMouseDown\", null);\n\n__decorate([memoize], ListView.prototype, \"onContextMenu\", null);\n\n__decorate([memoize], ListView.prototype, \"onTouchStart\", null);\n\n__decorate([memoize], ListView.prototype, \"onTap\", null);","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/base/browser/ui/list/listView.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","isFirefox","DataTransfers","StaticDND","$","addDisposableListener","animate","getContentHeight","getContentWidth","getTopLeftOffset","scheduleAtNextAnimationFrame","DomEmitter","EventType","TouchEventType","Gesture","SmoothScrollableElement","distinct","equals","Delayer","disposableTimeout","memoize","Emitter","Event","Disposable","DisposableStore","dispose","toDisposable","getOrDefault","Range","Scrollable","RangeMap","shift","RowCache","DefaultOptions","useShadows","verticalScrollMode","setRowLineHeight","setRowHeight","supportDynamicHeights","dnd","getDragElements","e","getDragURI","onDragStart","onDragOver","drop","horizontalScrolling","transformOptimization","alwaysConsumeMouseWheel","ElementsDragAndDropData","constructor","elements","update","getData","ExternalElementsDragAndDropData","NativeDragAndDropData","types","files","dataTransfer","splice","file","item","size","type","push","equalsDragFeedback","f1","f2","Array","isArray","ListViewAccessibilityProvider","accessibilityProvider","getSetSize","bind","l","getPosInSet","getRole","_","isChecked","undefined","ListView","container","virtualDelegate","renderers","options","domId","InstanceCount","Map","renderWidth","_scrollHeight","scrollableElementUpdateDisposable","scrollableElementWidthDelayer","splicing","dragOverAnimationStopDisposable","None","dragOverMouseY","canDrop","currentDragFeedbackDisposable","onDragLeaveTimeout","disposables","_onDidChangeContentHeight","_horizontalScrolling","Error","items","itemId","rangeMap","renderer","set","templateId","cache","add","lastRenderTop","lastRenderHeight","domNode","document","createElement","className","classList","tabIndex","toggle","mouseSupport","o","additionalScrollHeight","rowsContainer","style","transform","addTarget","scrollable","smoothScrolling","cb","scrollableElement","horizontal","vertical","mouseWheelScrollSensitivity","fastScrollSensitivity","appendChild","getDomNode","onScroll","Change","onTouchChange","scrollTop","toDragEvent","onDrop","onDragLeave","onDragEnd","layout","contentHeight","value","measureItemWidth","updateScrollWidth","setScrollDimensions","width","Math","max","scrollWidth","cancel","updateOptions","scrollHeight","setSmoothScrollDuration","start","deleteCount","_splice","fire","previousRenderRange","getRenderRange","deleteRange","end","removeRange","intersect","rowsToDispose","dragStartDisposable","row","rows","get","disposeElement","element","templateData","previousRestRange","previousRenderedRestRange","previousUnrenderedRestRanges","relativeComplement","inserted","map","id","String","getTemplateId","getHeight","hasDynamicHeight","lastDynamicHeightWidth","uri","dropTarget","deleted","delta","renderRange","renderedRestRange","updateRange","updateItemInDOM","removeRanges","range","removeItemFromDOM","unrenderedRestRanges","elementsRange","insertRanges","beforeElement","getNextToLastElement","pop","insertItemInDOM","values","release","eventuallyUpdateScrollDimensions","_rerender","renderHeight","height","eventuallyUpdateScrollWidth","trigger","rerender","scrollDimensions","getScrollDimensions","index","domElement","elementHeight","elementTop","positionAt","indexAt","position","indexAfter","render","renderTop","renderLeft","updateItemsInDOM","rangesToInsert","rangesToRemove","rangesToUpdate","left","top","alloc","role","setAttribute","checked","parentElement","insertBefore","renderElement","draggable","event","window","getComputedStyle","paddingLeft","parseFloat","paddingRight","lineHeight","getElementDomId","getScrollTop","scrollPosition","getScrollPosition","setScrollTop","reuseAnimation","setScrollPosition","onMouseClick","toMouseEvent","onMouseDblClick","onMouseMiddleClick","filter","browserEvent","button","onMouseDown","onContextMenu","any","Contextmenu","toGestureEvent","onTouchStart","toTouchEvent","onTap","Tap","getItemIndexFromEventTarget","initialTarget","scrollLeft","inSmoothScrolling","err","console","error","preventDefault","stopPropagation","translationY","effectAllowed","setData","TEXT","setDragImage","label","getDragLabel","dragImage","textContent","body","setTimeout","removeChild","currentDragData","CurrentDragAndDropData","setupDragAndDropScrollTopAnimation","result","accept","currentDragFeedback","dropEffect","effect","feedback","sort","a","b","remove","_a","_b","clearDragOverFeedback","call","dragData","teardownDragAndDropScrollTopAnimation","dragOverAnimationDisposable","viewTop","animateDragAndDropScrollTop","pageY","diff","upperLimit","floor","min","HTMLElement","contains","rawIndex","getAttribute","Number","isNaN","anchorElementIndex","anchorElementTopDelta","heightDiff","didChange","probeDynamicHeight","unrenderRanges","renderRanges","afterIndex","beforeRow","deltaScrollTop","getFutureScrollPosition","newScrollTop","getDynamicHeight","newSize","offsetHeight","setDynamicHeight","ranges","lastRange","nextToLastItem","disposeTemplate","parentNode","prototype"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isFirefox } from '../../browser.js';\nimport { DataTransfers, StaticDND } from '../../dnd.js';\nimport { $, addDisposableListener, animate, getContentHeight, getContentWidth, getTopLeftOffset, scheduleAtNextAnimationFrame } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\nimport { SmoothScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { distinct, equals } from '../../../common/arrays.js';\nimport { Delayer, disposableTimeout } from '../../../common/async.js';\nimport { memoize } from '../../../common/decorators.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { getOrDefault } from '../../../common/objects.js';\nimport { Range } from '../../../common/range.js';\nimport { Scrollable } from '../../../common/scrollable.js';\nimport { RangeMap, shift } from './rangeMap.js';\nimport { RowCache } from './rowCache.js';\nconst DefaultOptions = {\n    useShadows: true,\n    verticalScrollMode: 1 /* Auto */,\n    setRowLineHeight: true,\n    setRowHeight: true,\n    supportDynamicHeights: false,\n    dnd: {\n        getDragElements(e) { return [e]; },\n        getDragURI() { return null; },\n        onDragStart() { },\n        onDragOver() { return false; },\n        drop() { }\n    },\n    horizontalScrolling: false,\n    transformOptimization: true,\n    alwaysConsumeMouseWheel: true,\n};\nexport class ElementsDragAndDropData {\n    constructor(elements) {\n        this.elements = elements;\n    }\n    update() { }\n    getData() {\n        return this.elements;\n    }\n}\nexport class ExternalElementsDragAndDropData {\n    constructor(elements) {\n        this.elements = elements;\n    }\n    update() { }\n    getData() {\n        return this.elements;\n    }\n}\nexport class NativeDragAndDropData {\n    constructor() {\n        this.types = [];\n        this.files = [];\n    }\n    update(dataTransfer) {\n        if (dataTransfer.types) {\n            this.types.splice(0, this.types.length, ...dataTransfer.types);\n        }\n        if (dataTransfer.files) {\n            this.files.splice(0, this.files.length);\n            for (let i = 0; i < dataTransfer.files.length; i++) {\n                const file = dataTransfer.files.item(i);\n                if (file && (file.size || file.type)) {\n                    this.files.push(file);\n                }\n            }\n        }\n    }\n    getData() {\n        return {\n            types: this.types,\n            files: this.files\n        };\n    }\n}\nfunction equalsDragFeedback(f1, f2) {\n    if (Array.isArray(f1) && Array.isArray(f2)) {\n        return equals(f1, f2);\n    }\n    return f1 === f2;\n}\nclass ListViewAccessibilityProvider {\n    constructor(accessibilityProvider) {\n        if (accessibilityProvider === null || accessibilityProvider === void 0 ? void 0 : accessibilityProvider.getSetSize) {\n            this.getSetSize = accessibilityProvider.getSetSize.bind(accessibilityProvider);\n        }\n        else {\n            this.getSetSize = (e, i, l) => l;\n        }\n        if (accessibilityProvider === null || accessibilityProvider === void 0 ? void 0 : accessibilityProvider.getPosInSet) {\n            this.getPosInSet = accessibilityProvider.getPosInSet.bind(accessibilityProvider);\n        }\n        else {\n            this.getPosInSet = (e, i) => i + 1;\n        }\n        if (accessibilityProvider === null || accessibilityProvider === void 0 ? void 0 : accessibilityProvider.getRole) {\n            this.getRole = accessibilityProvider.getRole.bind(accessibilityProvider);\n        }\n        else {\n            this.getRole = _ => 'listitem';\n        }\n        if (accessibilityProvider === null || accessibilityProvider === void 0 ? void 0 : accessibilityProvider.isChecked) {\n            this.isChecked = accessibilityProvider.isChecked.bind(accessibilityProvider);\n        }\n        else {\n            this.isChecked = _ => undefined;\n        }\n    }\n}\nexport class ListView {\n    constructor(container, virtualDelegate, renderers, options = DefaultOptions) {\n        this.virtualDelegate = virtualDelegate;\n        this.domId = `list_id_${++ListView.InstanceCount}`;\n        this.renderers = new Map();\n        this.renderWidth = 0;\n        this._scrollHeight = 0;\n        this.scrollableElementUpdateDisposable = null;\n        this.scrollableElementWidthDelayer = new Delayer(50);\n        this.splicing = false;\n        this.dragOverAnimationStopDisposable = Disposable.None;\n        this.dragOverMouseY = 0;\n        this.canDrop = false;\n        this.currentDragFeedbackDisposable = Disposable.None;\n        this.onDragLeaveTimeout = Disposable.None;\n        this.disposables = new DisposableStore();\n        this._onDidChangeContentHeight = new Emitter();\n        this._horizontalScrolling = false;\n        if (options.horizontalScrolling && options.supportDynamicHeights) {\n            throw new Error('Horizontal scrolling and dynamic heights not supported simultaneously');\n        }\n        this.items = [];\n        this.itemId = 0;\n        this.rangeMap = new RangeMap();\n        for (const renderer of renderers) {\n            this.renderers.set(renderer.templateId, renderer);\n        }\n        this.cache = this.disposables.add(new RowCache(this.renderers));\n        this.lastRenderTop = 0;\n        this.lastRenderHeight = 0;\n        this.domNode = document.createElement('div');\n        this.domNode.className = 'monaco-list';\n        this.domNode.classList.add(this.domId);\n        this.domNode.tabIndex = 0;\n        this.domNode.classList.toggle('mouse-support', typeof options.mouseSupport === 'boolean' ? options.mouseSupport : true);\n        this._horizontalScrolling = getOrDefault(options, o => o.horizontalScrolling, DefaultOptions.horizontalScrolling);\n        this.domNode.classList.toggle('horizontal-scrolling', this._horizontalScrolling);\n        this.additionalScrollHeight = typeof options.additionalScrollHeight === 'undefined' ? 0 : options.additionalScrollHeight;\n        this.accessibilityProvider = new ListViewAccessibilityProvider(options.accessibilityProvider);\n        this.rowsContainer = document.createElement('div');\n        this.rowsContainer.className = 'monaco-list-rows';\n        const transformOptimization = getOrDefault(options, o => o.transformOptimization, DefaultOptions.transformOptimization);\n        if (transformOptimization) {\n            this.rowsContainer.style.transform = 'translate3d(0px, 0px, 0px)';\n        }\n        this.disposables.add(Gesture.addTarget(this.rowsContainer));\n        this.scrollable = new Scrollable(getOrDefault(options, o => o.smoothScrolling, false) ? 125 : 0, cb => scheduleAtNextAnimationFrame(cb));\n        this.scrollableElement = this.disposables.add(new SmoothScrollableElement(this.rowsContainer, {\n            alwaysConsumeMouseWheel: getOrDefault(options, o => o.alwaysConsumeMouseWheel, DefaultOptions.alwaysConsumeMouseWheel),\n            horizontal: 1 /* Auto */,\n            vertical: getOrDefault(options, o => o.verticalScrollMode, DefaultOptions.verticalScrollMode),\n            useShadows: getOrDefault(options, o => o.useShadows, DefaultOptions.useShadows),\n            mouseWheelScrollSensitivity: options.mouseWheelScrollSensitivity,\n            fastScrollSensitivity: options.fastScrollSensitivity\n        }, this.scrollable));\n        this.domNode.appendChild(this.scrollableElement.getDomNode());\n        container.appendChild(this.domNode);\n        this.scrollableElement.onScroll(this.onScroll, this, this.disposables);\n        this.disposables.add(addDisposableListener(this.rowsContainer, TouchEventType.Change, e => this.onTouchChange(e)));\n        // Prevent the monaco-scrollable-element from scrolling\n        // https://github.com/microsoft/vscode/issues/44181\n        this.disposables.add(addDisposableListener(this.scrollableElement.getDomNode(), 'scroll', e => e.target.scrollTop = 0));\n        this.disposables.add(addDisposableListener(this.domNode, 'dragover', e => this.onDragOver(this.toDragEvent(e))));\n        this.disposables.add(addDisposableListener(this.domNode, 'drop', e => this.onDrop(this.toDragEvent(e))));\n        this.disposables.add(addDisposableListener(this.domNode, 'dragleave', e => this.onDragLeave(this.toDragEvent(e))));\n        this.disposables.add(addDisposableListener(this.domNode, 'dragend', e => this.onDragEnd(e)));\n        this.setRowLineHeight = getOrDefault(options, o => o.setRowLineHeight, DefaultOptions.setRowLineHeight);\n        this.setRowHeight = getOrDefault(options, o => o.setRowHeight, DefaultOptions.setRowHeight);\n        this.supportDynamicHeights = getOrDefault(options, o => o.supportDynamicHeights, DefaultOptions.supportDynamicHeights);\n        this.dnd = getOrDefault(options, o => o.dnd, DefaultOptions.dnd);\n        this.layout();\n    }\n    get contentHeight() { return this.rangeMap.size; }\n    get horizontalScrolling() { return this._horizontalScrolling; }\n    set horizontalScrolling(value) {\n        if (value === this._horizontalScrolling) {\n            return;\n        }\n        if (value && this.supportDynamicHeights) {\n            throw new Error('Horizontal scrolling and dynamic heights not supported simultaneously');\n        }\n        this._horizontalScrolling = value;\n        this.domNode.classList.toggle('horizontal-scrolling', this._horizontalScrolling);\n        if (this._horizontalScrolling) {\n            for (const item of this.items) {\n                this.measureItemWidth(item);\n            }\n            this.updateScrollWidth();\n            this.scrollableElement.setScrollDimensions({ width: getContentWidth(this.domNode) });\n            this.rowsContainer.style.width = `${Math.max(this.scrollWidth || 0, this.renderWidth)}px`;\n        }\n        else {\n            this.scrollableElementWidthDelayer.cancel();\n            this.scrollableElement.setScrollDimensions({ width: this.renderWidth, scrollWidth: this.renderWidth });\n            this.rowsContainer.style.width = '';\n        }\n    }\n    updateOptions(options) {\n        if (options.additionalScrollHeight !== undefined) {\n            this.additionalScrollHeight = options.additionalScrollHeight;\n            this.scrollableElement.setScrollDimensions({ scrollHeight: this.scrollHeight });\n        }\n        if (options.smoothScrolling !== undefined) {\n            this.scrollable.setSmoothScrollDuration(options.smoothScrolling ? 125 : 0);\n        }\n        if (options.horizontalScrolling !== undefined) {\n            this.horizontalScrolling = options.horizontalScrolling;\n        }\n        if (options.mouseWheelScrollSensitivity !== undefined) {\n            this.scrollableElement.updateOptions({ mouseWheelScrollSensitivity: options.mouseWheelScrollSensitivity });\n        }\n        if (options.fastScrollSensitivity !== undefined) {\n            this.scrollableElement.updateOptions({ fastScrollSensitivity: options.fastScrollSensitivity });\n        }\n    }\n    splice(start, deleteCount, elements = []) {\n        if (this.splicing) {\n            throw new Error('Can\\'t run recursive splices.');\n        }\n        this.splicing = true;\n        try {\n            return this._splice(start, deleteCount, elements);\n        }\n        finally {\n            this.splicing = false;\n            this._onDidChangeContentHeight.fire(this.contentHeight);\n        }\n    }\n    _splice(start, deleteCount, elements = []) {\n        const previousRenderRange = this.getRenderRange(this.lastRenderTop, this.lastRenderHeight);\n        const deleteRange = { start, end: start + deleteCount };\n        const removeRange = Range.intersect(previousRenderRange, deleteRange);\n        // try to reuse rows, avoid removing them from DOM\n        const rowsToDispose = new Map();\n        for (let i = removeRange.start; i < removeRange.end; i++) {\n            const item = this.items[i];\n            item.dragStartDisposable.dispose();\n            if (item.row) {\n                let rows = rowsToDispose.get(item.templateId);\n                if (!rows) {\n                    rows = [];\n                    rowsToDispose.set(item.templateId, rows);\n                }\n                const renderer = this.renderers.get(item.templateId);\n                if (renderer && renderer.disposeElement) {\n                    renderer.disposeElement(item.element, i, item.row.templateData, item.size);\n                }\n                rows.push(item.row);\n            }\n            item.row = null;\n        }\n        const previousRestRange = { start: start + deleteCount, end: this.items.length };\n        const previousRenderedRestRange = Range.intersect(previousRestRange, previousRenderRange);\n        const previousUnrenderedRestRanges = Range.relativeComplement(previousRestRange, previousRenderRange);\n        const inserted = elements.map(element => ({\n            id: String(this.itemId++),\n            element,\n            templateId: this.virtualDelegate.getTemplateId(element),\n            size: this.virtualDelegate.getHeight(element),\n            width: undefined,\n            hasDynamicHeight: !!this.virtualDelegate.hasDynamicHeight && this.virtualDelegate.hasDynamicHeight(element),\n            lastDynamicHeightWidth: undefined,\n            row: null,\n            uri: undefined,\n            dropTarget: false,\n            dragStartDisposable: Disposable.None\n        }));\n        let deleted;\n        // TODO@joao: improve this optimization to catch even more cases\n        if (start === 0 && deleteCount >= this.items.length) {\n            this.rangeMap = new RangeMap();\n            this.rangeMap.splice(0, 0, inserted);\n            deleted = this.items;\n            this.items = inserted;\n        }\n        else {\n            this.rangeMap.splice(start, deleteCount, inserted);\n            deleted = this.items.splice(start, deleteCount, ...inserted);\n        }\n        const delta = elements.length - deleteCount;\n        const renderRange = this.getRenderRange(this.lastRenderTop, this.lastRenderHeight);\n        const renderedRestRange = shift(previousRenderedRestRange, delta);\n        const updateRange = Range.intersect(renderRange, renderedRestRange);\n        for (let i = updateRange.start; i < updateRange.end; i++) {\n            this.updateItemInDOM(this.items[i], i);\n        }\n        const removeRanges = Range.relativeComplement(renderedRestRange, renderRange);\n        for (const range of removeRanges) {\n            for (let i = range.start; i < range.end; i++) {\n                this.removeItemFromDOM(i);\n            }\n        }\n        const unrenderedRestRanges = previousUnrenderedRestRanges.map(r => shift(r, delta));\n        const elementsRange = { start, end: start + elements.length };\n        const insertRanges = [elementsRange, ...unrenderedRestRanges].map(r => Range.intersect(renderRange, r));\n        const beforeElement = this.getNextToLastElement(insertRanges);\n        for (const range of insertRanges) {\n            for (let i = range.start; i < range.end; i++) {\n                const item = this.items[i];\n                const rows = rowsToDispose.get(item.templateId);\n                const row = rows === null || rows === void 0 ? void 0 : rows.pop();\n                this.insertItemInDOM(i, beforeElement, row);\n            }\n        }\n        for (const rows of rowsToDispose.values()) {\n            for (const row of rows) {\n                this.cache.release(row);\n            }\n        }\n        this.eventuallyUpdateScrollDimensions();\n        if (this.supportDynamicHeights) {\n            this._rerender(this.scrollTop, this.renderHeight);\n        }\n        return deleted.map(i => i.element);\n    }\n    eventuallyUpdateScrollDimensions() {\n        this._scrollHeight = this.contentHeight;\n        this.rowsContainer.style.height = `${this._scrollHeight}px`;\n        if (!this.scrollableElementUpdateDisposable) {\n            this.scrollableElementUpdateDisposable = scheduleAtNextAnimationFrame(() => {\n                this.scrollableElement.setScrollDimensions({ scrollHeight: this.scrollHeight });\n                this.updateScrollWidth();\n                this.scrollableElementUpdateDisposable = null;\n            });\n        }\n    }\n    eventuallyUpdateScrollWidth() {\n        if (!this.horizontalScrolling) {\n            this.scrollableElementWidthDelayer.cancel();\n            return;\n        }\n        this.scrollableElementWidthDelayer.trigger(() => this.updateScrollWidth());\n    }\n    updateScrollWidth() {\n        if (!this.horizontalScrolling) {\n            return;\n        }\n        let scrollWidth = 0;\n        for (const item of this.items) {\n            if (typeof item.width !== 'undefined') {\n                scrollWidth = Math.max(scrollWidth, item.width);\n            }\n        }\n        this.scrollWidth = scrollWidth;\n        this.scrollableElement.setScrollDimensions({ scrollWidth: scrollWidth === 0 ? 0 : (scrollWidth + 10) });\n    }\n    rerender() {\n        if (!this.supportDynamicHeights) {\n            return;\n        }\n        for (const item of this.items) {\n            item.lastDynamicHeightWidth = undefined;\n        }\n        this._rerender(this.lastRenderTop, this.lastRenderHeight);\n    }\n    get length() {\n        return this.items.length;\n    }\n    get renderHeight() {\n        const scrollDimensions = this.scrollableElement.getScrollDimensions();\n        return scrollDimensions.height;\n    }\n    element(index) {\n        return this.items[index].element;\n    }\n    domElement(index) {\n        const row = this.items[index].row;\n        return row && row.domNode;\n    }\n    elementHeight(index) {\n        return this.items[index].size;\n    }\n    elementTop(index) {\n        return this.rangeMap.positionAt(index);\n    }\n    indexAt(position) {\n        return this.rangeMap.indexAt(position);\n    }\n    indexAfter(position) {\n        return this.rangeMap.indexAfter(position);\n    }\n    layout(height, width) {\n        let scrollDimensions = {\n            height: typeof height === 'number' ? height : getContentHeight(this.domNode)\n        };\n        if (this.scrollableElementUpdateDisposable) {\n            this.scrollableElementUpdateDisposable.dispose();\n            this.scrollableElementUpdateDisposable = null;\n            scrollDimensions.scrollHeight = this.scrollHeight;\n        }\n        this.scrollableElement.setScrollDimensions(scrollDimensions);\n        if (typeof width !== 'undefined') {\n            this.renderWidth = width;\n            if (this.supportDynamicHeights) {\n                this._rerender(this.scrollTop, this.renderHeight);\n            }\n        }\n        if (this.horizontalScrolling) {\n            this.scrollableElement.setScrollDimensions({\n                width: typeof width === 'number' ? width : getContentWidth(this.domNode)\n            });\n        }\n    }\n    // Render\n    render(previousRenderRange, renderTop, renderHeight, renderLeft, scrollWidth, updateItemsInDOM = false) {\n        const renderRange = this.getRenderRange(renderTop, renderHeight);\n        const rangesToInsert = Range.relativeComplement(renderRange, previousRenderRange);\n        const rangesToRemove = Range.relativeComplement(previousRenderRange, renderRange);\n        const beforeElement = this.getNextToLastElement(rangesToInsert);\n        if (updateItemsInDOM) {\n            const rangesToUpdate = Range.intersect(previousRenderRange, renderRange);\n            for (let i = rangesToUpdate.start; i < rangesToUpdate.end; i++) {\n                this.updateItemInDOM(this.items[i], i);\n            }\n        }\n        for (const range of rangesToInsert) {\n            for (let i = range.start; i < range.end; i++) {\n                this.insertItemInDOM(i, beforeElement);\n            }\n        }\n        for (const range of rangesToRemove) {\n            for (let i = range.start; i < range.end; i++) {\n                this.removeItemFromDOM(i);\n            }\n        }\n        if (renderLeft !== undefined) {\n            this.rowsContainer.style.left = `-${renderLeft}px`;\n        }\n        this.rowsContainer.style.top = `-${renderTop}px`;\n        if (this.horizontalScrolling && scrollWidth !== undefined) {\n            this.rowsContainer.style.width = `${Math.max(scrollWidth, this.renderWidth)}px`;\n        }\n        this.lastRenderTop = renderTop;\n        this.lastRenderHeight = renderHeight;\n    }\n    // DOM operations\n    insertItemInDOM(index, beforeElement, row) {\n        const item = this.items[index];\n        if (!item.row) {\n            item.row = row !== null && row !== void 0 ? row : this.cache.alloc(item.templateId);\n        }\n        const role = this.accessibilityProvider.getRole(item.element) || 'listitem';\n        item.row.domNode.setAttribute('role', role);\n        const checked = this.accessibilityProvider.isChecked(item.element);\n        if (typeof checked !== 'undefined') {\n            item.row.domNode.setAttribute('aria-checked', String(!!checked));\n        }\n        if (!item.row.domNode.parentElement) {\n            if (beforeElement) {\n                this.rowsContainer.insertBefore(item.row.domNode, beforeElement);\n            }\n            else {\n                this.rowsContainer.appendChild(item.row.domNode);\n            }\n        }\n        this.updateItemInDOM(item, index);\n        const renderer = this.renderers.get(item.templateId);\n        if (!renderer) {\n            throw new Error(`No renderer found for template id ${item.templateId}`);\n        }\n        if (renderer) {\n            renderer.renderElement(item.element, index, item.row.templateData, item.size);\n        }\n        const uri = this.dnd.getDragURI(item.element);\n        item.dragStartDisposable.dispose();\n        item.row.domNode.draggable = !!uri;\n        if (uri) {\n            item.dragStartDisposable = addDisposableListener(item.row.domNode, 'dragstart', event => this.onDragStart(item.element, uri, event));\n        }\n        if (this.horizontalScrolling) {\n            this.measureItemWidth(item);\n            this.eventuallyUpdateScrollWidth();\n        }\n    }\n    measureItemWidth(item) {\n        if (!item.row || !item.row.domNode) {\n            return;\n        }\n        item.row.domNode.style.width = isFirefox ? '-moz-fit-content' : 'fit-content';\n        item.width = getContentWidth(item.row.domNode);\n        const style = window.getComputedStyle(item.row.domNode);\n        if (style.paddingLeft) {\n            item.width += parseFloat(style.paddingLeft);\n        }\n        if (style.paddingRight) {\n            item.width += parseFloat(style.paddingRight);\n        }\n        item.row.domNode.style.width = '';\n    }\n    updateItemInDOM(item, index) {\n        item.row.domNode.style.top = `${this.elementTop(index)}px`;\n        if (this.setRowHeight) {\n            item.row.domNode.style.height = `${item.size}px`;\n        }\n        if (this.setRowLineHeight) {\n            item.row.domNode.style.lineHeight = `${item.size}px`;\n        }\n        item.row.domNode.setAttribute('data-index', `${index}`);\n        item.row.domNode.setAttribute('data-last-element', index === this.length - 1 ? 'true' : 'false');\n        item.row.domNode.setAttribute('data-parity', index % 2 === 0 ? 'even' : 'odd');\n        item.row.domNode.setAttribute('aria-setsize', String(this.accessibilityProvider.getSetSize(item.element, index, this.length)));\n        item.row.domNode.setAttribute('aria-posinset', String(this.accessibilityProvider.getPosInSet(item.element, index)));\n        item.row.domNode.setAttribute('id', this.getElementDomId(index));\n        item.row.domNode.classList.toggle('drop-target', item.dropTarget);\n    }\n    removeItemFromDOM(index) {\n        const item = this.items[index];\n        item.dragStartDisposable.dispose();\n        if (item.row) {\n            const renderer = this.renderers.get(item.templateId);\n            if (renderer && renderer.disposeElement) {\n                renderer.disposeElement(item.element, index, item.row.templateData, item.size);\n            }\n            this.cache.release(item.row);\n            item.row = null;\n        }\n        if (this.horizontalScrolling) {\n            this.eventuallyUpdateScrollWidth();\n        }\n    }\n    getScrollTop() {\n        const scrollPosition = this.scrollableElement.getScrollPosition();\n        return scrollPosition.scrollTop;\n    }\n    setScrollTop(scrollTop, reuseAnimation) {\n        if (this.scrollableElementUpdateDisposable) {\n            this.scrollableElementUpdateDisposable.dispose();\n            this.scrollableElementUpdateDisposable = null;\n            this.scrollableElement.setScrollDimensions({ scrollHeight: this.scrollHeight });\n        }\n        this.scrollableElement.setScrollPosition({ scrollTop, reuseAnimation });\n    }\n    get scrollTop() {\n        return this.getScrollTop();\n    }\n    set scrollTop(scrollTop) {\n        this.setScrollTop(scrollTop);\n    }\n    get scrollHeight() {\n        return this._scrollHeight + (this.horizontalScrolling ? 10 : 0) + this.additionalScrollHeight;\n    }\n    // Events\n    get onMouseClick() { return Event.map(this.disposables.add(new DomEmitter(this.domNode, 'click')).event, e => this.toMouseEvent(e)); }\n    get onMouseDblClick() { return Event.map(this.disposables.add(new DomEmitter(this.domNode, 'dblclick')).event, e => this.toMouseEvent(e)); }\n    get onMouseMiddleClick() { return Event.filter(Event.map(this.disposables.add(new DomEmitter(this.domNode, 'auxclick')).event, e => this.toMouseEvent(e)), e => e.browserEvent.button === 1); }\n    get onMouseDown() { return Event.map(this.disposables.add(new DomEmitter(this.domNode, 'mousedown')).event, e => this.toMouseEvent(e)); }\n    get onContextMenu() { return Event.any(Event.map(this.disposables.add(new DomEmitter(this.domNode, 'contextmenu')).event, e => this.toMouseEvent(e)), Event.map(this.disposables.add(new DomEmitter(this.domNode, TouchEventType.Contextmenu)).event, e => this.toGestureEvent(e))); }\n    get onTouchStart() { return Event.map(this.disposables.add(new DomEmitter(this.domNode, 'touchstart')).event, e => this.toTouchEvent(e)); }\n    get onTap() { return Event.map(this.disposables.add(new DomEmitter(this.rowsContainer, TouchEventType.Tap)).event, e => this.toGestureEvent(e)); }\n    toMouseEvent(browserEvent) {\n        const index = this.getItemIndexFromEventTarget(browserEvent.target || null);\n        const item = typeof index === 'undefined' ? undefined : this.items[index];\n        const element = item && item.element;\n        return { browserEvent, index, element };\n    }\n    toTouchEvent(browserEvent) {\n        const index = this.getItemIndexFromEventTarget(browserEvent.target || null);\n        const item = typeof index === 'undefined' ? undefined : this.items[index];\n        const element = item && item.element;\n        return { browserEvent, index, element };\n    }\n    toGestureEvent(browserEvent) {\n        const index = this.getItemIndexFromEventTarget(browserEvent.initialTarget || null);\n        const item = typeof index === 'undefined' ? undefined : this.items[index];\n        const element = item && item.element;\n        return { browserEvent, index, element };\n    }\n    toDragEvent(browserEvent) {\n        const index = this.getItemIndexFromEventTarget(browserEvent.target || null);\n        const item = typeof index === 'undefined' ? undefined : this.items[index];\n        const element = item && item.element;\n        return { browserEvent, index, element };\n    }\n    onScroll(e) {\n        try {\n            const previousRenderRange = this.getRenderRange(this.lastRenderTop, this.lastRenderHeight);\n            this.render(previousRenderRange, e.scrollTop, e.height, e.scrollLeft, e.scrollWidth);\n            if (this.supportDynamicHeights) {\n                this._rerender(e.scrollTop, e.height, e.inSmoothScrolling);\n            }\n        }\n        catch (err) {\n            console.error('Got bad scroll event:', e);\n            throw err;\n        }\n    }\n    onTouchChange(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.scrollTop -= event.translationY;\n    }\n    // DND\n    onDragStart(element, uri, event) {\n        if (!event.dataTransfer) {\n            return;\n        }\n        const elements = this.dnd.getDragElements(element);\n        event.dataTransfer.effectAllowed = 'copyMove';\n        event.dataTransfer.setData(DataTransfers.TEXT, uri);\n        if (event.dataTransfer.setDragImage) {\n            let label;\n            if (this.dnd.getDragLabel) {\n                label = this.dnd.getDragLabel(elements, event);\n            }\n            if (typeof label === 'undefined') {\n                label = String(elements.length);\n            }\n            const dragImage = $('.monaco-drag-image');\n            dragImage.textContent = label;\n            document.body.appendChild(dragImage);\n            event.dataTransfer.setDragImage(dragImage, -10, -10);\n            setTimeout(() => document.body.removeChild(dragImage), 0);\n        }\n        this.currentDragData = new ElementsDragAndDropData(elements);\n        StaticDND.CurrentDragAndDropData = new ExternalElementsDragAndDropData(elements);\n        if (this.dnd.onDragStart) {\n            this.dnd.onDragStart(this.currentDragData, event);\n        }\n    }\n    onDragOver(event) {\n        event.browserEvent.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n        this.onDragLeaveTimeout.dispose();\n        if (StaticDND.CurrentDragAndDropData && StaticDND.CurrentDragAndDropData.getData() === 'vscode-ui') {\n            return false;\n        }\n        this.setupDragAndDropScrollTopAnimation(event.browserEvent);\n        if (!event.browserEvent.dataTransfer) {\n            return false;\n        }\n        // Drag over from outside\n        if (!this.currentDragData) {\n            if (StaticDND.CurrentDragAndDropData) {\n                // Drag over from another list\n                this.currentDragData = StaticDND.CurrentDragAndDropData;\n            }\n            else {\n                // Drag over from the desktop\n                if (!event.browserEvent.dataTransfer.types) {\n                    return false;\n                }\n                this.currentDragData = new NativeDragAndDropData();\n            }\n        }\n        const result = this.dnd.onDragOver(this.currentDragData, event.element, event.index, event.browserEvent);\n        this.canDrop = typeof result === 'boolean' ? result : result.accept;\n        if (!this.canDrop) {\n            this.currentDragFeedback = undefined;\n            this.currentDragFeedbackDisposable.dispose();\n            return false;\n        }\n        event.browserEvent.dataTransfer.dropEffect = (typeof result !== 'boolean' && result.effect === 0 /* Copy */) ? 'copy' : 'move';\n        let feedback;\n        if (typeof result !== 'boolean' && result.feedback) {\n            feedback = result.feedback;\n        }\n        else {\n            if (typeof event.index === 'undefined') {\n                feedback = [-1];\n            }\n            else {\n                feedback = [event.index];\n            }\n        }\n        // sanitize feedback list\n        feedback = distinct(feedback).filter(i => i >= -1 && i < this.length).sort((a, b) => a - b);\n        feedback = feedback[0] === -1 ? [-1] : feedback;\n        if (equalsDragFeedback(this.currentDragFeedback, feedback)) {\n            return true;\n        }\n        this.currentDragFeedback = feedback;\n        this.currentDragFeedbackDisposable.dispose();\n        if (feedback[0] === -1) { // entire list feedback\n            this.domNode.classList.add('drop-target');\n            this.rowsContainer.classList.add('drop-target');\n            this.currentDragFeedbackDisposable = toDisposable(() => {\n                this.domNode.classList.remove('drop-target');\n                this.rowsContainer.classList.remove('drop-target');\n            });\n        }\n        else {\n            for (const index of feedback) {\n                const item = this.items[index];\n                item.dropTarget = true;\n                if (item.row) {\n                    item.row.domNode.classList.add('drop-target');\n                }\n            }\n            this.currentDragFeedbackDisposable = toDisposable(() => {\n                for (const index of feedback) {\n                    const item = this.items[index];\n                    item.dropTarget = false;\n                    if (item.row) {\n                        item.row.domNode.classList.remove('drop-target');\n                    }\n                }\n            });\n        }\n        return true;\n    }\n    onDragLeave(event) {\n        var _a, _b;\n        this.onDragLeaveTimeout.dispose();\n        this.onDragLeaveTimeout = disposableTimeout(() => this.clearDragOverFeedback(), 100);\n        if (this.currentDragData) {\n            (_b = (_a = this.dnd).onDragLeave) === null || _b === void 0 ? void 0 : _b.call(_a, this.currentDragData, event.element, event.index, event.browserEvent);\n        }\n    }\n    onDrop(event) {\n        if (!this.canDrop) {\n            return;\n        }\n        const dragData = this.currentDragData;\n        this.teardownDragAndDropScrollTopAnimation();\n        this.clearDragOverFeedback();\n        this.currentDragData = undefined;\n        StaticDND.CurrentDragAndDropData = undefined;\n        if (!dragData || !event.browserEvent.dataTransfer) {\n            return;\n        }\n        event.browserEvent.preventDefault();\n        dragData.update(event.browserEvent.dataTransfer);\n        this.dnd.drop(dragData, event.element, event.index, event.browserEvent);\n    }\n    onDragEnd(event) {\n        this.canDrop = false;\n        this.teardownDragAndDropScrollTopAnimation();\n        this.clearDragOverFeedback();\n        this.currentDragData = undefined;\n        StaticDND.CurrentDragAndDropData = undefined;\n        if (this.dnd.onDragEnd) {\n            this.dnd.onDragEnd(event);\n        }\n    }\n    clearDragOverFeedback() {\n        this.currentDragFeedback = undefined;\n        this.currentDragFeedbackDisposable.dispose();\n        this.currentDragFeedbackDisposable = Disposable.None;\n    }\n    // DND scroll top animation\n    setupDragAndDropScrollTopAnimation(event) {\n        if (!this.dragOverAnimationDisposable) {\n            const viewTop = getTopLeftOffset(this.domNode).top;\n            this.dragOverAnimationDisposable = animate(this.animateDragAndDropScrollTop.bind(this, viewTop));\n        }\n        this.dragOverAnimationStopDisposable.dispose();\n        this.dragOverAnimationStopDisposable = disposableTimeout(() => {\n            if (this.dragOverAnimationDisposable) {\n                this.dragOverAnimationDisposable.dispose();\n                this.dragOverAnimationDisposable = undefined;\n            }\n        }, 1000);\n        this.dragOverMouseY = event.pageY;\n    }\n    animateDragAndDropScrollTop(viewTop) {\n        if (this.dragOverMouseY === undefined) {\n            return;\n        }\n        const diff = this.dragOverMouseY - viewTop;\n        const upperLimit = this.renderHeight - 35;\n        if (diff < 35) {\n            this.scrollTop += Math.max(-14, Math.floor(0.3 * (diff - 35)));\n        }\n        else if (diff > upperLimit) {\n            this.scrollTop += Math.min(14, Math.floor(0.3 * (diff - upperLimit)));\n        }\n    }\n    teardownDragAndDropScrollTopAnimation() {\n        this.dragOverAnimationStopDisposable.dispose();\n        if (this.dragOverAnimationDisposable) {\n            this.dragOverAnimationDisposable.dispose();\n            this.dragOverAnimationDisposable = undefined;\n        }\n    }\n    // Util\n    getItemIndexFromEventTarget(target) {\n        const scrollableElement = this.scrollableElement.getDomNode();\n        let element = target;\n        while (element instanceof HTMLElement && element !== this.rowsContainer && scrollableElement.contains(element)) {\n            const rawIndex = element.getAttribute('data-index');\n            if (rawIndex) {\n                const index = Number(rawIndex);\n                if (!isNaN(index)) {\n                    return index;\n                }\n            }\n            element = element.parentElement;\n        }\n        return undefined;\n    }\n    getRenderRange(renderTop, renderHeight) {\n        return {\n            start: this.rangeMap.indexAt(renderTop),\n            end: this.rangeMap.indexAfter(renderTop + renderHeight - 1)\n        };\n    }\n    /**\n     * Given a stable rendered state, checks every rendered element whether it needs\n     * to be probed for dynamic height. Adjusts scroll height and top if necessary.\n     */\n    _rerender(renderTop, renderHeight, inSmoothScrolling) {\n        const previousRenderRange = this.getRenderRange(renderTop, renderHeight);\n        // Let's remember the second element's position, this helps in scrolling up\n        // and preserving a linear upwards scroll movement\n        let anchorElementIndex;\n        let anchorElementTopDelta;\n        if (renderTop === this.elementTop(previousRenderRange.start)) {\n            anchorElementIndex = previousRenderRange.start;\n            anchorElementTopDelta = 0;\n        }\n        else if (previousRenderRange.end - previousRenderRange.start > 1) {\n            anchorElementIndex = previousRenderRange.start + 1;\n            anchorElementTopDelta = this.elementTop(anchorElementIndex) - renderTop;\n        }\n        let heightDiff = 0;\n        while (true) {\n            const renderRange = this.getRenderRange(renderTop, renderHeight);\n            let didChange = false;\n            for (let i = renderRange.start; i < renderRange.end; i++) {\n                const diff = this.probeDynamicHeight(i);\n                if (diff !== 0) {\n                    this.rangeMap.splice(i, 1, [this.items[i]]);\n                }\n                heightDiff += diff;\n                didChange = didChange || diff !== 0;\n            }\n            if (!didChange) {\n                if (heightDiff !== 0) {\n                    this.eventuallyUpdateScrollDimensions();\n                }\n                const unrenderRanges = Range.relativeComplement(previousRenderRange, renderRange);\n                for (const range of unrenderRanges) {\n                    for (let i = range.start; i < range.end; i++) {\n                        if (this.items[i].row) {\n                            this.removeItemFromDOM(i);\n                        }\n                    }\n                }\n                const renderRanges = Range.relativeComplement(renderRange, previousRenderRange);\n                for (const range of renderRanges) {\n                    for (let i = range.start; i < range.end; i++) {\n                        const afterIndex = i + 1;\n                        const beforeRow = afterIndex < this.items.length ? this.items[afterIndex].row : null;\n                        const beforeElement = beforeRow ? beforeRow.domNode : null;\n                        this.insertItemInDOM(i, beforeElement);\n                    }\n                }\n                for (let i = renderRange.start; i < renderRange.end; i++) {\n                    if (this.items[i].row) {\n                        this.updateItemInDOM(this.items[i], i);\n                    }\n                }\n                if (typeof anchorElementIndex === 'number') {\n                    // To compute a destination scroll top, we need to take into account the current smooth scrolling\n                    // animation, and then reuse it with a new target (to avoid prolonging the scroll)\n                    // See https://github.com/microsoft/vscode/issues/104144\n                    // See https://github.com/microsoft/vscode/pull/104284\n                    // See https://github.com/microsoft/vscode/issues/107704\n                    const deltaScrollTop = this.scrollable.getFutureScrollPosition().scrollTop - renderTop;\n                    const newScrollTop = this.elementTop(anchorElementIndex) - anchorElementTopDelta + deltaScrollTop;\n                    this.setScrollTop(newScrollTop, inSmoothScrolling);\n                }\n                this._onDidChangeContentHeight.fire(this.contentHeight);\n                return;\n            }\n        }\n    }\n    probeDynamicHeight(index) {\n        const item = this.items[index];\n        if (!!this.virtualDelegate.getDynamicHeight) {\n            const newSize = this.virtualDelegate.getDynamicHeight(item.element);\n            if (newSize !== null) {\n                const size = item.size;\n                item.size = newSize;\n                item.lastDynamicHeightWidth = this.renderWidth;\n                return newSize - size;\n            }\n        }\n        if (!item.hasDynamicHeight || item.lastDynamicHeightWidth === this.renderWidth) {\n            return 0;\n        }\n        if (!!this.virtualDelegate.hasDynamicHeight && !this.virtualDelegate.hasDynamicHeight(item.element)) {\n            return 0;\n        }\n        const size = item.size;\n        if (!this.setRowHeight && item.row) {\n            let newSize = item.row.domNode.offsetHeight;\n            item.size = newSize;\n            item.lastDynamicHeightWidth = this.renderWidth;\n            return newSize - size;\n        }\n        const row = this.cache.alloc(item.templateId);\n        row.domNode.style.height = '';\n        this.rowsContainer.appendChild(row.domNode);\n        const renderer = this.renderers.get(item.templateId);\n        if (renderer) {\n            renderer.renderElement(item.element, index, row.templateData, undefined);\n            if (renderer.disposeElement) {\n                renderer.disposeElement(item.element, index, row.templateData, undefined);\n            }\n        }\n        item.size = row.domNode.offsetHeight;\n        if (this.virtualDelegate.setDynamicHeight) {\n            this.virtualDelegate.setDynamicHeight(item.element, item.size);\n        }\n        item.lastDynamicHeightWidth = this.renderWidth;\n        this.rowsContainer.removeChild(row.domNode);\n        this.cache.release(row);\n        return item.size - size;\n    }\n    getNextToLastElement(ranges) {\n        const lastRange = ranges[ranges.length - 1];\n        if (!lastRange) {\n            return null;\n        }\n        const nextToLastItem = this.items[lastRange.end];\n        if (!nextToLastItem) {\n            return null;\n        }\n        if (!nextToLastItem.row) {\n            return null;\n        }\n        return nextToLastItem.row.domNode;\n    }\n    getElementDomId(index) {\n        return `${this.domId}_${index}`;\n    }\n    // Dispose\n    dispose() {\n        if (this.items) {\n            for (const item of this.items) {\n                if (item.row) {\n                    const renderer = this.renderers.get(item.row.templateId);\n                    if (renderer) {\n                        if (renderer.disposeElement) {\n                            renderer.disposeElement(item.element, -1, item.row.templateData, undefined);\n                        }\n                        renderer.disposeTemplate(item.row.templateData);\n                    }\n                }\n            }\n            this.items = [];\n        }\n        if (this.domNode && this.domNode.parentNode) {\n            this.domNode.parentNode.removeChild(this.domNode);\n        }\n        dispose(this.disposables);\n    }\n}\nListView.InstanceCount = 0;\n__decorate([\n    memoize\n], ListView.prototype, \"onMouseClick\", null);\n__decorate([\n    memoize\n], ListView.prototype, \"onMouseDblClick\", null);\n__decorate([\n    memoize\n], ListView.prototype, \"onMouseMiddleClick\", null);\n__decorate([\n    memoize\n], ListView.prototype, \"onMouseDown\", null);\n__decorate([\n    memoize\n], ListView.prototype, \"onContextMenu\", null);\n__decorate([\n    memoize\n], ListView.prototype, \"onTouchStart\", null);\n__decorate([\n    memoize\n], ListView.prototype, \"onTap\", null);\n"]},"metadata":{},"sourceType":"module"}