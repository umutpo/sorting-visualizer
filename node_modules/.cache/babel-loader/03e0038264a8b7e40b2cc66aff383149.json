{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as dom from '../../../browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\nimport { ActionBar } from '../../../browser/ui/actionbar/actionbar.js';\nimport { Button } from '../../../browser/ui/button/button.js';\nimport { CountBadge } from '../../../browser/ui/countBadge/countBadge.js';\nimport { renderLabelWithIcons } from '../../../browser/ui/iconLabel/iconLabels.js';\nimport { ProgressBar } from '../../../browser/ui/progressbar/progressbar.js';\nimport { Action } from '../../../common/actions.js';\nimport { equals } from '../../../common/arrays.js';\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { CancellationToken } from '../../../common/cancellation.js';\nimport { Codicon, registerCodicon } from '../../../common/codicons.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Disposable, DisposableStore, dispose } from '../../../common/lifecycle.js';\nimport { isIOS } from '../../../common/platform.js';\nimport Severity from '../../../common/severity.js';\nimport { getIconClass } from './quickInputUtils.js';\nimport { ItemActivation, NO_KEY_MODS, QuickInputHideReason } from '../common/quickInput.js';\nimport './media/quickInput.css';\nimport { localize } from '../../../../nls.js';\nimport { QuickInputBox } from './quickInputBox.js';\nimport { QuickInputList, QuickInputListFocus } from './quickInputList.js';\nconst $ = dom.$;\nconst backButtonIcon = registerCodicon('quick-input-back', Codicon.arrowLeft);\nconst backButton = {\n  iconClass: backButtonIcon.classNames,\n  tooltip: localize('quickInput.back', \"Back\"),\n  handle: -1 // TODO\n\n};\n\nclass QuickInput extends Disposable {\n  constructor(ui) {\n    super();\n    this.ui = ui;\n    this.visible = false;\n    this._enabled = true;\n    this._busy = false;\n    this._ignoreFocusOut = false;\n    this._buttons = [];\n    this.noValidationMessage = QuickInput.noPromptMessage;\n    this._severity = Severity.Ignore;\n    this.buttonsUpdated = false;\n    this.onDidTriggerButtonEmitter = this._register(new Emitter());\n    this.onDidHideEmitter = this._register(new Emitter());\n    this.onDisposeEmitter = this._register(new Emitter());\n    this.visibleDisposables = this._register(new DisposableStore());\n    this.onDidHide = this.onDidHideEmitter.event;\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  set title(title) {\n    this._title = title;\n    this.update();\n  }\n\n  get description() {\n    return this._description;\n  }\n\n  set description(description) {\n    this._description = description;\n    this.update();\n  }\n\n  get step() {\n    return this._steps;\n  }\n\n  set step(step) {\n    this._steps = step;\n    this.update();\n  }\n\n  get totalSteps() {\n    return this._totalSteps;\n  }\n\n  set totalSteps(totalSteps) {\n    this._totalSteps = totalSteps;\n    this.update();\n  }\n\n  get enabled() {\n    return this._enabled;\n  }\n\n  set enabled(enabled) {\n    this._enabled = enabled;\n    this.update();\n  }\n\n  get contextKey() {\n    return this._contextKey;\n  }\n\n  set contextKey(contextKey) {\n    this._contextKey = contextKey;\n    this.update();\n  }\n\n  get busy() {\n    return this._busy;\n  }\n\n  set busy(busy) {\n    this._busy = busy;\n    this.update();\n  }\n\n  get ignoreFocusOut() {\n    return this._ignoreFocusOut;\n  }\n\n  set ignoreFocusOut(ignoreFocusOut) {\n    const shouldUpdate = this._ignoreFocusOut !== ignoreFocusOut && !isIOS;\n    this._ignoreFocusOut = ignoreFocusOut && !isIOS;\n\n    if (shouldUpdate) {\n      this.update();\n    }\n  }\n\n  get buttons() {\n    return this._buttons;\n  }\n\n  set buttons(buttons) {\n    this._buttons = buttons;\n    this.buttonsUpdated = true;\n    this.update();\n  }\n\n  get validationMessage() {\n    return this._validationMessage;\n  }\n\n  set validationMessage(validationMessage) {\n    this._validationMessage = validationMessage;\n    this.update();\n  }\n\n  get severity() {\n    return this._severity;\n  }\n\n  set severity(severity) {\n    this._severity = severity;\n    this.update();\n  }\n\n  show() {\n    if (this.visible) {\n      return;\n    }\n\n    this.visibleDisposables.add(this.ui.onDidTriggerButton(button => {\n      if (this.buttons.indexOf(button) !== -1) {\n        this.onDidTriggerButtonEmitter.fire(button);\n      }\n    }));\n    this.ui.show(this); // update properties in the controller that get reset in the ui.show() call\n\n    this.visible = true; // This ensures the message/prompt gets rendered\n\n    this._lastValidationMessage = undefined; // This ensures the input box has the right severity applied\n\n    this._lastSeverity = undefined;\n\n    if (this.buttons.length) {\n      // if there are buttons, the ui.show() clears them out of the UI so we should\n      // rerender them.\n      this.buttonsUpdated = true;\n    }\n\n    this.update();\n  }\n\n  hide() {\n    if (!this.visible) {\n      return;\n    }\n\n    this.ui.hide();\n  }\n\n  didHide() {\n    let reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : QuickInputHideReason.Other;\n    this.visible = false;\n    this.visibleDisposables.clear();\n    this.onDidHideEmitter.fire({\n      reason\n    });\n  }\n\n  update() {\n    if (!this.visible) {\n      return;\n    }\n\n    const title = this.getTitle();\n\n    if (title && this.ui.title.textContent !== title) {\n      this.ui.title.textContent = title;\n    } else if (!title && this.ui.title.innerHTML !== '&nbsp;') {\n      this.ui.title.innerText = '\\u00a0';\n    }\n\n    const description = this.getDescription();\n\n    if (this.ui.description1.textContent !== description) {\n      this.ui.description1.textContent = description;\n    }\n\n    if (this.ui.description2.textContent !== description) {\n      this.ui.description2.textContent = description;\n    }\n\n    if (this.busy && !this.busyDelay) {\n      this.busyDelay = new TimeoutTimer();\n      this.busyDelay.setIfNotSet(() => {\n        if (this.visible) {\n          this.ui.progressBar.infinite();\n        }\n      }, 800);\n    }\n\n    if (!this.busy && this.busyDelay) {\n      this.ui.progressBar.stop();\n      this.busyDelay.cancel();\n      this.busyDelay = undefined;\n    }\n\n    if (this.buttonsUpdated) {\n      this.buttonsUpdated = false;\n      this.ui.leftActionBar.clear();\n      const leftButtons = this.buttons.filter(button => button === backButton);\n      this.ui.leftActionBar.push(leftButtons.map((button, index) => {\n        const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\n          this.onDidTriggerButtonEmitter.fire(button);\n        }));\n        action.tooltip = button.tooltip || '';\n        return action;\n      }), {\n        icon: true,\n        label: false\n      });\n      this.ui.rightActionBar.clear();\n      const rightButtons = this.buttons.filter(button => button !== backButton);\n      this.ui.rightActionBar.push(rightButtons.map((button, index) => {\n        const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\n          this.onDidTriggerButtonEmitter.fire(button);\n        }));\n        action.tooltip = button.tooltip || '';\n        return action;\n      }), {\n        icon: true,\n        label: false\n      });\n    }\n\n    this.ui.ignoreFocusOut = this.ignoreFocusOut;\n    this.ui.setEnabled(this.enabled);\n    this.ui.setContextKey(this.contextKey);\n    const validationMessage = this.validationMessage || this.noValidationMessage;\n\n    if (this._lastValidationMessage !== validationMessage) {\n      this._lastValidationMessage = validationMessage;\n      dom.reset(this.ui.message, ...renderLabelWithIcons(validationMessage));\n    }\n\n    if (this._lastSeverity !== this.severity) {\n      this._lastSeverity = this.severity;\n      this.showMessageDecoration(this.severity);\n    }\n  }\n\n  getTitle() {\n    if (this.title && this.step) {\n      return `${this.title} (${this.getSteps()})`;\n    }\n\n    if (this.title) {\n      return this.title;\n    }\n\n    if (this.step) {\n      return this.getSteps();\n    }\n\n    return '';\n  }\n\n  getDescription() {\n    return this.description || '';\n  }\n\n  getSteps() {\n    if (this.step && this.totalSteps) {\n      return localize('quickInput.steps', \"{0}/{1}\", this.step, this.totalSteps);\n    }\n\n    if (this.step) {\n      return String(this.step);\n    }\n\n    return '';\n  }\n\n  showMessageDecoration(severity) {\n    this.ui.inputBox.showDecoration(severity);\n\n    if (severity !== Severity.Ignore) {\n      const styles = this.ui.inputBox.stylesForType(severity);\n      this.ui.message.style.color = styles.foreground ? `${styles.foreground}` : '';\n      this.ui.message.style.backgroundColor = styles.background ? `${styles.background}` : '';\n      this.ui.message.style.border = styles.border ? `1px solid ${styles.border}` : '';\n      this.ui.message.style.paddingBottom = '4px';\n    } else {\n      this.ui.message.style.color = '';\n      this.ui.message.style.backgroundColor = '';\n      this.ui.message.style.border = '';\n      this.ui.message.style.paddingBottom = '';\n    }\n  }\n\n  dispose() {\n    this.hide();\n    this.onDisposeEmitter.fire();\n    super.dispose();\n  }\n\n}\n\nQuickInput.noPromptMessage = localize('inputModeEntry', \"Press 'Enter' to confirm your input or 'Escape' to cancel\");\n\nclass QuickPick extends QuickInput {\n  constructor() {\n    super(...arguments);\n    this._value = '';\n    this.onDidChangeValueEmitter = this._register(new Emitter());\n    this.onWillAcceptEmitter = this._register(new Emitter());\n    this.onDidAcceptEmitter = this._register(new Emitter());\n    this.onDidCustomEmitter = this._register(new Emitter());\n    this._items = [];\n    this.itemsUpdated = false;\n    this._canSelectMany = false;\n    this._canAcceptInBackground = false;\n    this._matchOnDescription = false;\n    this._matchOnDetail = false;\n    this._matchOnLabel = true;\n    this._sortByLabel = true;\n    this._autoFocusOnList = true;\n    this._keepScrollPosition = false;\n    this._itemActivation = this.ui.isScreenReaderOptimized() ? ItemActivation.NONE\n    /* https://github.com/microsoft/vscode/issues/57501 */\n    : ItemActivation.FIRST;\n    this._activeItems = [];\n    this.activeItemsUpdated = false;\n    this.activeItemsToConfirm = [];\n    this.onDidChangeActiveEmitter = this._register(new Emitter());\n    this._selectedItems = [];\n    this.selectedItemsUpdated = false;\n    this.selectedItemsToConfirm = [];\n    this.onDidChangeSelectionEmitter = this._register(new Emitter());\n    this.onDidTriggerItemButtonEmitter = this._register(new Emitter());\n    this.valueSelectionUpdated = true;\n    this._ok = 'default';\n    this._customButton = false;\n\n    this.filterValue = value => value;\n\n    this.onDidChangeValue = this.onDidChangeValueEmitter.event;\n    this.onWillAccept = this.onWillAcceptEmitter.event;\n    this.onDidAccept = this.onDidAcceptEmitter.event;\n    this.onDidChangeActive = this.onDidChangeActiveEmitter.event;\n    this.onDidChangeSelection = this.onDidChangeSelectionEmitter.event;\n    this.onDidTriggerItemButton = this.onDidTriggerItemButtonEmitter.event;\n  }\n\n  get quickNavigate() {\n    return this._quickNavigate;\n  }\n\n  set quickNavigate(quickNavigate) {\n    this._quickNavigate = quickNavigate;\n    this.update();\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (this._value !== value) {\n      this._value = value || '';\n      this.update();\n      this.onDidChangeValueEmitter.fire(this._value);\n    }\n  }\n\n  set ariaLabel(ariaLabel) {\n    this._ariaLabel = ariaLabel;\n    this.update();\n  }\n\n  get ariaLabel() {\n    return this._ariaLabel;\n  }\n\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  set placeholder(placeholder) {\n    this._placeholder = placeholder;\n    this.update();\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  get scrollTop() {\n    return this.ui.list.scrollTop;\n  }\n\n  set scrollTop(scrollTop) {\n    this.ui.list.scrollTop = scrollTop;\n  }\n\n  set items(items) {\n    this._items = items;\n    this.itemsUpdated = true;\n    this.update();\n  }\n\n  get canSelectMany() {\n    return this._canSelectMany;\n  }\n\n  set canSelectMany(canSelectMany) {\n    this._canSelectMany = canSelectMany;\n    this.update();\n  }\n\n  get canAcceptInBackground() {\n    return this._canAcceptInBackground;\n  }\n\n  set canAcceptInBackground(canAcceptInBackground) {\n    this._canAcceptInBackground = canAcceptInBackground;\n  }\n\n  get matchOnDescription() {\n    return this._matchOnDescription;\n  }\n\n  set matchOnDescription(matchOnDescription) {\n    this._matchOnDescription = matchOnDescription;\n    this.update();\n  }\n\n  get matchOnDetail() {\n    return this._matchOnDetail;\n  }\n\n  set matchOnDetail(matchOnDetail) {\n    this._matchOnDetail = matchOnDetail;\n    this.update();\n  }\n\n  get matchOnLabel() {\n    return this._matchOnLabel;\n  }\n\n  set matchOnLabel(matchOnLabel) {\n    this._matchOnLabel = matchOnLabel;\n    this.update();\n  }\n\n  get sortByLabel() {\n    return this._sortByLabel;\n  }\n\n  set sortByLabel(sortByLabel) {\n    this._sortByLabel = sortByLabel;\n    this.update();\n  }\n\n  get autoFocusOnList() {\n    return this._autoFocusOnList;\n  }\n\n  set autoFocusOnList(autoFocusOnList) {\n    this._autoFocusOnList = autoFocusOnList;\n    this.update();\n  }\n\n  get keepScrollPosition() {\n    return this._keepScrollPosition;\n  }\n\n  set keepScrollPosition(keepScrollPosition) {\n    this._keepScrollPosition = keepScrollPosition;\n  }\n\n  get itemActivation() {\n    return this._itemActivation;\n  }\n\n  set itemActivation(itemActivation) {\n    this._itemActivation = itemActivation;\n  }\n\n  get activeItems() {\n    return this._activeItems;\n  }\n\n  set activeItems(activeItems) {\n    this._activeItems = activeItems;\n    this.activeItemsUpdated = true;\n    this.update();\n  }\n\n  get selectedItems() {\n    return this._selectedItems;\n  }\n\n  set selectedItems(selectedItems) {\n    this._selectedItems = selectedItems;\n    this.selectedItemsUpdated = true;\n    this.update();\n  }\n\n  get keyMods() {\n    if (this._quickNavigate) {\n      // Disable keyMods when quick navigate is enabled\n      // because in this model the interaction is purely\n      // keyboard driven and Ctrl/Alt are typically\n      // pressed and hold during this interaction.\n      return NO_KEY_MODS;\n    }\n\n    return this.ui.keyMods;\n  }\n\n  set valueSelection(valueSelection) {\n    this._valueSelection = valueSelection;\n    this.valueSelectionUpdated = true;\n    this.update();\n  }\n\n  get customButton() {\n    return this._customButton;\n  }\n\n  set customButton(showCustomButton) {\n    this._customButton = showCustomButton;\n    this.update();\n  }\n\n  get customLabel() {\n    return this._customButtonLabel;\n  }\n\n  set customLabel(label) {\n    this._customButtonLabel = label;\n    this.update();\n  }\n\n  get customHover() {\n    return this._customButtonHover;\n  }\n\n  set customHover(hover) {\n    this._customButtonHover = hover;\n    this.update();\n  }\n\n  get ok() {\n    return this._ok;\n  }\n\n  set ok(showOkButton) {\n    this._ok = showOkButton;\n    this.update();\n  }\n\n  get hideInput() {\n    return !!this._hideInput;\n  }\n\n  set hideInput(hideInput) {\n    this._hideInput = hideInput;\n    this.update();\n  }\n\n  trySelectFirst() {\n    if (this.autoFocusOnList) {\n      if (!this.canSelectMany) {\n        this.ui.list.focus(QuickInputListFocus.First);\n      }\n    }\n  }\n\n  show() {\n    if (!this.visible) {\n      this.visibleDisposables.add(this.ui.inputBox.onDidChange(value => {\n        if (value === this.value) {\n          return;\n        }\n\n        this._value = value;\n        const didFilter = this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\n\n        if (didFilter) {\n          this.trySelectFirst();\n        }\n\n        this.onDidChangeValueEmitter.fire(value);\n      }));\n      this.visibleDisposables.add(this.ui.inputBox.onMouseDown(event => {\n        if (!this.autoFocusOnList) {\n          this.ui.list.clearFocus();\n        }\n      }));\n      this.visibleDisposables.add((this._hideInput ? this.ui.list : this.ui.inputBox).onKeyDown(event => {\n        switch (event.keyCode) {\n          case 18\n          /* DownArrow */\n          :\n            this.ui.list.focus(QuickInputListFocus.Next);\n\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n\n            dom.EventHelper.stop(event, true);\n            break;\n\n          case 16\n          /* UpArrow */\n          :\n            if (this.ui.list.getFocusedElements().length) {\n              this.ui.list.focus(QuickInputListFocus.Previous);\n            } else {\n              this.ui.list.focus(QuickInputListFocus.Last);\n            }\n\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n\n            dom.EventHelper.stop(event, true);\n            break;\n\n          case 12\n          /* PageDown */\n          :\n            this.ui.list.focus(QuickInputListFocus.NextPage);\n\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n\n            dom.EventHelper.stop(event, true);\n            break;\n\n          case 11\n          /* PageUp */\n          :\n            this.ui.list.focus(QuickInputListFocus.PreviousPage);\n\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n\n            dom.EventHelper.stop(event, true);\n            break;\n\n          case 17\n          /* RightArrow */\n          :\n            if (!this._canAcceptInBackground) {\n              return; // needs to be enabled\n            }\n\n            if (!this.ui.inputBox.isSelectionAtEnd()) {\n              return; // ensure input box selection at end\n            }\n\n            if (this.activeItems[0]) {\n              this._selectedItems = [this.activeItems[0]];\n              this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n              this.handleAccept(true);\n            }\n\n            break;\n\n          case 14\n          /* Home */\n          :\n            if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\n              this.ui.list.focus(QuickInputListFocus.First);\n              dom.EventHelper.stop(event, true);\n            }\n\n            break;\n\n          case 13\n          /* End */\n          :\n            if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\n              this.ui.list.focus(QuickInputListFocus.Last);\n              dom.EventHelper.stop(event, true);\n            }\n\n            break;\n        }\n      }));\n      this.visibleDisposables.add(this.ui.onDidAccept(() => {\n        if (this.canSelectMany) {\n          // if there are no checked elements, it means that an onDidChangeSelection never fired to overwrite\n          // `_selectedItems`. In that case, we should emit one with an empty array to ensure that\n          // `.selectedItems` is up to date.\n          if (!this.ui.list.getCheckedElements().length) {\n            this._selectedItems = [];\n            this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n          }\n        } else if (this.activeItems[0]) {\n          // For single-select, we set `selectedItems` to the item that was accepted.\n          this._selectedItems = [this.activeItems[0]];\n          this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n        }\n\n        this.handleAccept(false);\n      }));\n      this.visibleDisposables.add(this.ui.onDidCustom(() => {\n        this.onDidCustomEmitter.fire();\n      }));\n      this.visibleDisposables.add(this.ui.list.onDidChangeFocus(focusedItems => {\n        if (this.activeItemsUpdated) {\n          return; // Expect another event.\n        }\n\n        if (this.activeItemsToConfirm !== this._activeItems && equals(focusedItems, this._activeItems, (a, b) => a === b)) {\n          return;\n        }\n\n        this._activeItems = focusedItems;\n        this.onDidChangeActiveEmitter.fire(focusedItems);\n      }));\n      this.visibleDisposables.add(this.ui.list.onDidChangeSelection(_ref => {\n        let {\n          items: selectedItems,\n          event\n        } = _ref;\n\n        if (this.canSelectMany) {\n          if (selectedItems.length) {\n            this.ui.list.setSelectedElements([]);\n          }\n\n          return;\n        }\n\n        if (this.selectedItemsToConfirm !== this._selectedItems && equals(selectedItems, this._selectedItems, (a, b) => a === b)) {\n          return;\n        }\n\n        this._selectedItems = selectedItems;\n        this.onDidChangeSelectionEmitter.fire(selectedItems);\n\n        if (selectedItems.length) {\n          this.handleAccept(event instanceof MouseEvent && event.button === 1\n          /* mouse middle click */\n          );\n        }\n      }));\n      this.visibleDisposables.add(this.ui.list.onChangedCheckedElements(checkedItems => {\n        if (!this.canSelectMany) {\n          return;\n        }\n\n        if (this.selectedItemsToConfirm !== this._selectedItems && equals(checkedItems, this._selectedItems, (a, b) => a === b)) {\n          return;\n        }\n\n        this._selectedItems = checkedItems;\n        this.onDidChangeSelectionEmitter.fire(checkedItems);\n      }));\n      this.visibleDisposables.add(this.ui.list.onButtonTriggered(event => this.onDidTriggerItemButtonEmitter.fire(event)));\n      this.visibleDisposables.add(this.registerQuickNavigation());\n      this.valueSelectionUpdated = true;\n    }\n\n    super.show(); // TODO: Why have show() bubble up while update() trickles down? (Could move setComboboxAccessibility() here.)\n  }\n\n  handleAccept(inBackground) {\n    // Figure out veto via `onWillAccept` event\n    let veto = false;\n    this.onWillAcceptEmitter.fire({\n      veto: () => veto = true\n    }); // Continue with `onDidAccept` if no veto\n\n    if (!veto) {\n      this.onDidAcceptEmitter.fire({\n        inBackground\n      });\n    }\n  }\n\n  registerQuickNavigation() {\n    return dom.addDisposableListener(this.ui.container, dom.EventType.KEY_UP, e => {\n      if (this.canSelectMany || !this._quickNavigate) {\n        return;\n      }\n\n      const keyboardEvent = new StandardKeyboardEvent(e);\n      const keyCode = keyboardEvent.keyCode; // Select element when keys are pressed that signal it\n\n      const quickNavKeys = this._quickNavigate.keybindings;\n      const wasTriggerKeyPressed = quickNavKeys.some(k => {\n        const [firstPart, chordPart] = k.getParts();\n\n        if (chordPart) {\n          return false;\n        }\n\n        if (firstPart.shiftKey && keyCode === 4\n        /* Shift */\n        ) {\n          if (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\n            return false; // this is an optimistic check for the shift key being used to navigate back in quick input\n          }\n\n          return true;\n        }\n\n        if (firstPart.altKey && keyCode === 6\n        /* Alt */\n        ) {\n          return true;\n        }\n\n        if (firstPart.ctrlKey && keyCode === 5\n        /* Ctrl */\n        ) {\n          return true;\n        }\n\n        if (firstPart.metaKey && keyCode === 57\n        /* Meta */\n        ) {\n          return true;\n        }\n\n        return false;\n      });\n\n      if (wasTriggerKeyPressed) {\n        if (this.activeItems[0]) {\n          this._selectedItems = [this.activeItems[0]];\n          this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n          this.handleAccept(false);\n        } // Unset quick navigate after press. It is only valid once\n        // and should not result in any behaviour change afterwards\n        // if the picker remains open because there was no active item\n\n\n        this._quickNavigate = undefined;\n      }\n    });\n  }\n\n  update() {\n    if (!this.visible) {\n      return;\n    } // store the scrollTop before it is reset\n\n\n    const scrollTopBefore = this.keepScrollPosition ? this.scrollTop : 0;\n    const hideInput = !!this._hideInput && this._items.length > 0;\n    this.ui.container.classList.toggle('hidden-input', hideInput && !this.description);\n    const visibilities = {\n      title: !!this.title || !!this.step || !!this.buttons.length,\n      description: !!this.description,\n      checkAll: this.canSelectMany && !this._hideCheckAll,\n      checkBox: this.canSelectMany,\n      inputBox: !hideInput,\n      progressBar: !hideInput,\n      visibleCount: true,\n      count: this.canSelectMany,\n      ok: this.ok === 'default' ? this.canSelectMany : this.ok,\n      list: true,\n      message: !!this.validationMessage,\n      customButton: this.customButton\n    };\n    this.ui.setVisibilities(visibilities);\n    super.update();\n\n    if (this.ui.inputBox.value !== this.value) {\n      this.ui.inputBox.value = this.value;\n    }\n\n    if (this.valueSelectionUpdated) {\n      this.valueSelectionUpdated = false;\n      this.ui.inputBox.select(this._valueSelection && {\n        start: this._valueSelection[0],\n        end: this._valueSelection[1]\n      });\n    }\n\n    if (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\n      this.ui.inputBox.placeholder = this.placeholder || '';\n    }\n\n    const ariaLabel = this.ariaLabel || this.placeholder || QuickPick.DEFAULT_ARIA_LABEL;\n\n    if (this.ui.inputBox.ariaLabel !== ariaLabel) {\n      this.ui.inputBox.ariaLabel = ariaLabel;\n    }\n\n    this.ui.list.matchOnDescription = this.matchOnDescription;\n    this.ui.list.matchOnDetail = this.matchOnDetail;\n    this.ui.list.matchOnLabel = this.matchOnLabel;\n    this.ui.list.sortByLabel = this.sortByLabel;\n\n    if (this.itemsUpdated) {\n      this.itemsUpdated = false;\n      this.ui.list.setElements(this.items);\n      this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\n      this.ui.checkAll.checked = this.ui.list.getAllVisibleChecked();\n      this.ui.visibleCount.setCount(this.ui.list.getVisibleCount());\n      this.ui.count.setCount(this.ui.list.getCheckedCount());\n\n      switch (this._itemActivation) {\n        case ItemActivation.NONE:\n          this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n\n          break;\n\n        case ItemActivation.SECOND:\n          this.ui.list.focus(QuickInputListFocus.Second);\n          this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n\n          break;\n\n        case ItemActivation.LAST:\n          this.ui.list.focus(QuickInputListFocus.Last);\n          this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n\n          break;\n\n        default:\n          this.trySelectFirst();\n          break;\n      }\n    }\n\n    if (this.ui.container.classList.contains('show-checkboxes') !== !!this.canSelectMany) {\n      if (this.canSelectMany) {\n        this.ui.list.clearFocus();\n      } else {\n        this.trySelectFirst();\n      }\n    }\n\n    if (this.activeItemsUpdated) {\n      this.activeItemsUpdated = false;\n      this.activeItemsToConfirm = this._activeItems;\n      this.ui.list.setFocusedElements(this.activeItems);\n\n      if (this.activeItemsToConfirm === this._activeItems) {\n        this.activeItemsToConfirm = null;\n      }\n    }\n\n    if (this.selectedItemsUpdated) {\n      this.selectedItemsUpdated = false;\n      this.selectedItemsToConfirm = this._selectedItems;\n\n      if (this.canSelectMany) {\n        this.ui.list.setCheckedElements(this.selectedItems);\n      } else {\n        this.ui.list.setSelectedElements(this.selectedItems);\n      }\n\n      if (this.selectedItemsToConfirm === this._selectedItems) {\n        this.selectedItemsToConfirm = null;\n      }\n    }\n\n    this.ui.customButton.label = this.customLabel || '';\n    this.ui.customButton.element.title = this.customHover || '';\n    this.ui.setComboboxAccessibility(true);\n\n    if (!visibilities.inputBox) {\n      // we need to move focus into the tree to detect keybindings\n      // properly when the input box is not visible (quick nav)\n      this.ui.list.domFocus(); // Focus the first element in the list if multiselect is enabled\n\n      if (this.canSelectMany) {\n        this.ui.list.focus(QuickInputListFocus.First);\n      }\n    } // Set the scroll position to what it was before updating the items\n\n\n    if (this.keepScrollPosition) {\n      this.scrollTop = scrollTopBefore;\n    }\n  }\n\n}\n\nQuickPick.DEFAULT_ARIA_LABEL = localize('quickInputBox.ariaLabel', \"Type to narrow down results.\");\nexport class QuickInputController extends Disposable {\n  constructor(options) {\n    super();\n    this.options = options;\n    this.comboboxAccessibility = false;\n    this.enabled = true;\n    this.onDidAcceptEmitter = this._register(new Emitter());\n    this.onDidCustomEmitter = this._register(new Emitter());\n    this.onDidTriggerButtonEmitter = this._register(new Emitter());\n    this.keyMods = {\n      ctrlCmd: false,\n      alt: false\n    };\n    this.controller = null;\n    this.onShowEmitter = this._register(new Emitter());\n    this.onShow = this.onShowEmitter.event;\n    this.onHideEmitter = this._register(new Emitter());\n    this.onHide = this.onHideEmitter.event;\n    this.idPrefix = options.idPrefix;\n    this.parentElement = options.container;\n    this.styles = options.styles;\n    this.registerKeyModsListeners();\n  }\n\n  registerKeyModsListeners() {\n    const listener = e => {\n      this.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\n      this.keyMods.alt = e.altKey;\n    };\n\n    this._register(dom.addDisposableListener(window, dom.EventType.KEY_DOWN, listener, true));\n\n    this._register(dom.addDisposableListener(window, dom.EventType.KEY_UP, listener, true));\n\n    this._register(dom.addDisposableListener(window, dom.EventType.MOUSE_DOWN, listener, true));\n  }\n\n  getUI() {\n    if (this.ui) {\n      return this.ui;\n    }\n\n    const container = dom.append(this.parentElement, $('.quick-input-widget.show-file-icons'));\n    container.tabIndex = -1;\n    container.style.display = 'none';\n    const styleSheet = dom.createStyleSheet(container);\n    const titleBar = dom.append(container, $('.quick-input-titlebar'));\n\n    const leftActionBar = this._register(new ActionBar(titleBar));\n\n    leftActionBar.domNode.classList.add('quick-input-left-action-bar');\n    const title = dom.append(titleBar, $('.quick-input-title'));\n\n    const rightActionBar = this._register(new ActionBar(titleBar));\n\n    rightActionBar.domNode.classList.add('quick-input-right-action-bar');\n    const description1 = dom.append(container, $('.quick-input-description'));\n    const headerContainer = dom.append(container, $('.quick-input-header'));\n    const checkAll = dom.append(headerContainer, $('input.quick-input-check-all'));\n    checkAll.type = 'checkbox';\n\n    this._register(dom.addStandardDisposableListener(checkAll, dom.EventType.CHANGE, e => {\n      const checked = checkAll.checked;\n      list.setAllVisibleChecked(checked);\n    }));\n\n    this._register(dom.addDisposableListener(checkAll, dom.EventType.CLICK, e => {\n      if (e.x || e.y) {\n        // Avoid 'click' triggered by 'space'...\n        inputBox.setFocus();\n      }\n    }));\n\n    const description2 = dom.append(headerContainer, $('.quick-input-description'));\n    const extraContainer = dom.append(headerContainer, $('.quick-input-and-message'));\n    const filterContainer = dom.append(extraContainer, $('.quick-input-filter'));\n\n    const inputBox = this._register(new QuickInputBox(filterContainer));\n\n    inputBox.setAttribute('aria-describedby', `${this.idPrefix}message`);\n    const visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\n    visibleCountContainer.setAttribute('aria-live', 'polite');\n    visibleCountContainer.setAttribute('aria-atomic', 'true');\n    const visibleCount = new CountBadge(visibleCountContainer, {\n      countFormat: localize({\n        key: 'quickInput.visibleCount',\n        comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.']\n      }, \"{0} Results\")\n    });\n    const countContainer = dom.append(filterContainer, $('.quick-input-count'));\n    countContainer.setAttribute('aria-live', 'polite');\n    const count = new CountBadge(countContainer, {\n      countFormat: localize({\n        key: 'quickInput.countSelected',\n        comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.']\n      }, \"{0} Selected\")\n    });\n    const okContainer = dom.append(headerContainer, $('.quick-input-action'));\n    const ok = new Button(okContainer);\n    ok.label = localize('ok', \"OK\");\n\n    this._register(ok.onDidClick(e => {\n      this.onDidAcceptEmitter.fire();\n    }));\n\n    const customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\n    const customButton = new Button(customButtonContainer);\n    customButton.label = localize('custom', \"Custom\");\n\n    this._register(customButton.onDidClick(e => {\n      this.onDidCustomEmitter.fire();\n    }));\n\n    const message = dom.append(extraContainer, $(`#${this.idPrefix}message.quick-input-message`));\n\n    const list = this._register(new QuickInputList(container, this.idPrefix + 'list', this.options));\n\n    this._register(list.onChangedAllVisibleChecked(checked => {\n      checkAll.checked = checked;\n    }));\n\n    this._register(list.onChangedVisibleCount(c => {\n      visibleCount.setCount(c);\n    }));\n\n    this._register(list.onChangedCheckedCount(c => {\n      count.setCount(c);\n    }));\n\n    this._register(list.onLeave(() => {\n      // Defer to avoid the input field reacting to the triggering key.\n      setTimeout(() => {\n        inputBox.setFocus();\n\n        if (this.controller instanceof QuickPick && this.controller.canSelectMany) {\n          list.clearFocus();\n        }\n      }, 0);\n    }));\n\n    this._register(list.onDidChangeFocus(() => {\n      if (this.comboboxAccessibility) {\n        this.getUI().inputBox.setAttribute('aria-activedescendant', this.getUI().list.getActiveDescendant() || '');\n      }\n    }));\n\n    const progressBar = new ProgressBar(container);\n    progressBar.getContainer().classList.add('quick-input-progress');\n    const focusTracker = dom.trackFocus(container);\n\n    this._register(focusTracker);\n\n    this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n      this.previousFocusElement = e.relatedTarget instanceof HTMLElement ? e.relatedTarget : undefined;\n    }, true));\n\n    this._register(focusTracker.onDidBlur(() => {\n      if (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\n        this.hide(QuickInputHideReason.Blur);\n      }\n\n      this.previousFocusElement = undefined;\n    }));\n\n    this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n      inputBox.setFocus();\n    }));\n\n    this._register(dom.addDisposableListener(container, dom.EventType.KEY_DOWN, e => {\n      const event = new StandardKeyboardEvent(e);\n\n      switch (event.keyCode) {\n        case 3\n        /* Enter */\n        :\n          dom.EventHelper.stop(e, true);\n          this.onDidAcceptEmitter.fire();\n          break;\n\n        case 9\n        /* Escape */\n        :\n          dom.EventHelper.stop(e, true);\n          this.hide(QuickInputHideReason.Gesture);\n          break;\n\n        case 2\n        /* Tab */\n        :\n          if (!event.altKey && !event.ctrlKey && !event.metaKey) {\n            const selectors = ['.action-label.codicon'];\n\n            if (container.classList.contains('show-checkboxes')) {\n              selectors.push('input');\n            } else {\n              selectors.push('input[type=text]');\n            }\n\n            if (this.getUI().list.isDisplayed()) {\n              selectors.push('.monaco-list');\n            }\n\n            const stops = container.querySelectorAll(selectors.join(', '));\n\n            if (event.shiftKey && event.target === stops[0]) {\n              dom.EventHelper.stop(e, true);\n              stops[stops.length - 1].focus();\n            } else if (!event.shiftKey && event.target === stops[stops.length - 1]) {\n              dom.EventHelper.stop(e, true);\n              stops[0].focus();\n            }\n          }\n\n          break;\n      }\n    }));\n\n    this.ui = {\n      container,\n      styleSheet,\n      leftActionBar,\n      titleBar,\n      title,\n      description1,\n      description2,\n      rightActionBar,\n      checkAll,\n      filterContainer,\n      inputBox,\n      visibleCountContainer,\n      visibleCount,\n      countContainer,\n      count,\n      okContainer,\n      ok,\n      message,\n      customButtonContainer,\n      customButton,\n      list,\n      progressBar,\n      onDidAccept: this.onDidAcceptEmitter.event,\n      onDidCustom: this.onDidCustomEmitter.event,\n      onDidTriggerButton: this.onDidTriggerButtonEmitter.event,\n      ignoreFocusOut: false,\n      keyMods: this.keyMods,\n      isScreenReaderOptimized: () => this.options.isScreenReaderOptimized(),\n      show: controller => this.show(controller),\n      hide: () => this.hide(),\n      setVisibilities: visibilities => this.setVisibilities(visibilities),\n      setComboboxAccessibility: enabled => this.setComboboxAccessibility(enabled),\n      setEnabled: enabled => this.setEnabled(enabled),\n      setContextKey: contextKey => this.options.setContextKey(contextKey)\n    };\n    this.updateStyles();\n    return this.ui;\n  }\n\n  pick(picks) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : CancellationToken.None;\n    return new Promise((doResolve, reject) => {\n      let resolve = result => {\n        resolve = doResolve;\n\n        if (options.onKeyMods) {\n          options.onKeyMods(input.keyMods);\n        }\n\n        doResolve(result);\n      };\n\n      if (token.isCancellationRequested) {\n        resolve(undefined);\n        return;\n      }\n\n      const input = this.createQuickPick();\n      let activeItem;\n      const disposables = [input, input.onDidAccept(() => {\n        if (input.canSelectMany) {\n          resolve(input.selectedItems.slice());\n          input.hide();\n        } else {\n          const result = input.activeItems[0];\n\n          if (result) {\n            resolve(result);\n            input.hide();\n          }\n        }\n      }), input.onDidChangeActive(items => {\n        const focused = items[0];\n\n        if (focused && options.onDidFocus) {\n          options.onDidFocus(focused);\n        }\n      }), input.onDidChangeSelection(items => {\n        if (!input.canSelectMany) {\n          const result = items[0];\n\n          if (result) {\n            resolve(result);\n            input.hide();\n          }\n        }\n      }), input.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton(Object.assign(Object.assign({}, event), {\n        removeItem: () => {\n          const index = input.items.indexOf(event.item);\n\n          if (index !== -1) {\n            const items = input.items.slice();\n            const removed = items.splice(index, 1);\n            const activeItems = input.activeItems.filter(activeItem => activeItem !== removed[0]);\n            const keepScrollPositionBefore = input.keepScrollPosition;\n            input.keepScrollPosition = true;\n            input.items = items;\n\n            if (activeItems) {\n              input.activeItems = activeItems;\n            }\n\n            input.keepScrollPosition = keepScrollPositionBefore;\n          }\n        }\n      }))), input.onDidChangeValue(value => {\n        if (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\n          input.activeItems = [activeItem];\n        }\n      }), token.onCancellationRequested(() => {\n        input.hide();\n      }), input.onDidHide(() => {\n        dispose(disposables);\n        resolve(undefined);\n      })];\n      input.title = options.title;\n      input.canSelectMany = !!options.canPickMany;\n      input.placeholder = options.placeHolder;\n      input.ignoreFocusOut = !!options.ignoreFocusLost;\n      input.matchOnDescription = !!options.matchOnDescription;\n      input.matchOnDetail = !!options.matchOnDetail;\n      input.matchOnLabel = options.matchOnLabel === undefined || options.matchOnLabel; // default to true\n\n      input.autoFocusOnList = options.autoFocusOnList === undefined || options.autoFocusOnList; // default to true\n\n      input.quickNavigate = options.quickNavigate;\n      input.contextKey = options.contextKey;\n      input.busy = true;\n      Promise.all([picks, options.activeItem]).then(_ref2 => {\n        let [items, _activeItem] = _ref2;\n        activeItem = _activeItem;\n        input.busy = false;\n        input.items = items;\n\n        if (input.canSelectMany) {\n          input.selectedItems = items.filter(item => item.type !== 'separator' && item.picked);\n        }\n\n        if (activeItem) {\n          input.activeItems = [activeItem];\n        }\n      });\n      input.show();\n      Promise.resolve(picks).then(undefined, err => {\n        reject(err);\n        input.hide();\n      });\n    });\n  }\n\n  createQuickPick() {\n    const ui = this.getUI();\n    return new QuickPick(ui);\n  }\n\n  show(controller) {\n    const ui = this.getUI();\n    this.onShowEmitter.fire();\n    const oldController = this.controller;\n    this.controller = controller;\n\n    if (oldController) {\n      oldController.didHide();\n    }\n\n    this.setEnabled(true);\n    ui.leftActionBar.clear();\n    ui.title.textContent = '';\n    ui.description1.textContent = '';\n    ui.description2.textContent = '';\n    ui.rightActionBar.clear();\n    ui.checkAll.checked = false; // ui.inputBox.value = ''; Avoid triggering an event.\n\n    ui.inputBox.placeholder = '';\n    ui.inputBox.password = false;\n    ui.inputBox.showDecoration(Severity.Ignore);\n    ui.visibleCount.setCount(0);\n    ui.count.setCount(0);\n    dom.reset(ui.message);\n    ui.progressBar.stop();\n    ui.list.setElements([]);\n    ui.list.matchOnDescription = false;\n    ui.list.matchOnDetail = false;\n    ui.list.matchOnLabel = true;\n    ui.list.sortByLabel = true;\n    ui.ignoreFocusOut = false;\n    this.setComboboxAccessibility(false);\n    ui.inputBox.ariaLabel = '';\n    const backKeybindingLabel = this.options.backKeybindingLabel();\n    backButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\n    ui.container.style.display = '';\n    this.updateLayout();\n    ui.inputBox.setFocus();\n  }\n\n  setVisibilities(visibilities) {\n    const ui = this.getUI();\n    ui.title.style.display = visibilities.title ? '' : 'none';\n    ui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n    ui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n    ui.checkAll.style.display = visibilities.checkAll ? '' : 'none';\n    ui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\n    ui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\n    ui.countContainer.style.display = visibilities.count ? '' : 'none';\n    ui.okContainer.style.display = visibilities.ok ? '' : 'none';\n    ui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\n    ui.message.style.display = visibilities.message ? '' : 'none';\n    ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\n    ui.list.display(!!visibilities.list);\n    ui.container.classList[visibilities.checkBox ? 'add' : 'remove']('show-checkboxes');\n    this.updateLayout(); // TODO\n  }\n\n  setComboboxAccessibility(enabled) {\n    if (enabled !== this.comboboxAccessibility) {\n      const ui = this.getUI();\n      this.comboboxAccessibility = enabled;\n\n      if (this.comboboxAccessibility) {\n        ui.inputBox.setAttribute('role', 'combobox');\n        ui.inputBox.setAttribute('aria-haspopup', 'true');\n        ui.inputBox.setAttribute('aria-autocomplete', 'list');\n        ui.inputBox.setAttribute('aria-activedescendant', ui.list.getActiveDescendant() || '');\n      } else {\n        ui.inputBox.removeAttribute('role');\n        ui.inputBox.removeAttribute('aria-haspopup');\n        ui.inputBox.removeAttribute('aria-autocomplete');\n        ui.inputBox.removeAttribute('aria-activedescendant');\n      }\n    }\n  }\n\n  setEnabled(enabled) {\n    if (enabled !== this.enabled) {\n      this.enabled = enabled;\n\n      for (const item of this.getUI().leftActionBar.viewItems) {\n        item.getAction().enabled = enabled;\n      }\n\n      for (const item of this.getUI().rightActionBar.viewItems) {\n        item.getAction().enabled = enabled;\n      }\n\n      this.getUI().checkAll.disabled = !enabled; // this.getUI().inputBox.enabled = enabled; Avoid loosing focus.\n\n      this.getUI().ok.enabled = enabled;\n      this.getUI().list.enabled = enabled;\n    }\n  }\n\n  hide(reason) {\n    var _a;\n\n    const controller = this.controller;\n\n    if (controller) {\n      const focusChanged = !((_a = this.ui) === null || _a === void 0 ? void 0 : _a.container.contains(document.activeElement));\n      this.controller = null;\n      this.onHideEmitter.fire();\n      this.getUI().container.style.display = 'none';\n\n      if (!focusChanged) {\n        if (this.previousFocusElement && this.previousFocusElement.offsetParent) {\n          this.previousFocusElement.focus();\n          this.previousFocusElement = undefined;\n        } else {\n          this.options.returnFocus();\n        }\n      }\n\n      controller.didHide(reason);\n    }\n  }\n\n  layout(dimension, titleBarOffset) {\n    this.dimension = dimension;\n    this.titleBarOffset = titleBarOffset;\n    this.updateLayout();\n  }\n\n  updateLayout() {\n    if (this.ui) {\n      this.ui.container.style.top = `${this.titleBarOffset}px`;\n      const style = this.ui.container.style;\n      const width = Math.min(this.dimension.width * 0.62\n      /* golden cut */\n      , QuickInputController.MAX_WIDTH);\n      style.width = width + 'px';\n      style.marginLeft = '-' + width / 2 + 'px';\n      this.ui.inputBox.layout();\n      this.ui.list.layout(this.dimension && this.dimension.height * 0.4);\n    }\n  }\n\n  applyStyles(styles) {\n    this.styles = styles;\n    this.updateStyles();\n  }\n\n  updateStyles() {\n    if (this.ui) {\n      const {\n        quickInputTitleBackground,\n        quickInputBackground,\n        quickInputForeground,\n        contrastBorder,\n        widgetShadow\n      } = this.styles.widget;\n      this.ui.titleBar.style.backgroundColor = quickInputTitleBackground ? quickInputTitleBackground.toString() : '';\n      this.ui.container.style.backgroundColor = quickInputBackground ? quickInputBackground.toString() : '';\n      this.ui.container.style.color = quickInputForeground ? quickInputForeground.toString() : '';\n      this.ui.container.style.border = contrastBorder ? `1px solid ${contrastBorder}` : '';\n      this.ui.container.style.boxShadow = widgetShadow ? `0 0 8px 2px ${widgetShadow}` : '';\n      this.ui.inputBox.style(this.styles.inputBox);\n      this.ui.count.style(this.styles.countBadge);\n      this.ui.ok.style(this.styles.button);\n      this.ui.customButton.style(this.styles.button);\n      this.ui.progressBar.style(this.styles.progressBar);\n      this.ui.list.style(this.styles.list);\n      const content = [];\n\n      if (this.styles.list.pickerGroupBorder) {\n        content.push(`.quick-input-list .quick-input-list-entry { border-top-color:  ${this.styles.list.pickerGroupBorder}; }`);\n      }\n\n      if (this.styles.list.pickerGroupForeground) {\n        content.push(`.quick-input-list .quick-input-list-separator { color:  ${this.styles.list.pickerGroupForeground}; }`);\n      }\n\n      if (this.styles.keybindingLabel.keybindingLabelBackground || this.styles.keybindingLabel.keybindingLabelBorder || this.styles.keybindingLabel.keybindingLabelBottomBorder || this.styles.keybindingLabel.keybindingLabelShadow || this.styles.keybindingLabel.keybindingLabelForeground) {\n        content.push('.quick-input-list .monaco-keybinding > .monaco-keybinding-key {');\n\n        if (this.styles.keybindingLabel.keybindingLabelBackground) {\n          content.push(`background-color: ${this.styles.keybindingLabel.keybindingLabelBackground};`);\n        }\n\n        if (this.styles.keybindingLabel.keybindingLabelBorder) {\n          // Order matters here. `border-color` must come before `border-bottom-color`.\n          content.push(`border-color: ${this.styles.keybindingLabel.keybindingLabelBorder};`);\n        }\n\n        if (this.styles.keybindingLabel.keybindingLabelBottomBorder) {\n          content.push(`border-bottom-color: ${this.styles.keybindingLabel.keybindingLabelBottomBorder};`);\n        }\n\n        if (this.styles.keybindingLabel.keybindingLabelShadow) {\n          content.push(`box-shadow: inset 0 -1px 0 ${this.styles.keybindingLabel.keybindingLabelShadow};`);\n        }\n\n        if (this.styles.keybindingLabel.keybindingLabelForeground) {\n          content.push(`color: ${this.styles.keybindingLabel.keybindingLabelForeground};`);\n        }\n\n        content.push('}');\n      }\n\n      const newStyles = content.join('\\n');\n\n      if (newStyles !== this.ui.styleSheet.textContent) {\n        this.ui.styleSheet.textContent = newStyles;\n      }\n    }\n  }\n\n}\nQuickInputController.MAX_WIDTH = 600; // Max total width of quick input widget","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/base/parts/quickinput/browser/quickInput.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","dom","StandardKeyboardEvent","ActionBar","Button","CountBadge","renderLabelWithIcons","ProgressBar","Action","equals","TimeoutTimer","CancellationToken","Codicon","registerCodicon","Emitter","Disposable","DisposableStore","dispose","isIOS","Severity","getIconClass","ItemActivation","NO_KEY_MODS","QuickInputHideReason","localize","QuickInputBox","QuickInputList","QuickInputListFocus","$","backButtonIcon","arrowLeft","backButton","iconClass","classNames","tooltip","handle","QuickInput","constructor","ui","visible","_enabled","_busy","_ignoreFocusOut","_buttons","noValidationMessage","noPromptMessage","_severity","Ignore","buttonsUpdated","onDidTriggerButtonEmitter","_register","onDidHideEmitter","onDisposeEmitter","visibleDisposables","onDidHide","event","title","_title","update","description","_description","_steps","totalSteps","_totalSteps","enabled","contextKey","_contextKey","busy","ignoreFocusOut","shouldUpdate","buttons","validationMessage","_validationMessage","severity","show","add","onDidTriggerButton","button","indexOf","fire","_lastValidationMessage","undefined","_lastSeverity","length","hide","didHide","reason","Other","clear","getTitle","textContent","innerHTML","innerText","getDescription","description1","description2","busyDelay","setIfNotSet","progressBar","infinite","stop","cancel","leftActionBar","leftButtons","filter","push","map","index","action","iconPath","icon","label","rightActionBar","rightButtons","setEnabled","setContextKey","reset","message","showMessageDecoration","getSteps","String","inputBox","showDecoration","styles","stylesForType","style","color","foreground","backgroundColor","background","border","paddingBottom","QuickPick","arguments","_value","onDidChangeValueEmitter","onWillAcceptEmitter","onDidAcceptEmitter","onDidCustomEmitter","_items","itemsUpdated","_canSelectMany","_canAcceptInBackground","_matchOnDescription","_matchOnDetail","_matchOnLabel","_sortByLabel","_autoFocusOnList","_keepScrollPosition","_itemActivation","isScreenReaderOptimized","NONE","FIRST","_activeItems","activeItemsUpdated","activeItemsToConfirm","onDidChangeActiveEmitter","_selectedItems","selectedItemsUpdated","selectedItemsToConfirm","onDidChangeSelectionEmitter","onDidTriggerItemButtonEmitter","valueSelectionUpdated","_ok","_customButton","filterValue","onDidChangeValue","onWillAccept","onDidAccept","onDidChangeActive","onDidChangeSelection","onDidTriggerItemButton","quickNavigate","_quickNavigate","ariaLabel","_ariaLabel","placeholder","_placeholder","items","scrollTop","list","canSelectMany","canAcceptInBackground","matchOnDescription","matchOnDetail","matchOnLabel","sortByLabel","autoFocusOnList","keepScrollPosition","itemActivation","activeItems","selectedItems","keyMods","valueSelection","_valueSelection","customButton","showCustomButton","customLabel","_customButtonLabel","customHover","_customButtonHover","hover","ok","showOkButton","hideInput","_hideInput","trySelectFirst","focus","First","onDidChange","didFilter","onMouseDown","clearFocus","onKeyDown","keyCode","Next","domFocus","EventHelper","getFocusedElements","Previous","Last","NextPage","PreviousPage","isSelectionAtEnd","handleAccept","ctrlKey","metaKey","shiftKey","altKey","getCheckedElements","onDidCustom","onDidChangeFocus","focusedItems","a","b","setSelectedElements","MouseEvent","onChangedCheckedElements","checkedItems","onButtonTriggered","registerQuickNavigation","inBackground","veto","addDisposableListener","container","EventType","KEY_UP","keyboardEvent","quickNavKeys","keybindings","wasTriggerKeyPressed","some","k","firstPart","chordPart","getParts","scrollTopBefore","classList","toggle","visibilities","checkAll","_hideCheckAll","checkBox","visibleCount","count","setVisibilities","select","start","end","DEFAULT_ARIA_LABEL","setElements","checked","getAllVisibleChecked","setCount","getVisibleCount","getCheckedCount","SECOND","Second","LAST","contains","setFocusedElements","setCheckedElements","element","setComboboxAccessibility","QuickInputController","options","comboboxAccessibility","ctrlCmd","alt","controller","onShowEmitter","onShow","onHideEmitter","onHide","idPrefix","parentElement","registerKeyModsListeners","listener","window","KEY_DOWN","MOUSE_DOWN","getUI","append","tabIndex","display","styleSheet","createStyleSheet","titleBar","domNode","headerContainer","type","addStandardDisposableListener","CHANGE","setAllVisibleChecked","CLICK","x","y","setFocus","extraContainer","filterContainer","setAttribute","visibleCountContainer","countFormat","key","comment","countContainer","okContainer","onDidClick","customButtonContainer","onChangedAllVisibleChecked","onChangedVisibleCount","c","onChangedCheckedCount","onLeave","setTimeout","getActiveDescendant","getContainer","focusTracker","trackFocus","FOCUS","previousFocusElement","relatedTarget","HTMLElement","onDidBlur","Blur","Gesture","selectors","isDisplayed","stops","querySelectorAll","join","target","updateStyles","pick","picks","token","None","doResolve","onKeyMods","input","isCancellationRequested","createQuickPick","activeItem","disposables","slice","focused","onDidFocus","Object","assign","removeItem","item","removed","splice","keepScrollPositionBefore","onCancellationRequested","canPickMany","placeHolder","ignoreFocusLost","all","_activeItem","picked","err","oldController","password","backKeybindingLabel","updateLayout","removeAttribute","viewItems","getAction","disabled","_a","focusChanged","document","activeElement","offsetParent","returnFocus","layout","dimension","titleBarOffset","top","width","Math","min","MAX_WIDTH","marginLeft","height","applyStyles","quickInputTitleBackground","quickInputBackground","quickInputForeground","contrastBorder","widgetShadow","widget","toString","boxShadow","countBadge","content","pickerGroupBorder","pickerGroupForeground","keybindingLabel","keybindingLabelBackground","keybindingLabelBorder","keybindingLabelBottomBorder","keybindingLabelShadow","keybindingLabelForeground","newStyles"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\nimport { ActionBar } from '../../../browser/ui/actionbar/actionbar.js';\nimport { Button } from '../../../browser/ui/button/button.js';\nimport { CountBadge } from '../../../browser/ui/countBadge/countBadge.js';\nimport { renderLabelWithIcons } from '../../../browser/ui/iconLabel/iconLabels.js';\nimport { ProgressBar } from '../../../browser/ui/progressbar/progressbar.js';\nimport { Action } from '../../../common/actions.js';\nimport { equals } from '../../../common/arrays.js';\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { CancellationToken } from '../../../common/cancellation.js';\nimport { Codicon, registerCodicon } from '../../../common/codicons.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Disposable, DisposableStore, dispose } from '../../../common/lifecycle.js';\nimport { isIOS } from '../../../common/platform.js';\nimport Severity from '../../../common/severity.js';\nimport { getIconClass } from './quickInputUtils.js';\nimport { ItemActivation, NO_KEY_MODS, QuickInputHideReason } from '../common/quickInput.js';\nimport './media/quickInput.css';\nimport { localize } from '../../../../nls.js';\nimport { QuickInputBox } from './quickInputBox.js';\nimport { QuickInputList, QuickInputListFocus } from './quickInputList.js';\nconst $ = dom.$;\nconst backButtonIcon = registerCodicon('quick-input-back', Codicon.arrowLeft);\nconst backButton = {\n    iconClass: backButtonIcon.classNames,\n    tooltip: localize('quickInput.back', \"Back\"),\n    handle: -1 // TODO\n};\nclass QuickInput extends Disposable {\n    constructor(ui) {\n        super();\n        this.ui = ui;\n        this.visible = false;\n        this._enabled = true;\n        this._busy = false;\n        this._ignoreFocusOut = false;\n        this._buttons = [];\n        this.noValidationMessage = QuickInput.noPromptMessage;\n        this._severity = Severity.Ignore;\n        this.buttonsUpdated = false;\n        this.onDidTriggerButtonEmitter = this._register(new Emitter());\n        this.onDidHideEmitter = this._register(new Emitter());\n        this.onDisposeEmitter = this._register(new Emitter());\n        this.visibleDisposables = this._register(new DisposableStore());\n        this.onDidHide = this.onDidHideEmitter.event;\n    }\n    get title() {\n        return this._title;\n    }\n    set title(title) {\n        this._title = title;\n        this.update();\n    }\n    get description() {\n        return this._description;\n    }\n    set description(description) {\n        this._description = description;\n        this.update();\n    }\n    get step() {\n        return this._steps;\n    }\n    set step(step) {\n        this._steps = step;\n        this.update();\n    }\n    get totalSteps() {\n        return this._totalSteps;\n    }\n    set totalSteps(totalSteps) {\n        this._totalSteps = totalSteps;\n        this.update();\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(enabled) {\n        this._enabled = enabled;\n        this.update();\n    }\n    get contextKey() {\n        return this._contextKey;\n    }\n    set contextKey(contextKey) {\n        this._contextKey = contextKey;\n        this.update();\n    }\n    get busy() {\n        return this._busy;\n    }\n    set busy(busy) {\n        this._busy = busy;\n        this.update();\n    }\n    get ignoreFocusOut() {\n        return this._ignoreFocusOut;\n    }\n    set ignoreFocusOut(ignoreFocusOut) {\n        const shouldUpdate = this._ignoreFocusOut !== ignoreFocusOut && !isIOS;\n        this._ignoreFocusOut = ignoreFocusOut && !isIOS;\n        if (shouldUpdate) {\n            this.update();\n        }\n    }\n    get buttons() {\n        return this._buttons;\n    }\n    set buttons(buttons) {\n        this._buttons = buttons;\n        this.buttonsUpdated = true;\n        this.update();\n    }\n    get validationMessage() {\n        return this._validationMessage;\n    }\n    set validationMessage(validationMessage) {\n        this._validationMessage = validationMessage;\n        this.update();\n    }\n    get severity() {\n        return this._severity;\n    }\n    set severity(severity) {\n        this._severity = severity;\n        this.update();\n    }\n    show() {\n        if (this.visible) {\n            return;\n        }\n        this.visibleDisposables.add(this.ui.onDidTriggerButton(button => {\n            if (this.buttons.indexOf(button) !== -1) {\n                this.onDidTriggerButtonEmitter.fire(button);\n            }\n        }));\n        this.ui.show(this);\n        // update properties in the controller that get reset in the ui.show() call\n        this.visible = true;\n        // This ensures the message/prompt gets rendered\n        this._lastValidationMessage = undefined;\n        // This ensures the input box has the right severity applied\n        this._lastSeverity = undefined;\n        if (this.buttons.length) {\n            // if there are buttons, the ui.show() clears them out of the UI so we should\n            // rerender them.\n            this.buttonsUpdated = true;\n        }\n        this.update();\n    }\n    hide() {\n        if (!this.visible) {\n            return;\n        }\n        this.ui.hide();\n    }\n    didHide(reason = QuickInputHideReason.Other) {\n        this.visible = false;\n        this.visibleDisposables.clear();\n        this.onDidHideEmitter.fire({ reason });\n    }\n    update() {\n        if (!this.visible) {\n            return;\n        }\n        const title = this.getTitle();\n        if (title && this.ui.title.textContent !== title) {\n            this.ui.title.textContent = title;\n        }\n        else if (!title && this.ui.title.innerHTML !== '&nbsp;') {\n            this.ui.title.innerText = '\\u00a0';\n        }\n        const description = this.getDescription();\n        if (this.ui.description1.textContent !== description) {\n            this.ui.description1.textContent = description;\n        }\n        if (this.ui.description2.textContent !== description) {\n            this.ui.description2.textContent = description;\n        }\n        if (this.busy && !this.busyDelay) {\n            this.busyDelay = new TimeoutTimer();\n            this.busyDelay.setIfNotSet(() => {\n                if (this.visible) {\n                    this.ui.progressBar.infinite();\n                }\n            }, 800);\n        }\n        if (!this.busy && this.busyDelay) {\n            this.ui.progressBar.stop();\n            this.busyDelay.cancel();\n            this.busyDelay = undefined;\n        }\n        if (this.buttonsUpdated) {\n            this.buttonsUpdated = false;\n            this.ui.leftActionBar.clear();\n            const leftButtons = this.buttons.filter(button => button === backButton);\n            this.ui.leftActionBar.push(leftButtons.map((button, index) => {\n                const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\n                    this.onDidTriggerButtonEmitter.fire(button);\n                }));\n                action.tooltip = button.tooltip || '';\n                return action;\n            }), { icon: true, label: false });\n            this.ui.rightActionBar.clear();\n            const rightButtons = this.buttons.filter(button => button !== backButton);\n            this.ui.rightActionBar.push(rightButtons.map((button, index) => {\n                const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\n                    this.onDidTriggerButtonEmitter.fire(button);\n                }));\n                action.tooltip = button.tooltip || '';\n                return action;\n            }), { icon: true, label: false });\n        }\n        this.ui.ignoreFocusOut = this.ignoreFocusOut;\n        this.ui.setEnabled(this.enabled);\n        this.ui.setContextKey(this.contextKey);\n        const validationMessage = this.validationMessage || this.noValidationMessage;\n        if (this._lastValidationMessage !== validationMessage) {\n            this._lastValidationMessage = validationMessage;\n            dom.reset(this.ui.message, ...renderLabelWithIcons(validationMessage));\n        }\n        if (this._lastSeverity !== this.severity) {\n            this._lastSeverity = this.severity;\n            this.showMessageDecoration(this.severity);\n        }\n    }\n    getTitle() {\n        if (this.title && this.step) {\n            return `${this.title} (${this.getSteps()})`;\n        }\n        if (this.title) {\n            return this.title;\n        }\n        if (this.step) {\n            return this.getSteps();\n        }\n        return '';\n    }\n    getDescription() {\n        return this.description || '';\n    }\n    getSteps() {\n        if (this.step && this.totalSteps) {\n            return localize('quickInput.steps', \"{0}/{1}\", this.step, this.totalSteps);\n        }\n        if (this.step) {\n            return String(this.step);\n        }\n        return '';\n    }\n    showMessageDecoration(severity) {\n        this.ui.inputBox.showDecoration(severity);\n        if (severity !== Severity.Ignore) {\n            const styles = this.ui.inputBox.stylesForType(severity);\n            this.ui.message.style.color = styles.foreground ? `${styles.foreground}` : '';\n            this.ui.message.style.backgroundColor = styles.background ? `${styles.background}` : '';\n            this.ui.message.style.border = styles.border ? `1px solid ${styles.border}` : '';\n            this.ui.message.style.paddingBottom = '4px';\n        }\n        else {\n            this.ui.message.style.color = '';\n            this.ui.message.style.backgroundColor = '';\n            this.ui.message.style.border = '';\n            this.ui.message.style.paddingBottom = '';\n        }\n    }\n    dispose() {\n        this.hide();\n        this.onDisposeEmitter.fire();\n        super.dispose();\n    }\n}\nQuickInput.noPromptMessage = localize('inputModeEntry', \"Press 'Enter' to confirm your input or 'Escape' to cancel\");\nclass QuickPick extends QuickInput {\n    constructor() {\n        super(...arguments);\n        this._value = '';\n        this.onDidChangeValueEmitter = this._register(new Emitter());\n        this.onWillAcceptEmitter = this._register(new Emitter());\n        this.onDidAcceptEmitter = this._register(new Emitter());\n        this.onDidCustomEmitter = this._register(new Emitter());\n        this._items = [];\n        this.itemsUpdated = false;\n        this._canSelectMany = false;\n        this._canAcceptInBackground = false;\n        this._matchOnDescription = false;\n        this._matchOnDetail = false;\n        this._matchOnLabel = true;\n        this._sortByLabel = true;\n        this._autoFocusOnList = true;\n        this._keepScrollPosition = false;\n        this._itemActivation = this.ui.isScreenReaderOptimized() ? ItemActivation.NONE /* https://github.com/microsoft/vscode/issues/57501 */ : ItemActivation.FIRST;\n        this._activeItems = [];\n        this.activeItemsUpdated = false;\n        this.activeItemsToConfirm = [];\n        this.onDidChangeActiveEmitter = this._register(new Emitter());\n        this._selectedItems = [];\n        this.selectedItemsUpdated = false;\n        this.selectedItemsToConfirm = [];\n        this.onDidChangeSelectionEmitter = this._register(new Emitter());\n        this.onDidTriggerItemButtonEmitter = this._register(new Emitter());\n        this.valueSelectionUpdated = true;\n        this._ok = 'default';\n        this._customButton = false;\n        this.filterValue = (value) => value;\n        this.onDidChangeValue = this.onDidChangeValueEmitter.event;\n        this.onWillAccept = this.onWillAcceptEmitter.event;\n        this.onDidAccept = this.onDidAcceptEmitter.event;\n        this.onDidChangeActive = this.onDidChangeActiveEmitter.event;\n        this.onDidChangeSelection = this.onDidChangeSelectionEmitter.event;\n        this.onDidTriggerItemButton = this.onDidTriggerItemButtonEmitter.event;\n    }\n    get quickNavigate() {\n        return this._quickNavigate;\n    }\n    set quickNavigate(quickNavigate) {\n        this._quickNavigate = quickNavigate;\n        this.update();\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value || '';\n            this.update();\n            this.onDidChangeValueEmitter.fire(this._value);\n        }\n    }\n    set ariaLabel(ariaLabel) {\n        this._ariaLabel = ariaLabel;\n        this.update();\n    }\n    get ariaLabel() {\n        return this._ariaLabel;\n    }\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(placeholder) {\n        this._placeholder = placeholder;\n        this.update();\n    }\n    get items() {\n        return this._items;\n    }\n    get scrollTop() {\n        return this.ui.list.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.ui.list.scrollTop = scrollTop;\n    }\n    set items(items) {\n        this._items = items;\n        this.itemsUpdated = true;\n        this.update();\n    }\n    get canSelectMany() {\n        return this._canSelectMany;\n    }\n    set canSelectMany(canSelectMany) {\n        this._canSelectMany = canSelectMany;\n        this.update();\n    }\n    get canAcceptInBackground() {\n        return this._canAcceptInBackground;\n    }\n    set canAcceptInBackground(canAcceptInBackground) {\n        this._canAcceptInBackground = canAcceptInBackground;\n    }\n    get matchOnDescription() {\n        return this._matchOnDescription;\n    }\n    set matchOnDescription(matchOnDescription) {\n        this._matchOnDescription = matchOnDescription;\n        this.update();\n    }\n    get matchOnDetail() {\n        return this._matchOnDetail;\n    }\n    set matchOnDetail(matchOnDetail) {\n        this._matchOnDetail = matchOnDetail;\n        this.update();\n    }\n    get matchOnLabel() {\n        return this._matchOnLabel;\n    }\n    set matchOnLabel(matchOnLabel) {\n        this._matchOnLabel = matchOnLabel;\n        this.update();\n    }\n    get sortByLabel() {\n        return this._sortByLabel;\n    }\n    set sortByLabel(sortByLabel) {\n        this._sortByLabel = sortByLabel;\n        this.update();\n    }\n    get autoFocusOnList() {\n        return this._autoFocusOnList;\n    }\n    set autoFocusOnList(autoFocusOnList) {\n        this._autoFocusOnList = autoFocusOnList;\n        this.update();\n    }\n    get keepScrollPosition() {\n        return this._keepScrollPosition;\n    }\n    set keepScrollPosition(keepScrollPosition) {\n        this._keepScrollPosition = keepScrollPosition;\n    }\n    get itemActivation() {\n        return this._itemActivation;\n    }\n    set itemActivation(itemActivation) {\n        this._itemActivation = itemActivation;\n    }\n    get activeItems() {\n        return this._activeItems;\n    }\n    set activeItems(activeItems) {\n        this._activeItems = activeItems;\n        this.activeItemsUpdated = true;\n        this.update();\n    }\n    get selectedItems() {\n        return this._selectedItems;\n    }\n    set selectedItems(selectedItems) {\n        this._selectedItems = selectedItems;\n        this.selectedItemsUpdated = true;\n        this.update();\n    }\n    get keyMods() {\n        if (this._quickNavigate) {\n            // Disable keyMods when quick navigate is enabled\n            // because in this model the interaction is purely\n            // keyboard driven and Ctrl/Alt are typically\n            // pressed and hold during this interaction.\n            return NO_KEY_MODS;\n        }\n        return this.ui.keyMods;\n    }\n    set valueSelection(valueSelection) {\n        this._valueSelection = valueSelection;\n        this.valueSelectionUpdated = true;\n        this.update();\n    }\n    get customButton() {\n        return this._customButton;\n    }\n    set customButton(showCustomButton) {\n        this._customButton = showCustomButton;\n        this.update();\n    }\n    get customLabel() {\n        return this._customButtonLabel;\n    }\n    set customLabel(label) {\n        this._customButtonLabel = label;\n        this.update();\n    }\n    get customHover() {\n        return this._customButtonHover;\n    }\n    set customHover(hover) {\n        this._customButtonHover = hover;\n        this.update();\n    }\n    get ok() {\n        return this._ok;\n    }\n    set ok(showOkButton) {\n        this._ok = showOkButton;\n        this.update();\n    }\n    get hideInput() {\n        return !!this._hideInput;\n    }\n    set hideInput(hideInput) {\n        this._hideInput = hideInput;\n        this.update();\n    }\n    trySelectFirst() {\n        if (this.autoFocusOnList) {\n            if (!this.canSelectMany) {\n                this.ui.list.focus(QuickInputListFocus.First);\n            }\n        }\n    }\n    show() {\n        if (!this.visible) {\n            this.visibleDisposables.add(this.ui.inputBox.onDidChange(value => {\n                if (value === this.value) {\n                    return;\n                }\n                this._value = value;\n                const didFilter = this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\n                if (didFilter) {\n                    this.trySelectFirst();\n                }\n                this.onDidChangeValueEmitter.fire(value);\n            }));\n            this.visibleDisposables.add(this.ui.inputBox.onMouseDown(event => {\n                if (!this.autoFocusOnList) {\n                    this.ui.list.clearFocus();\n                }\n            }));\n            this.visibleDisposables.add((this._hideInput ? this.ui.list : this.ui.inputBox).onKeyDown((event) => {\n                switch (event.keyCode) {\n                    case 18 /* DownArrow */:\n                        this.ui.list.focus(QuickInputListFocus.Next);\n                        if (this.canSelectMany) {\n                            this.ui.list.domFocus();\n                        }\n                        dom.EventHelper.stop(event, true);\n                        break;\n                    case 16 /* UpArrow */:\n                        if (this.ui.list.getFocusedElements().length) {\n                            this.ui.list.focus(QuickInputListFocus.Previous);\n                        }\n                        else {\n                            this.ui.list.focus(QuickInputListFocus.Last);\n                        }\n                        if (this.canSelectMany) {\n                            this.ui.list.domFocus();\n                        }\n                        dom.EventHelper.stop(event, true);\n                        break;\n                    case 12 /* PageDown */:\n                        this.ui.list.focus(QuickInputListFocus.NextPage);\n                        if (this.canSelectMany) {\n                            this.ui.list.domFocus();\n                        }\n                        dom.EventHelper.stop(event, true);\n                        break;\n                    case 11 /* PageUp */:\n                        this.ui.list.focus(QuickInputListFocus.PreviousPage);\n                        if (this.canSelectMany) {\n                            this.ui.list.domFocus();\n                        }\n                        dom.EventHelper.stop(event, true);\n                        break;\n                    case 17 /* RightArrow */:\n                        if (!this._canAcceptInBackground) {\n                            return; // needs to be enabled\n                        }\n                        if (!this.ui.inputBox.isSelectionAtEnd()) {\n                            return; // ensure input box selection at end\n                        }\n                        if (this.activeItems[0]) {\n                            this._selectedItems = [this.activeItems[0]];\n                            this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                            this.handleAccept(true);\n                        }\n                        break;\n                    case 14 /* Home */:\n                        if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\n                            this.ui.list.focus(QuickInputListFocus.First);\n                            dom.EventHelper.stop(event, true);\n                        }\n                        break;\n                    case 13 /* End */:\n                        if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\n                            this.ui.list.focus(QuickInputListFocus.Last);\n                            dom.EventHelper.stop(event, true);\n                        }\n                        break;\n                }\n            }));\n            this.visibleDisposables.add(this.ui.onDidAccept(() => {\n                if (this.canSelectMany) {\n                    // if there are no checked elements, it means that an onDidChangeSelection never fired to overwrite\n                    // `_selectedItems`. In that case, we should emit one with an empty array to ensure that\n                    // `.selectedItems` is up to date.\n                    if (!this.ui.list.getCheckedElements().length) {\n                        this._selectedItems = [];\n                        this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                    }\n                }\n                else if (this.activeItems[0]) {\n                    // For single-select, we set `selectedItems` to the item that was accepted.\n                    this._selectedItems = [this.activeItems[0]];\n                    this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                }\n                this.handleAccept(false);\n            }));\n            this.visibleDisposables.add(this.ui.onDidCustom(() => {\n                this.onDidCustomEmitter.fire();\n            }));\n            this.visibleDisposables.add(this.ui.list.onDidChangeFocus(focusedItems => {\n                if (this.activeItemsUpdated) {\n                    return; // Expect another event.\n                }\n                if (this.activeItemsToConfirm !== this._activeItems && equals(focusedItems, this._activeItems, (a, b) => a === b)) {\n                    return;\n                }\n                this._activeItems = focusedItems;\n                this.onDidChangeActiveEmitter.fire(focusedItems);\n            }));\n            this.visibleDisposables.add(this.ui.list.onDidChangeSelection(({ items: selectedItems, event }) => {\n                if (this.canSelectMany) {\n                    if (selectedItems.length) {\n                        this.ui.list.setSelectedElements([]);\n                    }\n                    return;\n                }\n                if (this.selectedItemsToConfirm !== this._selectedItems && equals(selectedItems, this._selectedItems, (a, b) => a === b)) {\n                    return;\n                }\n                this._selectedItems = selectedItems;\n                this.onDidChangeSelectionEmitter.fire(selectedItems);\n                if (selectedItems.length) {\n                    this.handleAccept(event instanceof MouseEvent && event.button === 1 /* mouse middle click */);\n                }\n            }));\n            this.visibleDisposables.add(this.ui.list.onChangedCheckedElements(checkedItems => {\n                if (!this.canSelectMany) {\n                    return;\n                }\n                if (this.selectedItemsToConfirm !== this._selectedItems && equals(checkedItems, this._selectedItems, (a, b) => a === b)) {\n                    return;\n                }\n                this._selectedItems = checkedItems;\n                this.onDidChangeSelectionEmitter.fire(checkedItems);\n            }));\n            this.visibleDisposables.add(this.ui.list.onButtonTriggered(event => this.onDidTriggerItemButtonEmitter.fire(event)));\n            this.visibleDisposables.add(this.registerQuickNavigation());\n            this.valueSelectionUpdated = true;\n        }\n        super.show(); // TODO: Why have show() bubble up while update() trickles down? (Could move setComboboxAccessibility() here.)\n    }\n    handleAccept(inBackground) {\n        // Figure out veto via `onWillAccept` event\n        let veto = false;\n        this.onWillAcceptEmitter.fire({ veto: () => veto = true });\n        // Continue with `onDidAccept` if no veto\n        if (!veto) {\n            this.onDidAcceptEmitter.fire({ inBackground });\n        }\n    }\n    registerQuickNavigation() {\n        return dom.addDisposableListener(this.ui.container, dom.EventType.KEY_UP, e => {\n            if (this.canSelectMany || !this._quickNavigate) {\n                return;\n            }\n            const keyboardEvent = new StandardKeyboardEvent(e);\n            const keyCode = keyboardEvent.keyCode;\n            // Select element when keys are pressed that signal it\n            const quickNavKeys = this._quickNavigate.keybindings;\n            const wasTriggerKeyPressed = quickNavKeys.some(k => {\n                const [firstPart, chordPart] = k.getParts();\n                if (chordPart) {\n                    return false;\n                }\n                if (firstPart.shiftKey && keyCode === 4 /* Shift */) {\n                    if (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\n                        return false; // this is an optimistic check for the shift key being used to navigate back in quick input\n                    }\n                    return true;\n                }\n                if (firstPart.altKey && keyCode === 6 /* Alt */) {\n                    return true;\n                }\n                if (firstPart.ctrlKey && keyCode === 5 /* Ctrl */) {\n                    return true;\n                }\n                if (firstPart.metaKey && keyCode === 57 /* Meta */) {\n                    return true;\n                }\n                return false;\n            });\n            if (wasTriggerKeyPressed) {\n                if (this.activeItems[0]) {\n                    this._selectedItems = [this.activeItems[0]];\n                    this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                    this.handleAccept(false);\n                }\n                // Unset quick navigate after press. It is only valid once\n                // and should not result in any behaviour change afterwards\n                // if the picker remains open because there was no active item\n                this._quickNavigate = undefined;\n            }\n        });\n    }\n    update() {\n        if (!this.visible) {\n            return;\n        }\n        // store the scrollTop before it is reset\n        const scrollTopBefore = this.keepScrollPosition ? this.scrollTop : 0;\n        const hideInput = !!this._hideInput && this._items.length > 0;\n        this.ui.container.classList.toggle('hidden-input', hideInput && !this.description);\n        const visibilities = {\n            title: !!this.title || !!this.step || !!this.buttons.length,\n            description: !!this.description,\n            checkAll: this.canSelectMany && !this._hideCheckAll,\n            checkBox: this.canSelectMany,\n            inputBox: !hideInput,\n            progressBar: !hideInput,\n            visibleCount: true,\n            count: this.canSelectMany,\n            ok: this.ok === 'default' ? this.canSelectMany : this.ok,\n            list: true,\n            message: !!this.validationMessage,\n            customButton: this.customButton\n        };\n        this.ui.setVisibilities(visibilities);\n        super.update();\n        if (this.ui.inputBox.value !== this.value) {\n            this.ui.inputBox.value = this.value;\n        }\n        if (this.valueSelectionUpdated) {\n            this.valueSelectionUpdated = false;\n            this.ui.inputBox.select(this._valueSelection && { start: this._valueSelection[0], end: this._valueSelection[1] });\n        }\n        if (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\n            this.ui.inputBox.placeholder = (this.placeholder || '');\n        }\n        const ariaLabel = this.ariaLabel || this.placeholder || QuickPick.DEFAULT_ARIA_LABEL;\n        if (this.ui.inputBox.ariaLabel !== ariaLabel) {\n            this.ui.inputBox.ariaLabel = ariaLabel;\n        }\n        this.ui.list.matchOnDescription = this.matchOnDescription;\n        this.ui.list.matchOnDetail = this.matchOnDetail;\n        this.ui.list.matchOnLabel = this.matchOnLabel;\n        this.ui.list.sortByLabel = this.sortByLabel;\n        if (this.itemsUpdated) {\n            this.itemsUpdated = false;\n            this.ui.list.setElements(this.items);\n            this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\n            this.ui.checkAll.checked = this.ui.list.getAllVisibleChecked();\n            this.ui.visibleCount.setCount(this.ui.list.getVisibleCount());\n            this.ui.count.setCount(this.ui.list.getCheckedCount());\n            switch (this._itemActivation) {\n                case ItemActivation.NONE:\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n                    break;\n                case ItemActivation.SECOND:\n                    this.ui.list.focus(QuickInputListFocus.Second);\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n                    break;\n                case ItemActivation.LAST:\n                    this.ui.list.focus(QuickInputListFocus.Last);\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n                    break;\n                default:\n                    this.trySelectFirst();\n                    break;\n            }\n        }\n        if (this.ui.container.classList.contains('show-checkboxes') !== !!this.canSelectMany) {\n            if (this.canSelectMany) {\n                this.ui.list.clearFocus();\n            }\n            else {\n                this.trySelectFirst();\n            }\n        }\n        if (this.activeItemsUpdated) {\n            this.activeItemsUpdated = false;\n            this.activeItemsToConfirm = this._activeItems;\n            this.ui.list.setFocusedElements(this.activeItems);\n            if (this.activeItemsToConfirm === this._activeItems) {\n                this.activeItemsToConfirm = null;\n            }\n        }\n        if (this.selectedItemsUpdated) {\n            this.selectedItemsUpdated = false;\n            this.selectedItemsToConfirm = this._selectedItems;\n            if (this.canSelectMany) {\n                this.ui.list.setCheckedElements(this.selectedItems);\n            }\n            else {\n                this.ui.list.setSelectedElements(this.selectedItems);\n            }\n            if (this.selectedItemsToConfirm === this._selectedItems) {\n                this.selectedItemsToConfirm = null;\n            }\n        }\n        this.ui.customButton.label = this.customLabel || '';\n        this.ui.customButton.element.title = this.customHover || '';\n        this.ui.setComboboxAccessibility(true);\n        if (!visibilities.inputBox) {\n            // we need to move focus into the tree to detect keybindings\n            // properly when the input box is not visible (quick nav)\n            this.ui.list.domFocus();\n            // Focus the first element in the list if multiselect is enabled\n            if (this.canSelectMany) {\n                this.ui.list.focus(QuickInputListFocus.First);\n            }\n        }\n        // Set the scroll position to what it was before updating the items\n        if (this.keepScrollPosition) {\n            this.scrollTop = scrollTopBefore;\n        }\n    }\n}\nQuickPick.DEFAULT_ARIA_LABEL = localize('quickInputBox.ariaLabel', \"Type to narrow down results.\");\nexport class QuickInputController extends Disposable {\n    constructor(options) {\n        super();\n        this.options = options;\n        this.comboboxAccessibility = false;\n        this.enabled = true;\n        this.onDidAcceptEmitter = this._register(new Emitter());\n        this.onDidCustomEmitter = this._register(new Emitter());\n        this.onDidTriggerButtonEmitter = this._register(new Emitter());\n        this.keyMods = { ctrlCmd: false, alt: false };\n        this.controller = null;\n        this.onShowEmitter = this._register(new Emitter());\n        this.onShow = this.onShowEmitter.event;\n        this.onHideEmitter = this._register(new Emitter());\n        this.onHide = this.onHideEmitter.event;\n        this.idPrefix = options.idPrefix;\n        this.parentElement = options.container;\n        this.styles = options.styles;\n        this.registerKeyModsListeners();\n    }\n    registerKeyModsListeners() {\n        const listener = (e) => {\n            this.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\n            this.keyMods.alt = e.altKey;\n        };\n        this._register(dom.addDisposableListener(window, dom.EventType.KEY_DOWN, listener, true));\n        this._register(dom.addDisposableListener(window, dom.EventType.KEY_UP, listener, true));\n        this._register(dom.addDisposableListener(window, dom.EventType.MOUSE_DOWN, listener, true));\n    }\n    getUI() {\n        if (this.ui) {\n            return this.ui;\n        }\n        const container = dom.append(this.parentElement, $('.quick-input-widget.show-file-icons'));\n        container.tabIndex = -1;\n        container.style.display = 'none';\n        const styleSheet = dom.createStyleSheet(container);\n        const titleBar = dom.append(container, $('.quick-input-titlebar'));\n        const leftActionBar = this._register(new ActionBar(titleBar));\n        leftActionBar.domNode.classList.add('quick-input-left-action-bar');\n        const title = dom.append(titleBar, $('.quick-input-title'));\n        const rightActionBar = this._register(new ActionBar(titleBar));\n        rightActionBar.domNode.classList.add('quick-input-right-action-bar');\n        const description1 = dom.append(container, $('.quick-input-description'));\n        const headerContainer = dom.append(container, $('.quick-input-header'));\n        const checkAll = dom.append(headerContainer, $('input.quick-input-check-all'));\n        checkAll.type = 'checkbox';\n        this._register(dom.addStandardDisposableListener(checkAll, dom.EventType.CHANGE, e => {\n            const checked = checkAll.checked;\n            list.setAllVisibleChecked(checked);\n        }));\n        this._register(dom.addDisposableListener(checkAll, dom.EventType.CLICK, e => {\n            if (e.x || e.y) { // Avoid 'click' triggered by 'space'...\n                inputBox.setFocus();\n            }\n        }));\n        const description2 = dom.append(headerContainer, $('.quick-input-description'));\n        const extraContainer = dom.append(headerContainer, $('.quick-input-and-message'));\n        const filterContainer = dom.append(extraContainer, $('.quick-input-filter'));\n        const inputBox = this._register(new QuickInputBox(filterContainer));\n        inputBox.setAttribute('aria-describedby', `${this.idPrefix}message`);\n        const visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\n        visibleCountContainer.setAttribute('aria-live', 'polite');\n        visibleCountContainer.setAttribute('aria-atomic', 'true');\n        const visibleCount = new CountBadge(visibleCountContainer, { countFormat: localize({ key: 'quickInput.visibleCount', comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.'] }, \"{0} Results\") });\n        const countContainer = dom.append(filterContainer, $('.quick-input-count'));\n        countContainer.setAttribute('aria-live', 'polite');\n        const count = new CountBadge(countContainer, { countFormat: localize({ key: 'quickInput.countSelected', comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.'] }, \"{0} Selected\") });\n        const okContainer = dom.append(headerContainer, $('.quick-input-action'));\n        const ok = new Button(okContainer);\n        ok.label = localize('ok', \"OK\");\n        this._register(ok.onDidClick(e => {\n            this.onDidAcceptEmitter.fire();\n        }));\n        const customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\n        const customButton = new Button(customButtonContainer);\n        customButton.label = localize('custom', \"Custom\");\n        this._register(customButton.onDidClick(e => {\n            this.onDidCustomEmitter.fire();\n        }));\n        const message = dom.append(extraContainer, $(`#${this.idPrefix}message.quick-input-message`));\n        const list = this._register(new QuickInputList(container, this.idPrefix + 'list', this.options));\n        this._register(list.onChangedAllVisibleChecked(checked => {\n            checkAll.checked = checked;\n        }));\n        this._register(list.onChangedVisibleCount(c => {\n            visibleCount.setCount(c);\n        }));\n        this._register(list.onChangedCheckedCount(c => {\n            count.setCount(c);\n        }));\n        this._register(list.onLeave(() => {\n            // Defer to avoid the input field reacting to the triggering key.\n            setTimeout(() => {\n                inputBox.setFocus();\n                if (this.controller instanceof QuickPick && this.controller.canSelectMany) {\n                    list.clearFocus();\n                }\n            }, 0);\n        }));\n        this._register(list.onDidChangeFocus(() => {\n            if (this.comboboxAccessibility) {\n                this.getUI().inputBox.setAttribute('aria-activedescendant', this.getUI().list.getActiveDescendant() || '');\n            }\n        }));\n        const progressBar = new ProgressBar(container);\n        progressBar.getContainer().classList.add('quick-input-progress');\n        const focusTracker = dom.trackFocus(container);\n        this._register(focusTracker);\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n            this.previousFocusElement = e.relatedTarget instanceof HTMLElement ? e.relatedTarget : undefined;\n        }, true));\n        this._register(focusTracker.onDidBlur(() => {\n            if (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\n                this.hide(QuickInputHideReason.Blur);\n            }\n            this.previousFocusElement = undefined;\n        }));\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, (e) => {\n            inputBox.setFocus();\n        }));\n        this._register(dom.addDisposableListener(container, dom.EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            switch (event.keyCode) {\n                case 3 /* Enter */:\n                    dom.EventHelper.stop(e, true);\n                    this.onDidAcceptEmitter.fire();\n                    break;\n                case 9 /* Escape */:\n                    dom.EventHelper.stop(e, true);\n                    this.hide(QuickInputHideReason.Gesture);\n                    break;\n                case 2 /* Tab */:\n                    if (!event.altKey && !event.ctrlKey && !event.metaKey) {\n                        const selectors = ['.action-label.codicon'];\n                        if (container.classList.contains('show-checkboxes')) {\n                            selectors.push('input');\n                        }\n                        else {\n                            selectors.push('input[type=text]');\n                        }\n                        if (this.getUI().list.isDisplayed()) {\n                            selectors.push('.monaco-list');\n                        }\n                        const stops = container.querySelectorAll(selectors.join(', '));\n                        if (event.shiftKey && event.target === stops[0]) {\n                            dom.EventHelper.stop(e, true);\n                            stops[stops.length - 1].focus();\n                        }\n                        else if (!event.shiftKey && event.target === stops[stops.length - 1]) {\n                            dom.EventHelper.stop(e, true);\n                            stops[0].focus();\n                        }\n                    }\n                    break;\n            }\n        }));\n        this.ui = {\n            container,\n            styleSheet,\n            leftActionBar,\n            titleBar,\n            title,\n            description1,\n            description2,\n            rightActionBar,\n            checkAll,\n            filterContainer,\n            inputBox,\n            visibleCountContainer,\n            visibleCount,\n            countContainer,\n            count,\n            okContainer,\n            ok,\n            message,\n            customButtonContainer,\n            customButton,\n            list,\n            progressBar,\n            onDidAccept: this.onDidAcceptEmitter.event,\n            onDidCustom: this.onDidCustomEmitter.event,\n            onDidTriggerButton: this.onDidTriggerButtonEmitter.event,\n            ignoreFocusOut: false,\n            keyMods: this.keyMods,\n            isScreenReaderOptimized: () => this.options.isScreenReaderOptimized(),\n            show: controller => this.show(controller),\n            hide: () => this.hide(),\n            setVisibilities: visibilities => this.setVisibilities(visibilities),\n            setComboboxAccessibility: enabled => this.setComboboxAccessibility(enabled),\n            setEnabled: enabled => this.setEnabled(enabled),\n            setContextKey: contextKey => this.options.setContextKey(contextKey),\n        };\n        this.updateStyles();\n        return this.ui;\n    }\n    pick(picks, options = {}, token = CancellationToken.None) {\n        return new Promise((doResolve, reject) => {\n            let resolve = (result) => {\n                resolve = doResolve;\n                if (options.onKeyMods) {\n                    options.onKeyMods(input.keyMods);\n                }\n                doResolve(result);\n            };\n            if (token.isCancellationRequested) {\n                resolve(undefined);\n                return;\n            }\n            const input = this.createQuickPick();\n            let activeItem;\n            const disposables = [\n                input,\n                input.onDidAccept(() => {\n                    if (input.canSelectMany) {\n                        resolve(input.selectedItems.slice());\n                        input.hide();\n                    }\n                    else {\n                        const result = input.activeItems[0];\n                        if (result) {\n                            resolve(result);\n                            input.hide();\n                        }\n                    }\n                }),\n                input.onDidChangeActive(items => {\n                    const focused = items[0];\n                    if (focused && options.onDidFocus) {\n                        options.onDidFocus(focused);\n                    }\n                }),\n                input.onDidChangeSelection(items => {\n                    if (!input.canSelectMany) {\n                        const result = items[0];\n                        if (result) {\n                            resolve(result);\n                            input.hide();\n                        }\n                    }\n                }),\n                input.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton(Object.assign(Object.assign({}, event), { removeItem: () => {\n                        const index = input.items.indexOf(event.item);\n                        if (index !== -1) {\n                            const items = input.items.slice();\n                            const removed = items.splice(index, 1);\n                            const activeItems = input.activeItems.filter(activeItem => activeItem !== removed[0]);\n                            const keepScrollPositionBefore = input.keepScrollPosition;\n                            input.keepScrollPosition = true;\n                            input.items = items;\n                            if (activeItems) {\n                                input.activeItems = activeItems;\n                            }\n                            input.keepScrollPosition = keepScrollPositionBefore;\n                        }\n                    } }))),\n                input.onDidChangeValue(value => {\n                    if (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\n                        input.activeItems = [activeItem];\n                    }\n                }),\n                token.onCancellationRequested(() => {\n                    input.hide();\n                }),\n                input.onDidHide(() => {\n                    dispose(disposables);\n                    resolve(undefined);\n                }),\n            ];\n            input.title = options.title;\n            input.canSelectMany = !!options.canPickMany;\n            input.placeholder = options.placeHolder;\n            input.ignoreFocusOut = !!options.ignoreFocusLost;\n            input.matchOnDescription = !!options.matchOnDescription;\n            input.matchOnDetail = !!options.matchOnDetail;\n            input.matchOnLabel = (options.matchOnLabel === undefined) || options.matchOnLabel; // default to true\n            input.autoFocusOnList = (options.autoFocusOnList === undefined) || options.autoFocusOnList; // default to true\n            input.quickNavigate = options.quickNavigate;\n            input.contextKey = options.contextKey;\n            input.busy = true;\n            Promise.all([picks, options.activeItem])\n                .then(([items, _activeItem]) => {\n                activeItem = _activeItem;\n                input.busy = false;\n                input.items = items;\n                if (input.canSelectMany) {\n                    input.selectedItems = items.filter(item => item.type !== 'separator' && item.picked);\n                }\n                if (activeItem) {\n                    input.activeItems = [activeItem];\n                }\n            });\n            input.show();\n            Promise.resolve(picks).then(undefined, err => {\n                reject(err);\n                input.hide();\n            });\n        });\n    }\n    createQuickPick() {\n        const ui = this.getUI();\n        return new QuickPick(ui);\n    }\n    show(controller) {\n        const ui = this.getUI();\n        this.onShowEmitter.fire();\n        const oldController = this.controller;\n        this.controller = controller;\n        if (oldController) {\n            oldController.didHide();\n        }\n        this.setEnabled(true);\n        ui.leftActionBar.clear();\n        ui.title.textContent = '';\n        ui.description1.textContent = '';\n        ui.description2.textContent = '';\n        ui.rightActionBar.clear();\n        ui.checkAll.checked = false;\n        // ui.inputBox.value = ''; Avoid triggering an event.\n        ui.inputBox.placeholder = '';\n        ui.inputBox.password = false;\n        ui.inputBox.showDecoration(Severity.Ignore);\n        ui.visibleCount.setCount(0);\n        ui.count.setCount(0);\n        dom.reset(ui.message);\n        ui.progressBar.stop();\n        ui.list.setElements([]);\n        ui.list.matchOnDescription = false;\n        ui.list.matchOnDetail = false;\n        ui.list.matchOnLabel = true;\n        ui.list.sortByLabel = true;\n        ui.ignoreFocusOut = false;\n        this.setComboboxAccessibility(false);\n        ui.inputBox.ariaLabel = '';\n        const backKeybindingLabel = this.options.backKeybindingLabel();\n        backButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\n        ui.container.style.display = '';\n        this.updateLayout();\n        ui.inputBox.setFocus();\n    }\n    setVisibilities(visibilities) {\n        const ui = this.getUI();\n        ui.title.style.display = visibilities.title ? '' : 'none';\n        ui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n        ui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n        ui.checkAll.style.display = visibilities.checkAll ? '' : 'none';\n        ui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\n        ui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\n        ui.countContainer.style.display = visibilities.count ? '' : 'none';\n        ui.okContainer.style.display = visibilities.ok ? '' : 'none';\n        ui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\n        ui.message.style.display = visibilities.message ? '' : 'none';\n        ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\n        ui.list.display(!!visibilities.list);\n        ui.container.classList[visibilities.checkBox ? 'add' : 'remove']('show-checkboxes');\n        this.updateLayout(); // TODO\n    }\n    setComboboxAccessibility(enabled) {\n        if (enabled !== this.comboboxAccessibility) {\n            const ui = this.getUI();\n            this.comboboxAccessibility = enabled;\n            if (this.comboboxAccessibility) {\n                ui.inputBox.setAttribute('role', 'combobox');\n                ui.inputBox.setAttribute('aria-haspopup', 'true');\n                ui.inputBox.setAttribute('aria-autocomplete', 'list');\n                ui.inputBox.setAttribute('aria-activedescendant', ui.list.getActiveDescendant() || '');\n            }\n            else {\n                ui.inputBox.removeAttribute('role');\n                ui.inputBox.removeAttribute('aria-haspopup');\n                ui.inputBox.removeAttribute('aria-autocomplete');\n                ui.inputBox.removeAttribute('aria-activedescendant');\n            }\n        }\n    }\n    setEnabled(enabled) {\n        if (enabled !== this.enabled) {\n            this.enabled = enabled;\n            for (const item of this.getUI().leftActionBar.viewItems) {\n                item.getAction().enabled = enabled;\n            }\n            for (const item of this.getUI().rightActionBar.viewItems) {\n                item.getAction().enabled = enabled;\n            }\n            this.getUI().checkAll.disabled = !enabled;\n            // this.getUI().inputBox.enabled = enabled; Avoid loosing focus.\n            this.getUI().ok.enabled = enabled;\n            this.getUI().list.enabled = enabled;\n        }\n    }\n    hide(reason) {\n        var _a;\n        const controller = this.controller;\n        if (controller) {\n            const focusChanged = !((_a = this.ui) === null || _a === void 0 ? void 0 : _a.container.contains(document.activeElement));\n            this.controller = null;\n            this.onHideEmitter.fire();\n            this.getUI().container.style.display = 'none';\n            if (!focusChanged) {\n                if (this.previousFocusElement && this.previousFocusElement.offsetParent) {\n                    this.previousFocusElement.focus();\n                    this.previousFocusElement = undefined;\n                }\n                else {\n                    this.options.returnFocus();\n                }\n            }\n            controller.didHide(reason);\n        }\n    }\n    layout(dimension, titleBarOffset) {\n        this.dimension = dimension;\n        this.titleBarOffset = titleBarOffset;\n        this.updateLayout();\n    }\n    updateLayout() {\n        if (this.ui) {\n            this.ui.container.style.top = `${this.titleBarOffset}px`;\n            const style = this.ui.container.style;\n            const width = Math.min(this.dimension.width * 0.62 /* golden cut */, QuickInputController.MAX_WIDTH);\n            style.width = width + 'px';\n            style.marginLeft = '-' + (width / 2) + 'px';\n            this.ui.inputBox.layout();\n            this.ui.list.layout(this.dimension && this.dimension.height * 0.4);\n        }\n    }\n    applyStyles(styles) {\n        this.styles = styles;\n        this.updateStyles();\n    }\n    updateStyles() {\n        if (this.ui) {\n            const { quickInputTitleBackground, quickInputBackground, quickInputForeground, contrastBorder, widgetShadow, } = this.styles.widget;\n            this.ui.titleBar.style.backgroundColor = quickInputTitleBackground ? quickInputTitleBackground.toString() : '';\n            this.ui.container.style.backgroundColor = quickInputBackground ? quickInputBackground.toString() : '';\n            this.ui.container.style.color = quickInputForeground ? quickInputForeground.toString() : '';\n            this.ui.container.style.border = contrastBorder ? `1px solid ${contrastBorder}` : '';\n            this.ui.container.style.boxShadow = widgetShadow ? `0 0 8px 2px ${widgetShadow}` : '';\n            this.ui.inputBox.style(this.styles.inputBox);\n            this.ui.count.style(this.styles.countBadge);\n            this.ui.ok.style(this.styles.button);\n            this.ui.customButton.style(this.styles.button);\n            this.ui.progressBar.style(this.styles.progressBar);\n            this.ui.list.style(this.styles.list);\n            const content = [];\n            if (this.styles.list.pickerGroupBorder) {\n                content.push(`.quick-input-list .quick-input-list-entry { border-top-color:  ${this.styles.list.pickerGroupBorder}; }`);\n            }\n            if (this.styles.list.pickerGroupForeground) {\n                content.push(`.quick-input-list .quick-input-list-separator { color:  ${this.styles.list.pickerGroupForeground}; }`);\n            }\n            if (this.styles.keybindingLabel.keybindingLabelBackground ||\n                this.styles.keybindingLabel.keybindingLabelBorder ||\n                this.styles.keybindingLabel.keybindingLabelBottomBorder ||\n                this.styles.keybindingLabel.keybindingLabelShadow ||\n                this.styles.keybindingLabel.keybindingLabelForeground) {\n                content.push('.quick-input-list .monaco-keybinding > .monaco-keybinding-key {');\n                if (this.styles.keybindingLabel.keybindingLabelBackground) {\n                    content.push(`background-color: ${this.styles.keybindingLabel.keybindingLabelBackground};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelBorder) {\n                    // Order matters here. `border-color` must come before `border-bottom-color`.\n                    content.push(`border-color: ${this.styles.keybindingLabel.keybindingLabelBorder};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelBottomBorder) {\n                    content.push(`border-bottom-color: ${this.styles.keybindingLabel.keybindingLabelBottomBorder};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelShadow) {\n                    content.push(`box-shadow: inset 0 -1px 0 ${this.styles.keybindingLabel.keybindingLabelShadow};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelForeground) {\n                    content.push(`color: ${this.styles.keybindingLabel.keybindingLabelForeground};`);\n                }\n                content.push('}');\n            }\n            const newStyles = content.join('\\n');\n            if (newStyles !== this.ui.styleSheet.textContent) {\n                this.ui.styleSheet.textContent = newStyles;\n            }\n        }\n    }\n}\nQuickInputController.MAX_WIDTH = 600; // Max total width of quick input widget\n"]},"metadata":{},"sourceType":"module"}