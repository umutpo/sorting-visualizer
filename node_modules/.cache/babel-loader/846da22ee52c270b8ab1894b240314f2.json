{"ast":null,"code":"import { equals } from '../../base/common/objects.js';\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\n\nexport var OverviewRulerLane;\n\n(function (OverviewRulerLane) {\n  OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n  OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n  OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n  OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * Position in the minimap to render the decoration.\n */\n\n\nexport var MinimapPosition;\n\n(function (MinimapPosition) {\n  MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n  MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\n\nexport class TextModelResolvedOptions {\n  /**\n   * @internal\n   */\n  constructor(src) {\n    this._textModelResolvedOptionsBrand = undefined;\n    this.tabSize = Math.max(1, src.tabSize | 0);\n    this.indentSize = src.tabSize | 0;\n    this.insertSpaces = Boolean(src.insertSpaces);\n    this.defaultEOL = src.defaultEOL | 0;\n    this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n    this.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n  }\n  /**\n   * @internal\n   */\n\n\n  equals(other) {\n    return this.tabSize === other.tabSize && this.indentSize === other.indentSize && this.insertSpaces === other.insertSpaces && this.defaultEOL === other.defaultEOL && this.trimAutoWhitespace === other.trimAutoWhitespace && equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions);\n  }\n  /**\n   * @internal\n   */\n\n\n  createChangeEvent(newOpts) {\n    return {\n      tabSize: this.tabSize !== newOpts.tabSize,\n      indentSize: this.indentSize !== newOpts.indentSize,\n      insertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n      trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace\n    };\n  }\n\n}\nexport class FindMatch {\n  /**\n   * @internal\n   */\n  constructor(range, matches) {\n    this._findMatchBrand = undefined;\n    this.range = range;\n    this.matches = matches;\n  }\n\n}\n/**\n * @internal\n */\n\nexport var HorizontalGuidesState;\n\n(function (HorizontalGuidesState) {\n  HorizontalGuidesState[HorizontalGuidesState[\"Disabled\"] = 0] = \"Disabled\";\n  HorizontalGuidesState[HorizontalGuidesState[\"EnabledForActive\"] = 1] = \"EnabledForActive\";\n  HorizontalGuidesState[HorizontalGuidesState[\"Enabled\"] = 2] = \"Enabled\";\n})(HorizontalGuidesState || (HorizontalGuidesState = {}));\n/**\n * @internal\n */\n\n\nexport class IndentGuide {\n  constructor(visibleColumn, className,\n  /**\n   * If set, this indent guide is a horizontal guide (no vertical part).\n   * It starts at visibleColumn and continues until endColumn.\n  */\n  horizontalLine) {\n    this.visibleColumn = visibleColumn;\n    this.className = className;\n    this.horizontalLine = horizontalLine;\n  }\n\n}\n/**\n * @internal\n */\n\nexport class IndentGuideHorizontalLine {\n  constructor(top, endColumn) {\n    this.top = top;\n    this.endColumn = endColumn;\n  }\n\n}\n/**\n * @internal\n */\n\nexport class ValidAnnotatedEditOperation {\n  constructor(identifier, range, text, forceMoveMarkers, isAutoWhitespaceEdit, _isTracked) {\n    this.identifier = identifier;\n    this.range = range;\n    this.text = text;\n    this.forceMoveMarkers = forceMoveMarkers;\n    this.isAutoWhitespaceEdit = isAutoWhitespaceEdit;\n    this._isTracked = _isTracked;\n  }\n\n}\n/**\n * @internal\n */\n\nexport class ApplyEditsResult {\n  constructor(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {\n    this.reverseEdits = reverseEdits;\n    this.changes = changes;\n    this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;\n  }\n\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/editor/common/model.js"],"names":["equals","OverviewRulerLane","MinimapPosition","TextModelResolvedOptions","constructor","src","_textModelResolvedOptionsBrand","undefined","tabSize","Math","max","indentSize","insertSpaces","Boolean","defaultEOL","trimAutoWhitespace","bracketPairColorizationOptions","other","createChangeEvent","newOpts","FindMatch","range","matches","_findMatchBrand","HorizontalGuidesState","IndentGuide","visibleColumn","className","horizontalLine","IndentGuideHorizontalLine","top","endColumn","ValidAnnotatedEditOperation","identifier","text","forceMoveMarkers","isAutoWhitespaceEdit","_isTracked","ApplyEditsResult","reverseEdits","changes","trimAutoWhitespaceLineNumbers"],"mappings":"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","sourcesContent":["import { equals } from '../../base/common/objects.js';\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\nexport class TextModelResolvedOptions {\n    /**\n     * @internal\n     */\n    constructor(src) {\n        this._textModelResolvedOptionsBrand = undefined;\n        this.tabSize = Math.max(1, src.tabSize | 0);\n        this.indentSize = src.tabSize | 0;\n        this.insertSpaces = Boolean(src.insertSpaces);\n        this.defaultEOL = src.defaultEOL | 0;\n        this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n        this.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n    }\n    /**\n     * @internal\n     */\n    equals(other) {\n        return (this.tabSize === other.tabSize\n            && this.indentSize === other.indentSize\n            && this.insertSpaces === other.insertSpaces\n            && this.defaultEOL === other.defaultEOL\n            && this.trimAutoWhitespace === other.trimAutoWhitespace\n            && equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions));\n    }\n    /**\n     * @internal\n     */\n    createChangeEvent(newOpts) {\n        return {\n            tabSize: this.tabSize !== newOpts.tabSize,\n            indentSize: this.indentSize !== newOpts.indentSize,\n            insertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n            trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n        };\n    }\n}\nexport class FindMatch {\n    /**\n     * @internal\n     */\n    constructor(range, matches) {\n        this._findMatchBrand = undefined;\n        this.range = range;\n        this.matches = matches;\n    }\n}\n/**\n * @internal\n */\nexport var HorizontalGuidesState;\n(function (HorizontalGuidesState) {\n    HorizontalGuidesState[HorizontalGuidesState[\"Disabled\"] = 0] = \"Disabled\";\n    HorizontalGuidesState[HorizontalGuidesState[\"EnabledForActive\"] = 1] = \"EnabledForActive\";\n    HorizontalGuidesState[HorizontalGuidesState[\"Enabled\"] = 2] = \"Enabled\";\n})(HorizontalGuidesState || (HorizontalGuidesState = {}));\n/**\n * @internal\n */\nexport class IndentGuide {\n    constructor(visibleColumn, className, \n    /**\n     * If set, this indent guide is a horizontal guide (no vertical part).\n     * It starts at visibleColumn and continues until endColumn.\n    */\n    horizontalLine) {\n        this.visibleColumn = visibleColumn;\n        this.className = className;\n        this.horizontalLine = horizontalLine;\n    }\n}\n/**\n * @internal\n */\nexport class IndentGuideHorizontalLine {\n    constructor(top, endColumn) {\n        this.top = top;\n        this.endColumn = endColumn;\n    }\n}\n/**\n * @internal\n */\nexport class ValidAnnotatedEditOperation {\n    constructor(identifier, range, text, forceMoveMarkers, isAutoWhitespaceEdit, _isTracked) {\n        this.identifier = identifier;\n        this.range = range;\n        this.text = text;\n        this.forceMoveMarkers = forceMoveMarkers;\n        this.isAutoWhitespaceEdit = isAutoWhitespaceEdit;\n        this._isTracked = _isTracked;\n    }\n}\n/**\n * @internal\n */\nexport class ApplyEditsResult {\n    constructor(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {\n        this.reverseEdits = reverseEdits;\n        this.changes = changes;\n        this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}