{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { createCancelablePromise, disposableTimeout, RunOnceScheduler } from '../../../base/common/async.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\nimport { hash } from '../../../base/common/hash.js';\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../common/config/editorOptions.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { CodeLensProviderRegistry } from '../../common/modes.js';\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\nimport { getCodeLensModel } from './codelens.js';\nimport { ICodeLensCache } from './codeLensCache.js';\nimport { CodeLensHelper, CodeLensWidget } from './codelensWidget.js';\nimport { localize } from '../../../nls.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nlet CodeLensContribution = class CodeLensContribution {\n  constructor(_editor, _commandService, _notificationService, _codeLensCache) {\n    this._editor = _editor;\n    this._commandService = _commandService;\n    this._notificationService = _notificationService;\n    this._codeLensCache = _codeLensCache;\n    this._disposables = new DisposableStore();\n    this._localToDispose = new DisposableStore();\n    this._lenses = [];\n    this._getCodeLensModelDelays = new LanguageFeatureRequestDelays(CodeLensProviderRegistry, 250, 2500);\n    this._oldCodeLensModels = new DisposableStore();\n    this._resolveCodeLensesDelays = new LanguageFeatureRequestDelays(CodeLensProviderRegistry, 250, 2500);\n    this._resolveCodeLensesScheduler = new RunOnceScheduler(() => this._resolveCodeLensesInViewport(), this._resolveCodeLensesDelays.min);\n\n    this._disposables.add(this._editor.onDidChangeModel(() => this._onModelChange()));\n\n    this._disposables.add(this._editor.onDidChangeModelLanguage(() => this._onModelChange()));\n\n    this._disposables.add(this._editor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(43\n      /* fontInfo */\n      ) || e.hasChanged(16\n      /* codeLensFontSize */\n      ) || e.hasChanged(15\n      /* codeLensFontFamily */\n      )) {\n        this._updateLensStyle();\n      }\n\n      if (e.hasChanged(14\n      /* codeLens */\n      )) {\n        this._onModelChange();\n      }\n    }));\n\n    this._disposables.add(CodeLensProviderRegistry.onDidChange(this._onModelChange, this));\n\n    this._onModelChange();\n\n    this._styleClassName = '_' + hash(this._editor.getId()).toString(16);\n    this._styleElement = dom.createStyleSheet(dom.isInShadowDOM(this._editor.getContainerDomNode()) ? this._editor.getContainerDomNode() : undefined);\n\n    this._updateLensStyle();\n  }\n\n  dispose() {\n    var _a;\n\n    this._localDispose();\n\n    this._disposables.dispose();\n\n    this._oldCodeLensModels.dispose();\n\n    (_a = this._currentCodeLensModel) === null || _a === void 0 ? void 0 : _a.dispose();\n\n    this._styleElement.remove();\n  }\n\n  _getLayoutInfo() {\n    let fontSize = this._editor.getOption(16\n    /* codeLensFontSize */\n    );\n\n    let codeLensHeight;\n\n    if (!fontSize || fontSize < 5) {\n      fontSize = this._editor.getOption(45\n      /* fontSize */\n      ) * .9 | 0;\n      codeLensHeight = this._editor.getOption(58\n      /* lineHeight */\n      );\n    } else {\n      codeLensHeight = fontSize * Math.max(1.3, this._editor.getOption(58\n      /* lineHeight */\n      ) / this._editor.getOption(45\n      /* fontSize */\n      )) | 0;\n    }\n\n    return {\n      codeLensHeight,\n      fontSize\n    };\n  }\n\n  _updateLensStyle() {\n    const {\n      codeLensHeight,\n      fontSize\n    } = this._getLayoutInfo();\n\n    const fontFamily = this._editor.getOption(15\n    /* codeLensFontFamily */\n    );\n\n    const editorFontInfo = this._editor.getOption(43\n    /* fontInfo */\n    );\n\n    const fontFamilyVar = `--codelens-font-family${this._styleClassName}`;\n    const fontFeaturesVar = `--codelens-font-features${this._styleClassName}`;\n    let newStyle = `\n\t\t.monaco-editor .codelens-decoration.${this._styleClassName} { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; padding-right: ${Math.round(fontSize * 0.5)}px; font-feature-settings: var(${fontFeaturesVar}) }\n\t\t.monaco-editor .codelens-decoration.${this._styleClassName} span.codicon { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; }\n\t\t`;\n\n    if (fontFamily) {\n      newStyle += `.monaco-editor .codelens-decoration.${this._styleClassName} { font-family: var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}}`;\n    }\n\n    this._styleElement.textContent = newStyle;\n\n    this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily !== null && fontFamily !== void 0 ? fontFamily : 'inherit');\n\n    this._editor.getContainerDomNode().style.setProperty(fontFeaturesVar, editorFontInfo.fontFeatureSettings); //\n\n\n    this._editor.changeViewZones(accessor => {\n      for (let lens of this._lenses) {\n        lens.updateHeight(codeLensHeight, accessor);\n      }\n    });\n  }\n\n  _localDispose() {\n    var _a, _b, _c;\n\n    (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\n    this._getCodeLensModelPromise = undefined;\n    (_b = this._resolveCodeLensesPromise) === null || _b === void 0 ? void 0 : _b.cancel();\n    this._resolveCodeLensesPromise = undefined;\n\n    this._localToDispose.clear();\n\n    this._oldCodeLensModels.clear();\n\n    (_c = this._currentCodeLensModel) === null || _c === void 0 ? void 0 : _c.dispose();\n  }\n\n  _onModelChange() {\n    this._localDispose();\n\n    const model = this._editor.getModel();\n\n    if (!model) {\n      return;\n    }\n\n    if (!this._editor.getOption(14\n    /* codeLens */\n    )) {\n      return;\n    }\n\n    const cachedLenses = this._codeLensCache.get(model);\n\n    if (cachedLenses) {\n      this._renderCodeLensSymbols(cachedLenses);\n    }\n\n    if (!CodeLensProviderRegistry.has(model)) {\n      // no provider -> return but check with\n      // cached lenses. they expire after 30 seconds\n      if (cachedLenses) {\n        this._localToDispose.add(disposableTimeout(() => {\n          const cachedLensesNow = this._codeLensCache.get(model);\n\n          if (cachedLenses === cachedLensesNow) {\n            this._codeLensCache.delete(model);\n\n            this._onModelChange();\n          }\n        }, 30 * 1000));\n      }\n\n      return;\n    }\n\n    for (const provider of CodeLensProviderRegistry.all(model)) {\n      if (typeof provider.onDidChange === 'function') {\n        let registration = provider.onDidChange(() => scheduler.schedule());\n\n        this._localToDispose.add(registration);\n      }\n    }\n\n    const scheduler = new RunOnceScheduler(() => {\n      var _a;\n\n      const t1 = Date.now();\n      (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\n      this._getCodeLensModelPromise = createCancelablePromise(token => getCodeLensModel(model, token));\n\n      this._getCodeLensModelPromise.then(result => {\n        if (this._currentCodeLensModel) {\n          this._oldCodeLensModels.add(this._currentCodeLensModel);\n        }\n\n        this._currentCodeLensModel = result; // cache model to reduce flicker\n\n        this._codeLensCache.put(model, result); // update moving average\n\n\n        const newDelay = this._getCodeLensModelDelays.update(model, Date.now() - t1);\n\n        scheduler.delay = newDelay; // render lenses\n\n        this._renderCodeLensSymbols(result); // dom.scheduleAtNextAnimationFrame(() => this._resolveCodeLensesInViewport());\n\n\n        this._resolveCodeLensesInViewportSoon();\n      }, onUnexpectedError);\n    }, this._getCodeLensModelDelays.get(model));\n\n    this._localToDispose.add(scheduler);\n\n    this._localToDispose.add(toDisposable(() => this._resolveCodeLensesScheduler.cancel()));\n\n    this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\n      this._editor.changeDecorations(decorationsAccessor => {\n        this._editor.changeViewZones(viewZonesAccessor => {\n          let toDispose = [];\n          let lastLensLineNumber = -1;\n\n          this._lenses.forEach(lens => {\n            if (!lens.isValid() || lastLensLineNumber === lens.getLineNumber()) {\n              // invalid -> lens collapsed, attach range doesn't exist anymore\n              // line_number -> lenses should never be on the same line\n              toDispose.push(lens);\n            } else {\n              lens.update(viewZonesAccessor);\n              lastLensLineNumber = lens.getLineNumber();\n            }\n          });\n\n          let helper = new CodeLensHelper();\n          toDispose.forEach(l => {\n            l.dispose(helper, viewZonesAccessor);\n\n            this._lenses.splice(this._lenses.indexOf(l), 1);\n          });\n          helper.commit(decorationsAccessor);\n        });\n      }); // Ask for all references again\n\n\n      scheduler.schedule();\n    }));\n\n    this._localToDispose.add(this._editor.onDidFocusEditorWidget(() => {\n      scheduler.schedule();\n    }));\n\n    this._localToDispose.add(this._editor.onDidScrollChange(e => {\n      if (e.scrollTopChanged && this._lenses.length > 0) {\n        this._resolveCodeLensesInViewportSoon();\n      }\n    }));\n\n    this._localToDispose.add(this._editor.onDidLayoutChange(() => {\n      this._resolveCodeLensesInViewportSoon();\n    }));\n\n    this._localToDispose.add(toDisposable(() => {\n      if (this._editor.getModel()) {\n        const scrollState = StableEditorScrollState.capture(this._editor);\n\n        this._editor.changeDecorations(decorationsAccessor => {\n          this._editor.changeViewZones(viewZonesAccessor => {\n            this._disposeAllLenses(decorationsAccessor, viewZonesAccessor);\n          });\n        });\n\n        scrollState.restore(this._editor);\n      } else {\n        // No accessors available\n        this._disposeAllLenses(undefined, undefined);\n      }\n    }));\n\n    this._localToDispose.add(this._editor.onMouseDown(e => {\n      if (e.target.type !== 9\n      /* CONTENT_WIDGET */\n      ) {\n        return;\n      }\n\n      let target = e.target.element;\n\n      if ((target === null || target === void 0 ? void 0 : target.tagName) === 'SPAN') {\n        target = target.parentElement;\n      }\n\n      if ((target === null || target === void 0 ? void 0 : target.tagName) === 'A') {\n        for (const lens of this._lenses) {\n          let command = lens.getCommand(target);\n\n          if (command) {\n            this._commandService.executeCommand(command.id, ...(command.arguments || [])).catch(err => this._notificationService.error(err));\n\n            break;\n          }\n        }\n      }\n    }));\n\n    scheduler.schedule();\n  }\n\n  _disposeAllLenses(decChangeAccessor, viewZoneChangeAccessor) {\n    const helper = new CodeLensHelper();\n\n    for (const lens of this._lenses) {\n      lens.dispose(helper, viewZoneChangeAccessor);\n    }\n\n    if (decChangeAccessor) {\n      helper.commit(decChangeAccessor);\n    }\n\n    this._lenses.length = 0;\n  }\n\n  _renderCodeLensSymbols(symbols) {\n    if (!this._editor.hasModel()) {\n      return;\n    }\n\n    let maxLineNumber = this._editor.getModel().getLineCount();\n\n    let groups = [];\n    let lastGroup;\n\n    for (let symbol of symbols.lenses) {\n      let line = symbol.symbol.range.startLineNumber;\n\n      if (line < 1 || line > maxLineNumber) {\n        // invalid code lens\n        continue;\n      } else if (lastGroup && lastGroup[lastGroup.length - 1].symbol.range.startLineNumber === line) {\n        // on same line as previous\n        lastGroup.push(symbol);\n      } else {\n        // on later line as previous\n        lastGroup = [symbol];\n        groups.push(lastGroup);\n      }\n    }\n\n    const scrollState = StableEditorScrollState.capture(this._editor);\n\n    const layoutInfo = this._getLayoutInfo();\n\n    this._editor.changeDecorations(decorationsAccessor => {\n      this._editor.changeViewZones(viewZoneAccessor => {\n        const helper = new CodeLensHelper();\n        let codeLensIndex = 0;\n        let groupsIndex = 0;\n\n        while (groupsIndex < groups.length && codeLensIndex < this._lenses.length) {\n          let symbolsLineNumber = groups[groupsIndex][0].symbol.range.startLineNumber;\n\n          let codeLensLineNumber = this._lenses[codeLensIndex].getLineNumber();\n\n          if (codeLensLineNumber < symbolsLineNumber) {\n            this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\n\n            this._lenses.splice(codeLensIndex, 1);\n          } else if (codeLensLineNumber === symbolsLineNumber) {\n            this._lenses[codeLensIndex].updateCodeLensSymbols(groups[groupsIndex], helper);\n\n            groupsIndex++;\n            codeLensIndex++;\n          } else {\n            this._lenses.splice(codeLensIndex, 0, new CodeLensWidget(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\n\n            codeLensIndex++;\n            groupsIndex++;\n          }\n        } // Delete extra code lenses\n\n\n        while (codeLensIndex < this._lenses.length) {\n          this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\n\n          this._lenses.splice(codeLensIndex, 1);\n        } // Create extra symbols\n\n\n        while (groupsIndex < groups.length) {\n          this._lenses.push(new CodeLensWidget(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\n\n          groupsIndex++;\n        }\n\n        helper.commit(decorationsAccessor);\n      });\n    });\n\n    scrollState.restore(this._editor);\n  }\n\n  _resolveCodeLensesInViewportSoon() {\n    const model = this._editor.getModel();\n\n    if (model) {\n      this._resolveCodeLensesScheduler.schedule();\n    }\n  }\n\n  _resolveCodeLensesInViewport() {\n    var _a;\n\n    (_a = this._resolveCodeLensesPromise) === null || _a === void 0 ? void 0 : _a.cancel();\n    this._resolveCodeLensesPromise = undefined;\n\n    const model = this._editor.getModel();\n\n    if (!model) {\n      return;\n    }\n\n    const toResolve = [];\n    const lenses = [];\n\n    this._lenses.forEach(lens => {\n      const request = lens.computeIfNecessary(model);\n\n      if (request) {\n        toResolve.push(request);\n        lenses.push(lens);\n      }\n    });\n\n    if (toResolve.length === 0) {\n      return;\n    }\n\n    const t1 = Date.now();\n    const resolvePromise = createCancelablePromise(token => {\n      const promises = toResolve.map((request, i) => {\n        const resolvedSymbols = new Array(request.length);\n        const promises = request.map((request, i) => {\n          if (!request.symbol.command && typeof request.provider.resolveCodeLens === 'function') {\n            return Promise.resolve(request.provider.resolveCodeLens(model, request.symbol, token)).then(symbol => {\n              resolvedSymbols[i] = symbol;\n            }, onUnexpectedExternalError);\n          } else {\n            resolvedSymbols[i] = request.symbol;\n            return Promise.resolve(undefined);\n          }\n        });\n        return Promise.all(promises).then(() => {\n          if (!token.isCancellationRequested && !lenses[i].isDisposed()) {\n            lenses[i].updateCommands(resolvedSymbols);\n          }\n        });\n      });\n      return Promise.all(promises);\n    });\n    this._resolveCodeLensesPromise = resolvePromise;\n\n    this._resolveCodeLensesPromise.then(() => {\n      // update moving average\n      const newDelay = this._resolveCodeLensesDelays.update(model, Date.now() - t1);\n\n      this._resolveCodeLensesScheduler.delay = newDelay;\n\n      if (this._currentCodeLensModel) {\n        // update the cached state with new resolved items\n        this._codeLensCache.put(model, this._currentCodeLensModel);\n      }\n\n      this._oldCodeLensModels.clear(); // dispose old models once we have updated the UI with the current model\n\n\n      if (resolvePromise === this._resolveCodeLensesPromise) {\n        this._resolveCodeLensesPromise = undefined;\n      }\n    }, err => {\n      onUnexpectedError(err); // can also be cancellation!\n\n      if (resolvePromise === this._resolveCodeLensesPromise) {\n        this._resolveCodeLensesPromise = undefined;\n      }\n    });\n  }\n\n  getLenses() {\n    return this._lenses;\n  }\n\n};\nCodeLensContribution.ID = 'css.editor.codeLens';\nCodeLensContribution = __decorate([__param(1, ICommandService), __param(2, INotificationService), __param(3, ICodeLensCache)], CodeLensContribution);\nexport { CodeLensContribution };\nregisterEditorContribution(CodeLensContribution.ID, CodeLensContribution);\nregisterEditorAction(class ShowLensesInCurrentLine extends EditorAction {\n  constructor() {\n    super({\n      id: 'codelens.showLensesInCurrentLine',\n      precondition: EditorContextKeys.hasCodeLensProvider,\n      label: localize('showLensOnLine', \"Show CodeLens Commands For Current Line\"),\n      alias: 'Show CodeLens Commands For Current Line'\n    });\n  }\n\n  run(accessor, editor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!editor.hasModel()) {\n        return;\n      }\n\n      const quickInputService = accessor.get(IQuickInputService);\n      const commandService = accessor.get(ICommandService);\n      const notificationService = accessor.get(INotificationService);\n      const lineNumber = editor.getSelection().positionLineNumber;\n      const codelensController = editor.getContribution(CodeLensContribution.ID);\n      const items = [];\n\n      for (let lens of codelensController.getLenses()) {\n        if (lens.getLineNumber() === lineNumber) {\n          for (let item of lens.getItems()) {\n            const {\n              command\n            } = item.symbol;\n\n            if (command) {\n              items.push({\n                label: command.title,\n                command: command\n              });\n            }\n          }\n        }\n      }\n\n      if (items.length === 0) {\n        // We dont want an empty picker\n        return;\n      }\n\n      const item = yield quickInputService.pick(items, {\n        canPickMany: false\n      });\n\n      if (!item) {\n        // Nothing picked\n        return;\n      }\n\n      try {\n        yield commandService.executeCommand(item.command.id, ...(item.command.arguments || []));\n      } catch (err) {\n        notificationService.error(err);\n      }\n    });\n  }\n\n});","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/editor/contrib/codelens/codelensController.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","dom","createCancelablePromise","disposableTimeout","RunOnceScheduler","onUnexpectedError","onUnexpectedExternalError","hash","DisposableStore","toDisposable","StableEditorScrollState","EditorAction","registerEditorAction","registerEditorContribution","EDITOR_FONT_DEFAULTS","EditorContextKeys","CodeLensProviderRegistry","LanguageFeatureRequestDelays","getCodeLensModel","ICodeLensCache","CodeLensHelper","CodeLensWidget","localize","ICommandService","INotificationService","IQuickInputService","CodeLensContribution","constructor","_editor","_commandService","_notificationService","_codeLensCache","_disposables","_localToDispose","_lenses","_getCodeLensModelDelays","_oldCodeLensModels","_resolveCodeLensesDelays","_resolveCodeLensesScheduler","_resolveCodeLensesInViewport","min","add","onDidChangeModel","_onModelChange","onDidChangeModelLanguage","onDidChangeConfiguration","hasChanged","_updateLensStyle","onDidChange","_styleClassName","getId","toString","_styleElement","createStyleSheet","isInShadowDOM","getContainerDomNode","undefined","dispose","_a","_localDispose","_currentCodeLensModel","remove","_getLayoutInfo","fontSize","getOption","codeLensHeight","Math","max","fontFamily","editorFontInfo","fontFamilyVar","fontFeaturesVar","newStyle","round","textContent","style","setProperty","fontFeatureSettings","changeViewZones","accessor","lens","updateHeight","_b","_c","_getCodeLensModelPromise","cancel","_resolveCodeLensesPromise","clear","model","getModel","cachedLenses","get","_renderCodeLensSymbols","has","cachedLensesNow","delete","provider","all","registration","scheduler","schedule","t1","Date","now","token","put","newDelay","update","delay","_resolveCodeLensesInViewportSoon","onDidChangeModelContent","changeDecorations","decorationsAccessor","viewZonesAccessor","toDispose","lastLensLineNumber","forEach","isValid","getLineNumber","push","helper","l","splice","indexOf","commit","onDidFocusEditorWidget","onDidScrollChange","scrollTopChanged","onDidLayoutChange","scrollState","capture","_disposeAllLenses","restore","onMouseDown","type","element","tagName","parentElement","command","getCommand","executeCommand","id","catch","err","error","decChangeAccessor","viewZoneChangeAccessor","symbols","hasModel","maxLineNumber","getLineCount","groups","lastGroup","symbol","lenses","line","range","startLineNumber","layoutInfo","viewZoneAccessor","codeLensIndex","groupsIndex","symbolsLineNumber","codeLensLineNumber","updateCodeLensSymbols","toResolve","request","computeIfNecessary","resolvePromise","promises","map","resolvedSymbols","Array","resolveCodeLens","isCancellationRequested","isDisposed","updateCommands","getLenses","ID","ShowLensesInCurrentLine","precondition","hasCodeLensProvider","label","alias","run","editor","quickInputService","commandService","notificationService","lineNumber","getSelection","positionLineNumber","codelensController","getContribution","items","item","getItems","title","pick","canPickMany"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { createCancelablePromise, disposableTimeout, RunOnceScheduler } from '../../../base/common/async.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\nimport { hash } from '../../../base/common/hash.js';\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../common/config/editorOptions.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { CodeLensProviderRegistry } from '../../common/modes.js';\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\nimport { getCodeLensModel } from './codelens.js';\nimport { ICodeLensCache } from './codeLensCache.js';\nimport { CodeLensHelper, CodeLensWidget } from './codelensWidget.js';\nimport { localize } from '../../../nls.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nlet CodeLensContribution = class CodeLensContribution {\n    constructor(_editor, _commandService, _notificationService, _codeLensCache) {\n        this._editor = _editor;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._codeLensCache = _codeLensCache;\n        this._disposables = new DisposableStore();\n        this._localToDispose = new DisposableStore();\n        this._lenses = [];\n        this._getCodeLensModelDelays = new LanguageFeatureRequestDelays(CodeLensProviderRegistry, 250, 2500);\n        this._oldCodeLensModels = new DisposableStore();\n        this._resolveCodeLensesDelays = new LanguageFeatureRequestDelays(CodeLensProviderRegistry, 250, 2500);\n        this._resolveCodeLensesScheduler = new RunOnceScheduler(() => this._resolveCodeLensesInViewport(), this._resolveCodeLensesDelays.min);\n        this._disposables.add(this._editor.onDidChangeModel(() => this._onModelChange()));\n        this._disposables.add(this._editor.onDidChangeModelLanguage(() => this._onModelChange()));\n        this._disposables.add(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(43 /* fontInfo */) || e.hasChanged(16 /* codeLensFontSize */) || e.hasChanged(15 /* codeLensFontFamily */)) {\n                this._updateLensStyle();\n            }\n            if (e.hasChanged(14 /* codeLens */)) {\n                this._onModelChange();\n            }\n        }));\n        this._disposables.add(CodeLensProviderRegistry.onDidChange(this._onModelChange, this));\n        this._onModelChange();\n        this._styleClassName = '_' + hash(this._editor.getId()).toString(16);\n        this._styleElement = dom.createStyleSheet(dom.isInShadowDOM(this._editor.getContainerDomNode())\n            ? this._editor.getContainerDomNode()\n            : undefined);\n        this._updateLensStyle();\n    }\n    dispose() {\n        var _a;\n        this._localDispose();\n        this._disposables.dispose();\n        this._oldCodeLensModels.dispose();\n        (_a = this._currentCodeLensModel) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._styleElement.remove();\n    }\n    _getLayoutInfo() {\n        let fontSize = this._editor.getOption(16 /* codeLensFontSize */);\n        let codeLensHeight;\n        if (!fontSize || fontSize < 5) {\n            fontSize = (this._editor.getOption(45 /* fontSize */) * .9) | 0;\n            codeLensHeight = this._editor.getOption(58 /* lineHeight */);\n        }\n        else {\n            codeLensHeight = (fontSize * Math.max(1.3, this._editor.getOption(58 /* lineHeight */) / this._editor.getOption(45 /* fontSize */))) | 0;\n        }\n        return { codeLensHeight, fontSize };\n    }\n    _updateLensStyle() {\n        const { codeLensHeight, fontSize } = this._getLayoutInfo();\n        const fontFamily = this._editor.getOption(15 /* codeLensFontFamily */);\n        const editorFontInfo = this._editor.getOption(43 /* fontInfo */);\n        const fontFamilyVar = `--codelens-font-family${this._styleClassName}`;\n        const fontFeaturesVar = `--codelens-font-features${this._styleClassName}`;\n        let newStyle = `\n\t\t.monaco-editor .codelens-decoration.${this._styleClassName} { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; padding-right: ${Math.round(fontSize * 0.5)}px; font-feature-settings: var(${fontFeaturesVar}) }\n\t\t.monaco-editor .codelens-decoration.${this._styleClassName} span.codicon { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; }\n\t\t`;\n        if (fontFamily) {\n            newStyle += `.monaco-editor .codelens-decoration.${this._styleClassName} { font-family: var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}}`;\n        }\n        this._styleElement.textContent = newStyle;\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily !== null && fontFamily !== void 0 ? fontFamily : 'inherit');\n        this._editor.getContainerDomNode().style.setProperty(fontFeaturesVar, editorFontInfo.fontFeatureSettings);\n        //\n        this._editor.changeViewZones(accessor => {\n            for (let lens of this._lenses) {\n                lens.updateHeight(codeLensHeight, accessor);\n            }\n        });\n    }\n    _localDispose() {\n        var _a, _b, _c;\n        (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\n        this._getCodeLensModelPromise = undefined;\n        (_b = this._resolveCodeLensesPromise) === null || _b === void 0 ? void 0 : _b.cancel();\n        this._resolveCodeLensesPromise = undefined;\n        this._localToDispose.clear();\n        this._oldCodeLensModels.clear();\n        (_c = this._currentCodeLensModel) === null || _c === void 0 ? void 0 : _c.dispose();\n    }\n    _onModelChange() {\n        this._localDispose();\n        const model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (!this._editor.getOption(14 /* codeLens */)) {\n            return;\n        }\n        const cachedLenses = this._codeLensCache.get(model);\n        if (cachedLenses) {\n            this._renderCodeLensSymbols(cachedLenses);\n        }\n        if (!CodeLensProviderRegistry.has(model)) {\n            // no provider -> return but check with\n            // cached lenses. they expire after 30 seconds\n            if (cachedLenses) {\n                this._localToDispose.add(disposableTimeout(() => {\n                    const cachedLensesNow = this._codeLensCache.get(model);\n                    if (cachedLenses === cachedLensesNow) {\n                        this._codeLensCache.delete(model);\n                        this._onModelChange();\n                    }\n                }, 30 * 1000));\n            }\n            return;\n        }\n        for (const provider of CodeLensProviderRegistry.all(model)) {\n            if (typeof provider.onDidChange === 'function') {\n                let registration = provider.onDidChange(() => scheduler.schedule());\n                this._localToDispose.add(registration);\n            }\n        }\n        const scheduler = new RunOnceScheduler(() => {\n            var _a;\n            const t1 = Date.now();\n            (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\n            this._getCodeLensModelPromise = createCancelablePromise(token => getCodeLensModel(model, token));\n            this._getCodeLensModelPromise.then(result => {\n                if (this._currentCodeLensModel) {\n                    this._oldCodeLensModels.add(this._currentCodeLensModel);\n                }\n                this._currentCodeLensModel = result;\n                // cache model to reduce flicker\n                this._codeLensCache.put(model, result);\n                // update moving average\n                const newDelay = this._getCodeLensModelDelays.update(model, Date.now() - t1);\n                scheduler.delay = newDelay;\n                // render lenses\n                this._renderCodeLensSymbols(result);\n                // dom.scheduleAtNextAnimationFrame(() => this._resolveCodeLensesInViewport());\n                this._resolveCodeLensesInViewportSoon();\n            }, onUnexpectedError);\n        }, this._getCodeLensModelDelays.get(model));\n        this._localToDispose.add(scheduler);\n        this._localToDispose.add(toDisposable(() => this._resolveCodeLensesScheduler.cancel()));\n        this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\n            this._editor.changeDecorations(decorationsAccessor => {\n                this._editor.changeViewZones(viewZonesAccessor => {\n                    let toDispose = [];\n                    let lastLensLineNumber = -1;\n                    this._lenses.forEach((lens) => {\n                        if (!lens.isValid() || lastLensLineNumber === lens.getLineNumber()) {\n                            // invalid -> lens collapsed, attach range doesn't exist anymore\n                            // line_number -> lenses should never be on the same line\n                            toDispose.push(lens);\n                        }\n                        else {\n                            lens.update(viewZonesAccessor);\n                            lastLensLineNumber = lens.getLineNumber();\n                        }\n                    });\n                    let helper = new CodeLensHelper();\n                    toDispose.forEach((l) => {\n                        l.dispose(helper, viewZonesAccessor);\n                        this._lenses.splice(this._lenses.indexOf(l), 1);\n                    });\n                    helper.commit(decorationsAccessor);\n                });\n            });\n            // Ask for all references again\n            scheduler.schedule();\n        }));\n        this._localToDispose.add(this._editor.onDidFocusEditorWidget(() => {\n            scheduler.schedule();\n        }));\n        this._localToDispose.add(this._editor.onDidScrollChange(e => {\n            if (e.scrollTopChanged && this._lenses.length > 0) {\n                this._resolveCodeLensesInViewportSoon();\n            }\n        }));\n        this._localToDispose.add(this._editor.onDidLayoutChange(() => {\n            this._resolveCodeLensesInViewportSoon();\n        }));\n        this._localToDispose.add(toDisposable(() => {\n            if (this._editor.getModel()) {\n                const scrollState = StableEditorScrollState.capture(this._editor);\n                this._editor.changeDecorations(decorationsAccessor => {\n                    this._editor.changeViewZones(viewZonesAccessor => {\n                        this._disposeAllLenses(decorationsAccessor, viewZonesAccessor);\n                    });\n                });\n                scrollState.restore(this._editor);\n            }\n            else {\n                // No accessors available\n                this._disposeAllLenses(undefined, undefined);\n            }\n        }));\n        this._localToDispose.add(this._editor.onMouseDown(e => {\n            if (e.target.type !== 9 /* CONTENT_WIDGET */) {\n                return;\n            }\n            let target = e.target.element;\n            if ((target === null || target === void 0 ? void 0 : target.tagName) === 'SPAN') {\n                target = target.parentElement;\n            }\n            if ((target === null || target === void 0 ? void 0 : target.tagName) === 'A') {\n                for (const lens of this._lenses) {\n                    let command = lens.getCommand(target);\n                    if (command) {\n                        this._commandService.executeCommand(command.id, ...(command.arguments || [])).catch(err => this._notificationService.error(err));\n                        break;\n                    }\n                }\n            }\n        }));\n        scheduler.schedule();\n    }\n    _disposeAllLenses(decChangeAccessor, viewZoneChangeAccessor) {\n        const helper = new CodeLensHelper();\n        for (const lens of this._lenses) {\n            lens.dispose(helper, viewZoneChangeAccessor);\n        }\n        if (decChangeAccessor) {\n            helper.commit(decChangeAccessor);\n        }\n        this._lenses.length = 0;\n    }\n    _renderCodeLensSymbols(symbols) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        let maxLineNumber = this._editor.getModel().getLineCount();\n        let groups = [];\n        let lastGroup;\n        for (let symbol of symbols.lenses) {\n            let line = symbol.symbol.range.startLineNumber;\n            if (line < 1 || line > maxLineNumber) {\n                // invalid code lens\n                continue;\n            }\n            else if (lastGroup && lastGroup[lastGroup.length - 1].symbol.range.startLineNumber === line) {\n                // on same line as previous\n                lastGroup.push(symbol);\n            }\n            else {\n                // on later line as previous\n                lastGroup = [symbol];\n                groups.push(lastGroup);\n            }\n        }\n        const scrollState = StableEditorScrollState.capture(this._editor);\n        const layoutInfo = this._getLayoutInfo();\n        this._editor.changeDecorations(decorationsAccessor => {\n            this._editor.changeViewZones(viewZoneAccessor => {\n                const helper = new CodeLensHelper();\n                let codeLensIndex = 0;\n                let groupsIndex = 0;\n                while (groupsIndex < groups.length && codeLensIndex < this._lenses.length) {\n                    let symbolsLineNumber = groups[groupsIndex][0].symbol.range.startLineNumber;\n                    let codeLensLineNumber = this._lenses[codeLensIndex].getLineNumber();\n                    if (codeLensLineNumber < symbolsLineNumber) {\n                        this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\n                        this._lenses.splice(codeLensIndex, 1);\n                    }\n                    else if (codeLensLineNumber === symbolsLineNumber) {\n                        this._lenses[codeLensIndex].updateCodeLensSymbols(groups[groupsIndex], helper);\n                        groupsIndex++;\n                        codeLensIndex++;\n                    }\n                    else {\n                        this._lenses.splice(codeLensIndex, 0, new CodeLensWidget(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\n                        codeLensIndex++;\n                        groupsIndex++;\n                    }\n                }\n                // Delete extra code lenses\n                while (codeLensIndex < this._lenses.length) {\n                    this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\n                    this._lenses.splice(codeLensIndex, 1);\n                }\n                // Create extra symbols\n                while (groupsIndex < groups.length) {\n                    this._lenses.push(new CodeLensWidget(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\n                    groupsIndex++;\n                }\n                helper.commit(decorationsAccessor);\n            });\n        });\n        scrollState.restore(this._editor);\n    }\n    _resolveCodeLensesInViewportSoon() {\n        const model = this._editor.getModel();\n        if (model) {\n            this._resolveCodeLensesScheduler.schedule();\n        }\n    }\n    _resolveCodeLensesInViewport() {\n        var _a;\n        (_a = this._resolveCodeLensesPromise) === null || _a === void 0 ? void 0 : _a.cancel();\n        this._resolveCodeLensesPromise = undefined;\n        const model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        const toResolve = [];\n        const lenses = [];\n        this._lenses.forEach((lens) => {\n            const request = lens.computeIfNecessary(model);\n            if (request) {\n                toResolve.push(request);\n                lenses.push(lens);\n            }\n        });\n        if (toResolve.length === 0) {\n            return;\n        }\n        const t1 = Date.now();\n        const resolvePromise = createCancelablePromise(token => {\n            const promises = toResolve.map((request, i) => {\n                const resolvedSymbols = new Array(request.length);\n                const promises = request.map((request, i) => {\n                    if (!request.symbol.command && typeof request.provider.resolveCodeLens === 'function') {\n                        return Promise.resolve(request.provider.resolveCodeLens(model, request.symbol, token)).then(symbol => {\n                            resolvedSymbols[i] = symbol;\n                        }, onUnexpectedExternalError);\n                    }\n                    else {\n                        resolvedSymbols[i] = request.symbol;\n                        return Promise.resolve(undefined);\n                    }\n                });\n                return Promise.all(promises).then(() => {\n                    if (!token.isCancellationRequested && !lenses[i].isDisposed()) {\n                        lenses[i].updateCommands(resolvedSymbols);\n                    }\n                });\n            });\n            return Promise.all(promises);\n        });\n        this._resolveCodeLensesPromise = resolvePromise;\n        this._resolveCodeLensesPromise.then(() => {\n            // update moving average\n            const newDelay = this._resolveCodeLensesDelays.update(model, Date.now() - t1);\n            this._resolveCodeLensesScheduler.delay = newDelay;\n            if (this._currentCodeLensModel) { // update the cached state with new resolved items\n                this._codeLensCache.put(model, this._currentCodeLensModel);\n            }\n            this._oldCodeLensModels.clear(); // dispose old models once we have updated the UI with the current model\n            if (resolvePromise === this._resolveCodeLensesPromise) {\n                this._resolveCodeLensesPromise = undefined;\n            }\n        }, err => {\n            onUnexpectedError(err); // can also be cancellation!\n            if (resolvePromise === this._resolveCodeLensesPromise) {\n                this._resolveCodeLensesPromise = undefined;\n            }\n        });\n    }\n    getLenses() {\n        return this._lenses;\n    }\n};\nCodeLensContribution.ID = 'css.editor.codeLens';\nCodeLensContribution = __decorate([\n    __param(1, ICommandService),\n    __param(2, INotificationService),\n    __param(3, ICodeLensCache)\n], CodeLensContribution);\nexport { CodeLensContribution };\nregisterEditorContribution(CodeLensContribution.ID, CodeLensContribution);\nregisterEditorAction(class ShowLensesInCurrentLine extends EditorAction {\n    constructor() {\n        super({\n            id: 'codelens.showLensesInCurrentLine',\n            precondition: EditorContextKeys.hasCodeLensProvider,\n            label: localize('showLensOnLine', \"Show CodeLens Commands For Current Line\"),\n            alias: 'Show CodeLens Commands For Current Line',\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!editor.hasModel()) {\n                return;\n            }\n            const quickInputService = accessor.get(IQuickInputService);\n            const commandService = accessor.get(ICommandService);\n            const notificationService = accessor.get(INotificationService);\n            const lineNumber = editor.getSelection().positionLineNumber;\n            const codelensController = editor.getContribution(CodeLensContribution.ID);\n            const items = [];\n            for (let lens of codelensController.getLenses()) {\n                if (lens.getLineNumber() === lineNumber) {\n                    for (let item of lens.getItems()) {\n                        const { command } = item.symbol;\n                        if (command) {\n                            items.push({\n                                label: command.title,\n                                command: command\n                            });\n                        }\n                    }\n                }\n            }\n            if (items.length === 0) {\n                // We dont want an empty picker\n                return;\n            }\n            const item = yield quickInputService.pick(items, { canPickMany: false });\n            if (!item) {\n                // Nothing picked\n                return;\n            }\n            try {\n                yield commandService.executeCommand(item.command.id, ...(item.command.arguments || []));\n            }\n            catch (err) {\n                notificationService.error(err);\n            }\n        });\n    }\n});\n"]},"metadata":{},"sourceType":"module"}