{"ast":null,"code":"import { parse as t, translateX as e, translateY as i, scaleX as n, scaleY as r, multiply as s } from \"rematrix\";\n\nvar a = function (t) {\n  return \"number\" == typeof t;\n},\n    o = function (t) {\n  return \"function\" == typeof t;\n},\n    l = function (t) {\n  return \"[object Object]\" === Object.prototype.toString.call(t);\n},\n    p = function (t) {\n  return Array.prototype.slice.apply(t);\n},\n    c = function (t) {\n  var e = t.reduce(function (t, e) {\n    return t[e] = (t[e] || 0) + 1, t;\n  }, {});\n  return Object.keys(e).filter(function (t) {\n    return e[t] > 1;\n  });\n};\n\nfunction u(t) {\n  return [].slice.call(arguments, 1).forEach(function (e) {\n    if (e) for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);\n  }), t;\n}\n\nvar d,\n    f = function (t, e, i) {\n  return t + (e - t) * i;\n},\n    h = {\n  __proto__: null,\n  isNumber: a,\n  isFunction: o,\n  isObject: l,\n  toArray: p,\n  getDuplicateValsAsStrings: c,\n  assign: u,\n  tweenProp: f\n},\n    g = {\n  __proto__: null,\n  DATA_FLIP_ID: \"data-flip-id\",\n  DATA_INVERSE_FLIP_ID: \"data-inverse-flip-id\",\n  DATA_FLIP_COMPONENT_ID: \"data-flip-component-id\",\n  DATA_FLIP_CONFIG: \"data-flip-config\",\n  DATA_PORTAL_KEY: \"data-portal-key\",\n  DATA_EXIT_CONTAINER: \"data-exit-container\"\n},\n    m = {\n  noWobble: {\n    stiffness: 200,\n    damping: 26\n  },\n  gentle: {\n    stiffness: 120,\n    damping: 14\n  },\n  veryGentle: {\n    stiffness: 130,\n    damping: 17\n  },\n  wobbly: {\n    stiffness: 180,\n    damping: 12\n  },\n  stiff: {\n    stiffness: 260,\n    damping: 26\n  }\n},\n    v = function (t) {\n  return l(t) ? t : Object.keys(m).indexOf(t) > -1 ? m[t] : {};\n};\n\n\"undefined\" != typeof window && (d = window.requestAnimationFrame);\n\nvar y = d = d || function (t) {\n  window.setTimeout(t, 1e3 / 60);\n},\n    _ = Date.now(),\n    S = \"object\" == typeof performance && \"function\" == typeof performance.now ? function () {\n  return performance.now();\n} : function () {\n  return Date.now() - _;\n};\n\nfunction E(t, e) {\n  var i = t.indexOf(e);\n  -1 !== i && t.splice(i, 1);\n}\n\nvar A = function () {\n  function t() {}\n\n  return t.prototype.run = function () {\n    var t = this;\n    y(function () {\n      t.springSystem.loop(S());\n    });\n  }, t;\n}(),\n    C = function () {\n  this.position = 0, this.velocity = 0;\n},\n    b = 0,\n    I = function () {\n  function t(t) {\n    this._id = \"s\" + b++, this._springSystem = t, this.listeners = [], this._startValue = 0, this._currentState = new C(), this._displacementFromRestThreshold = .001, this._endValue = 0, this._overshootClampingEnabled = !1, this._previousState = new C(), this._restSpeedThreshold = .001, this._tempState = new C(), this._timeAccumulator = 0, this._wasAtRest = !0, this._cachedSpringConfig = {};\n  }\n\n  var e = t.prototype;\n  return e.getId = function () {\n    return this._id;\n  }, e.destroy = function () {\n    this.listeners = [], this._springSystem.deregisterSpring(this);\n  }, e.setSpringConfig = function (t) {\n    return this._springConfig = t, this;\n  }, e.getCurrentValue = function () {\n    return this._currentState.position;\n  }, e.getDisplacementDistanceForState = function (t) {\n    return Math.abs(this._endValue - t.position);\n  }, e.setEndValue = function (t) {\n    if (t === this._endValue) return this;\n    if (this.prevEndValue = t, this._endValue === t && this.isAtRest()) return this;\n    this._startValue = this.getCurrentValue(), this._endValue = t, this._springSystem.activateSpring(this.getId());\n\n    for (var e = 0, i = this.listeners.length; e < i; e++) {\n      var n = this.listeners[e].onSpringEndStateChange;\n      n && n(this);\n    }\n\n    return this;\n  }, e.setVelocity = function (t) {\n    return t === this._currentState.velocity || (this._currentState.velocity = t, this._springSystem.activateSpring(this.getId())), this;\n  }, e.setCurrentValue = function (t) {\n    this._startValue = t, this._currentState.position = t;\n\n    for (var e = 0, i = this.listeners.length; e < i; e++) {\n      var n = this.listeners[e];\n      n.onSpringUpdate && n.onSpringUpdate(this);\n    }\n\n    return this;\n  }, e.setAtRest = function () {\n    return this._endValue = this._currentState.position, this._tempState.position = this._currentState.position, this._currentState.velocity = 0, this;\n  }, e.setOvershootClampingEnabled = function (t) {\n    return this._overshootClampingEnabled = t, this;\n  }, e.isOvershooting = function () {\n    var t = this._startValue,\n        e = this._endValue;\n    return this._springConfig.tension > 0 && (t < e && this.getCurrentValue() > e || t > e && this.getCurrentValue() < e);\n  }, e.advance = function (t, e) {\n    var i = this.isAtRest();\n\n    if (!i || !this._wasAtRest) {\n      var n = e;\n      e > .064 && (n = .064), this._timeAccumulator += n;\n\n      for (var r, s, a, o, l, p, c = this._springConfig.tension, u = this._springConfig.friction, d = this._currentState.position, f = this._currentState.velocity, h = this._tempState.position, g = this._tempState.velocity; this._timeAccumulator >= .001;) this._timeAccumulator -= .001, this._timeAccumulator < .001 && (this._previousState.position = d, this._previousState.velocity = f), s = c * (this._endValue - h) - u * f, o = c * (this._endValue - (h = d + .001 * (r = f) * .5)) - u * (g = f + .001 * s * .5), p = c * (this._endValue - (h = d + .001 * (a = g) * .5)) - u * (g = f + .001 * o * .5), h = d + .001 * (l = g), d += 1 / 6 * (r + 2 * (a + l) + (g = f + .001 * p)) * .001, f += 1 / 6 * (s + 2 * (o + p) + (c * (this._endValue - h) - u * g)) * .001;\n\n      this._tempState.position = h, this._tempState.velocity = g, this._currentState.position = d, this._currentState.velocity = f, this._timeAccumulator > 0 && this._interpolate(this._timeAccumulator / .001), (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) && (this._springConfig.tension > 0 ? (this._startValue = this._endValue, this._currentState.position = this._endValue) : (this._endValue = this._currentState.position, this._startValue = this._endValue), this.setVelocity(0), i = !0);\n      var m = !1;\n      this._wasAtRest && (this._wasAtRest = !1, m = !0);\n      var v = !1;\n      i && (this._wasAtRest = !0, v = !0), this.notifyPositionUpdated(m, v);\n    }\n  }, e.notifyPositionUpdated = function (t, e) {\n    var i = this;\n    this.listeners.filter(Boolean).forEach(function (n) {\n      t && n.onSpringActivate && !i._onActivateCalled && (n.onSpringActivate(i), i._onActivateCalled = !0), n.onSpringUpdate && n.onSpringUpdate(i), e && n.onSpringAtRest && n.onSpringAtRest(i);\n    });\n  }, e.systemShouldAdvance = function () {\n    return !this.isAtRest() || !this.wasAtRest();\n  }, e.wasAtRest = function () {\n    return this._wasAtRest;\n  }, e.isAtRest = function () {\n    return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || 0 === this._springConfig.tension);\n  }, e._interpolate = function (t) {\n    this._currentState.position = this._currentState.position * t + this._previousState.position * (1 - t), this._currentState.velocity = this._currentState.velocity * t + this._previousState.velocity * (1 - t);\n  }, e.addListener = function (t) {\n    return this.listeners.push(t), this;\n  }, e.addOneTimeListener = function (t) {\n    var e = this;\n    return Object.keys(t).forEach(function (i) {\n      var n;\n      t[i] = (n = t[i], function () {\n        n.apply(void 0, [].slice.call(arguments)), e.removeListener(t);\n      });\n    }), this.listeners.push(t), this;\n  }, e.removeListener = function (t) {\n    return E(this.listeners, t), this;\n  }, t;\n}(),\n    O = function () {\n  function t(t) {\n    this.looper = t || new A(), this.looper.springSystem = this, this.listeners = [], this._activeSprings = [], this._idleSpringIndices = [], this._isIdle = !0, this._lastTimeMillis = -1, this._springRegistry = {};\n  }\n\n  var e = t.prototype;\n  return e.createSpring = function (t, e) {\n    return this.createSpringWithConfig({\n      tension: t,\n      friction: e\n    });\n  }, e.createSpringWithConfig = function (t) {\n    var e = new I(this);\n    return this.registerSpring(e), e.setSpringConfig(t), e;\n  }, e.getIsIdle = function () {\n    return this._isIdle;\n  }, e.registerSpring = function (t) {\n    this._springRegistry[t.getId()] = t;\n  }, e.deregisterSpring = function (t) {\n    E(this._activeSprings, t), delete this._springRegistry[t.getId()];\n  }, e.advance = function (t, e) {\n    for (var i = this; this._idleSpringIndices.length > 0;) this._idleSpringIndices.pop();\n\n    for (this._activeSprings.filter(Boolean).forEach(function (n) {\n      n.systemShouldAdvance() ? n.advance(t / 1e3, e / 1e3) : i._idleSpringIndices.push(i._activeSprings.indexOf(n));\n    }); this._idleSpringIndices.length > 0;) {\n      var n = this._idleSpringIndices.pop();\n\n      n >= 0 && this._activeSprings.splice(n, 1);\n    }\n  }, e.loop = function (t) {\n    var e;\n    -1 === this._lastTimeMillis && (this._lastTimeMillis = t - 1);\n    var i = t - this._lastTimeMillis;\n    this._lastTimeMillis = t;\n    var n = 0,\n        r = this.listeners.length;\n\n    for (n = 0; n < r; n++) (e = this.listeners[n]).onBeforeIntegrate && e.onBeforeIntegrate(this);\n\n    for (this.advance(t, i), 0 === this._activeSprings.length && (this._isIdle = !0, this._lastTimeMillis = -1), n = 0; n < r; n++) (e = this.listeners[n]).onAfterIntegrate && e.onAfterIntegrate(this);\n\n    this._isIdle || this.looper.run();\n  }, e.activateSpring = function (t) {\n    var e = this._springRegistry[t];\n    -1 === this._activeSprings.indexOf(e) && this._activeSprings.push(e), this.getIsIdle() && (this._isIdle = !1, this.looper.run());\n  }, t;\n}(),\n    w = new O(),\n    x = function (t) {\n  var e = t.springConfig,\n      i = e.overshootClamping,\n      n = t.getOnUpdateFunc,\n      r = t.onAnimationEnd,\n      s = t.onSpringActivate,\n      a = w.createSpring(e.stiffness, e.damping);\n  a.setOvershootClampingEnabled(!!i);\n  var o = {\n    onSpringActivate: s,\n    onSpringAtRest: function () {\n      a.destroy(), r();\n    },\n    onSpringUpdate: n({\n      spring: a,\n      onAnimationEnd: r\n    })\n  };\n  return a.addListener(o), a;\n},\n    U = function (t) {\n  var e = x(t);\n  return e.setEndValue(1), e;\n},\n    V = function (t, e) {\n  if (void 0 === e && (e = {}), t && t.length) {\n    e.reverse && t.reverse();\n    var i,\n        n = \"number\" != typeof (i = e.speed) ? 1.1 : 1 + Math.min(Math.max(5 * i, 0), 5),\n        r = 1 / Math.max(Math.min(t.length, 100), 10),\n        s = t.map(function (t, e) {\n      var i = t.getOnUpdateFunc;\n      return t.getOnUpdateFunc = function (t) {\n        var a = i(t);\n        return function (t) {\n          var i = t.getCurrentValue();\n          (i = i < .01 ? 0 : i > .99 ? 1 : i) >= r && s[e + 1] && s[e + 1](Math.max(Math.min(i * n, 1), 0)), a(t);\n        };\n      }, t;\n    }).map(function (t) {\n      var e = x(t);\n      if (e) return e.setEndValue.bind(e);\n    }).filter(Boolean);\n    s[0] && s[0](1);\n  }\n},\n    F = function (t) {\n  return [0, 1, 4, 5, 12, 13].map(function (e) {\n    return t[e];\n  });\n},\n    P = function (t) {\n  return t.top < window.innerHeight && t.bottom > 0 && t.left < window.innerWidth && t.right > 0;\n};\n\nfunction R(t) {\n  return JSON.parse(t.dataset.flipConfig || \"{}\");\n}\n\nvar T = function (t, e) {\n  var i;\n  return u(t, ((i = {})[e[0]] = e[1], i));\n},\n    D = function (t, e) {\n  return p(e ? document.querySelectorAll('[data-portal-key=\"' + e + '\"]') : t.querySelectorAll(\"[data-flip-id]\"));\n},\n    M = function (t) {\n  return t.map(function (t) {\n    return [t, t.getBoundingClientRect()];\n  });\n},\n    k = function (l) {\n  var d,\n      h = l.cachedOrderedFlipIds,\n      g = void 0 === h ? [] : h,\n      y = l.inProgressAnimations,\n      _ = void 0 === y ? {} : y,\n      S = l.flippedElementPositionsBeforeUpdate,\n      E = void 0 === S ? {} : S,\n      A = l.flipCallbacks,\n      C = void 0 === A ? {} : A,\n      b = l.containerEl,\n      I = l.applyTransformOrigin,\n      O = l.spring,\n      w = l.debug,\n      x = l.portalKey,\n      k = l.staggerConfig,\n      j = void 0 === k ? {} : k,\n      B = l.decisionData,\n      N = void 0 === B ? {} : B,\n      L = l.handleEnterUpdateDelete,\n      q = l.onComplete,\n      W = l.onStart,\n      K = M(D((d = {\n    element: b,\n    portalKey: x\n  }).element, d.portalKey)).map(function (t) {\n    var e = t[0],\n        i = t[1],\n        n = window.getComputedStyle(e);\n    return [e.dataset.flipId, {\n      element: e,\n      rect: i,\n      opacity: parseFloat(n.opacity),\n      transform: n.transform\n    }];\n  }).reduce(T, {}),\n      X = function (t) {\n    var e = t.containerEl,\n        i = t.portalKey;\n    return i ? function (t) {\n      return function (e) {\n        return p(document.querySelectorAll('[data-portal-key=\"' + t + '\"]' + e));\n      };\n    }(i) : e ? function (t) {\n      var e = Math.random().toFixed(5);\n      return t.dataset.flipperId = e, function (i) {\n        return p(t.querySelectorAll('[data-flipper-id=\"' + e + '\"] ' + i));\n      };\n    }(e) : function () {\n      return [];\n    };\n  }({\n    containerEl: b,\n    portalKey: x\n  }),\n      Y = function (t) {\n    return function (e) {\n      return t('[data-flip-id=\"' + e + '\"]')[0];\n    };\n  }(X),\n      H = function (t) {\n    return E[t] && K[t];\n  },\n      J = Object.keys(E).concat(Object.keys(K)).filter(function (t) {\n    return !H(t);\n  }),\n      z = {\n    flipCallbacks: C,\n    getElement: Y,\n    flippedElementPositionsBeforeUpdate: E,\n    flippedElementPositionsAfterUpdate: K,\n    inProgressAnimations: _,\n    decisionData: N\n  },\n      G = function (t) {\n    var e,\n        i = t.unflippedIds,\n        n = t.flipCallbacks,\n        r = t.getElement,\n        s = t.flippedElementPositionsBeforeUpdate,\n        a = t.flippedElementPositionsAfterUpdate,\n        o = t.inProgressAnimations,\n        l = t.decisionData,\n        p = i.filter(function (t) {\n      return a[t];\n    }).filter(function (t) {\n      return n[t] && n[t].onAppear;\n    }),\n        c = i.filter(function (t) {\n      return s[t] && n[t] && n[t].onExit;\n    }),\n        u = new Promise(function (t) {\n      e = t;\n    }),\n        d = [],\n        f = 0,\n        h = c.map(function (t, i) {\n      var r = s[t].domDataForExitAnimations,\n          a = r.element,\n          p = r.parent,\n          c = r.childPosition,\n          u = c.top,\n          h = c.left,\n          g = c.width,\n          m = c.height;\n      \"static\" === getComputedStyle(p).position && (p.style.position = \"relative\"), a.style.transform = \"matrix(1, 0, 0, 1, 0, 0)\", a.style.position = \"absolute\", a.style.top = u + \"px\", a.style.left = h + \"px\", a.style.height = m + \"px\", a.style.width = g + \"px\";\n      var v = d.filter(function (t) {\n        return t[0] === p;\n      })[0];\n      v || (v = [p, document.createDocumentFragment()], d.push(v)), v[1].appendChild(a), f += 1;\n\n      var y = function () {\n        try {\n          p.removeChild(a);\n        } catch (t) {} finally {\n          0 == (f -= 1) && e();\n        }\n      };\n\n      return o[t] = {\n        stop: y\n      }, function () {\n        return n[t].onExit(a, i, y, l);\n      };\n    });\n    return d.forEach(function (t) {\n      t[0].appendChild(t[1]);\n    }), h.length || e(), {\n      hideEnteringElements: function () {\n        p.forEach(function (t) {\n          var e = r(t);\n          e && (e.style.opacity = \"0\");\n        });\n      },\n      animateEnteringElements: function () {\n        p.forEach(function (t, e) {\n          var i = r(t);\n          i && n[t].onAppear(i, e, l);\n        });\n      },\n      animateExitingElements: function () {\n        return h.forEach(function (t) {\n          return t();\n        }), u;\n      }\n    };\n  }(u({}, z, {\n    unflippedIds: J\n  })),\n      Q = G.hideEnteringElements,\n      Z = G.animateEnteringElements,\n      $ = G.animateExitingElements,\n      tt = u({}, z, {\n    containerEl: b,\n    flippedIds: g.filter(H),\n    applyTransformOrigin: I,\n    spring: O,\n    debug: w,\n    staggerConfig: j,\n    scopedSelector: X,\n    onComplete: q\n  });\n\n  W && W(b, N);\n\n  var et = function (l) {\n    var d,\n        h = l.flippedIds,\n        g = l.flipCallbacks,\n        y = l.inProgressAnimations,\n        _ = l.flippedElementPositionsBeforeUpdate,\n        S = l.flippedElementPositionsAfterUpdate,\n        E = l.applyTransformOrigin,\n        A = l.spring,\n        C = l.getElement,\n        b = l.debug,\n        I = l.staggerConfig,\n        O = void 0 === I ? {} : I,\n        w = l.decisionData,\n        x = void 0 === w ? {} : w,\n        T = l.onComplete,\n        D = l.containerEl,\n        M = new Promise(function (t) {\n      d = t;\n    });\n    if (T && M.then(function () {\n      return T(D, x);\n    }), !h.length) return function () {\n      return d([]), M;\n    };\n    var k = [],\n        j = C(h[0]),\n        B = j ? j.ownerDocument.querySelector(\"body\") : document.querySelector(\"body\"),\n        N = (c(h), h.map(function (l) {\n      var c = _[l].rect,\n          h = S[l].rect,\n          C = _[l].opacity,\n          b = S[l].opacity,\n          I = h.width < 1 || h.height < 1,\n          O = S[l].element;\n      if (!P(c) && !P(h)) return !1;\n      if (!O) return !1;\n      var w,\n          U,\n          V,\n          T = R(O),\n          D = (V = (U = void 0 === (w = {\n        flipperSpring: A,\n        flippedSpring: T.spring\n      }) ? {} : w).flippedSpring, u({}, m.noWobble, v(U.flipperSpring), v(V))),\n          M = !0 === T.stagger ? \"default\" : T.stagger,\n          j = {\n        element: O,\n        id: l,\n        stagger: M,\n        springConfig: D\n      };\n      if (g[l] && g[l].shouldFlip && !g[l].shouldFlip(x.previous, x.current)) return !1;\n      var L = Math.abs(c.left - h.left) + Math.abs(c.top - h.top),\n          q = Math.abs(c.width - h.width) + Math.abs(c.height - h.height),\n          W = Math.abs(b - C);\n      if (0 === c.height && 0 === h.height || 0 === c.width && 0 === h.width || L < .5 && q < .5 && W < .01) return !1;\n      var K = t(S[l].transform),\n          X = {\n        matrix: K\n      },\n          Y = {\n        matrix: []\n      },\n          H = [K];\n      T.translate && (H.push(e(c.left - h.left)), H.push(i(c.top - h.top))), T.scale && (H.push(n(Math.max(c.width, 1) / Math.max(h.width, 1))), H.push(r(Math.max(c.height, 1) / Math.max(h.height, 1)))), T.opacity && (Y.opacity = C, X.opacity = b);\n      var J = [];\n\n      if (!g[l] || !g[l].shouldInvert || g[l].shouldInvert(x.previous, x.current)) {\n        var z = function (t, e) {\n          return p(t.querySelectorAll('[data-inverse-flip-id=\"' + e + '\"]'));\n        }(O, l);\n\n        J = z.map(function (t) {\n          return [t, R(t)];\n        });\n      }\n\n      Y.matrix = F(H.reduce(s)), X.matrix = F(X.matrix);\n\n      var G,\n          Q = function (t) {\n        var e = t.element,\n            i = t.invertedChildren,\n            n = t.body;\n        return function (t) {\n          var r = t.matrix,\n              s = t.opacity,\n              o = t.forceMinVals;\n\n          if (a(s) && (e.style.opacity = s + \"\"), o && (e.style.minHeight = \"1px\", e.style.minWidth = \"1px\"), r) {\n            var l = function (t) {\n              return \"matrix(\" + t.join(\", \") + \")\";\n            }(r);\n\n            e.style.transform = l, i && function (t) {\n              var e = t.matrix,\n                  i = t.body;\n              t.invertedChildren.forEach(function (t) {\n                var n = t[0],\n                    r = t[1];\n\n                if (i.contains(n)) {\n                  var s = e[0],\n                      a = e[3],\n                      o = e[5],\n                      l = {\n                    translateX: 0,\n                    translateY: 0,\n                    scaleX: 1,\n                    scaleY: 1\n                  },\n                      p = \"\";\n                  r.translate && (l.translateX = -e[4] / s, l.translateY = -o / a, p += \"translate(\" + l.translateX + \"px, \" + l.translateY + \"px)\"), r.scale && (l.scaleX = 1 / s, l.scaleY = 1 / a, p += \" scale(\" + l.scaleX + \", \" + l.scaleY + \")\"), n.style.transform = p;\n                }\n              });\n            }({\n              invertedChildren: i,\n              matrix: r,\n              body: n\n            });\n          }\n        };\n      }({\n        element: O,\n        invertedChildren: J,\n        body: B\n      });\n\n      if (g[l] && g[l].onComplete) {\n        var Z = g[l].onComplete;\n\n        G = function () {\n          return Z(O, x);\n        };\n      }\n\n      var $ = a(Y.opacity) && a(X.opacity) && Y.opacity !== X.opacity,\n          tt = !1;\n      return u({}, j, {\n        stagger: M,\n        springConfig: D,\n        getOnUpdateFunc: function (t) {\n          var e = t.spring,\n              i = t.onAnimationEnd;\n          return y[l] = {\n            destroy: e.destroy.bind(e),\n            onAnimationEnd: i\n          }, function (t) {\n            g[l] && g[l].onSpringUpdate && g[l].onSpringUpdate(t.getCurrentValue()), tt || (tt = !0, g[l] && g[l].onStart && g[l].onStart(O, x));\n            var e = t.getCurrentValue();\n\n            if (B.contains(O)) {\n              var i = {\n                matrix: []\n              };\n              i.matrix = Y.matrix.map(function (t, i) {\n                return f(t, X.matrix[i], e);\n              }), $ && (i.opacity = f(Y.opacity, X.opacity, e)), Q(i);\n            } else t.destroy();\n          };\n        },\n        initializeFlip: function () {\n          Q({\n            matrix: Y.matrix,\n            opacity: $ ? Y.opacity : void 0,\n            forceMinVals: I\n          }), g[l] && g[l].onStartImmediate && g[l].onStartImmediate(O, x), T.transformOrigin ? O.style.transformOrigin = T.transformOrigin : E && (O.style.transformOrigin = \"0 0\"), J.forEach(function (t) {\n            var e = t[0],\n                i = t[1];\n            i.transformOrigin ? e.style.transformOrigin = i.transformOrigin : E && (e.style.transformOrigin = \"0 0\");\n          });\n        },\n        onAnimationEnd: function (t) {\n          delete y[l], o(G) && G(), O.style.transform = \"\", J.forEach(function (t) {\n            t[0].style.transform = \"\";\n          }), I && O && (O.style.minHeight = \"\", O.style.minWidth = \"\"), t || (k.push(l), k.length >= N.length && d(k));\n        },\n        delayUntil: T.delayUntil\n      });\n    }).filter(Boolean));\n    if (N.forEach(function (t) {\n      return (0, t.initializeFlip)();\n    }), b) return function () {};\n    var L = N.filter(function (t) {\n      return t.delayUntil && (e = t.delayUntil, N.filter(function (t) {\n        return t.id === e;\n      }).length);\n      var e;\n    }),\n        q = {},\n        W = {},\n        K = {};\n    L.forEach(function (t) {\n      t.stagger ? (K[t.stagger] = !0, W[t.delayUntil] ? W[t.delayUntil].push(t.stagger) : W[t.delayUntil] = [t.stagger]) : q[t.delayUntil] ? q[t.delayUntil].push(t) : q[t.delayUntil] = [t];\n    });\n    var X = N.filter(function (t) {\n      return t.stagger;\n    }).reduce(function (t, e) {\n      return t[e.stagger] ? t[e.stagger].push(e) : t[e.stagger] = [e], t;\n    }, {}),\n        Y = N.filter(function (t) {\n      return -1 === L.indexOf(t);\n    });\n    return Y.forEach(function (t) {\n      t.onSpringActivate = function () {\n        q[t.id] && q[t.id].forEach(U), W[t.id] && Object.keys(W[t.id].reduce(function (t, e) {\n          var i;\n          return u(t, ((i = {})[e] = !0, i));\n        }, {})).forEach(function (t) {\n          V(X[t], O[t]);\n        });\n      };\n    }), function () {\n      return N.length || d([]), Y.filter(function (t) {\n        return !t.stagger;\n      }).forEach(U), Object.keys(X).forEach(function (t) {\n        K[t] || V(X[t], O[t]);\n      }), M;\n    };\n  }(tt);\n\n  L ? L({\n    hideEnteringElements: Q,\n    animateEnteringElements: Z,\n    animateExitingElements: $,\n    animateFlippedElements: et\n  }) : (Q(), $().then(Z), et());\n},\n    j = function (t) {\n  var e = t.element,\n      i = t.flipCallbacks,\n      n = void 0 === i ? {} : i,\n      r = t.inProgressAnimations,\n      s = void 0 === r ? {} : r,\n      a = D(e, t.portalKey),\n      o = p(e.querySelectorAll(\"[data-inverse-flip-id]\")),\n      l = {},\n      c = [],\n      d = {};\n  a.filter(function (t) {\n    return n && n[t.dataset.flipId] && n[t.dataset.flipId].onExit;\n  }).forEach(function (t) {\n    var e = t.parentNode;\n\n    if (t.closest) {\n      var i = t.closest(\"[data-exit-container]\");\n      i && (e = i);\n    }\n\n    var n = c.findIndex(function (t) {\n      return t[0] === e;\n    });\n    -1 === n && (c.push([e, e.getBoundingClientRect()]), n = c.length - 1), l[t.dataset.flipId] = c[n][1], d[t.dataset.flipId] = e;\n  });\n  var f = M(a),\n      h = f.map(function (t) {\n    var e = t[0],\n        i = t[1],\n        r = {};\n\n    if (n && n[e.dataset.flipId] && n[e.dataset.flipId].onExit) {\n      var s = l[e.dataset.flipId];\n      u(r, {\n        element: e,\n        parent: d[e.dataset.flipId],\n        childPosition: {\n          top: i.top - s.top,\n          left: i.left - s.left,\n          width: i.width,\n          height: i.height\n        }\n      });\n    }\n\n    return [e.dataset.flipId, {\n      rect: i,\n      opacity: parseFloat(window.getComputedStyle(e).opacity || \"1\"),\n      domDataForExitAnimations: r\n    }];\n  }).reduce(T, {});\n  return function (t, e) {\n    Object.keys(t).forEach(function (e) {\n      t[e].destroy && t[e].destroy(), t[e].onAnimationEnd && t[e].onAnimationEnd(!0), delete t[e];\n    }), e.forEach(function (t) {\n      t.style.transform = \"\", t.style.opacity = \"\";\n    });\n  }(s, a.concat(o)), {\n    flippedElementPositions: h,\n    cachedOrderedFlipIds: f.map(function (t) {\n      return t[0].dataset.flipId;\n    })\n  };\n},\n    B = function () {\n  function t(t) {\n    this.applyTransformOrigin = !0, u(this, t), this.inProgressAnimations = {}, this.flipCallbacks = {}, this.recordBeforeUpdate = this.recordBeforeUpdate.bind(this), this.update = this.update.bind(this), this.addFlipped = this.addFlipped.bind(this), this.addInverted = this.addInverted.bind(this);\n  }\n\n  var e = t.prototype;\n  return e.recordBeforeUpdate = function () {\n    this.snapshot = j({\n      element: this.element,\n      flipCallbacks: this.flipCallbacks,\n      inProgressAnimations: this.inProgressAnimations\n    });\n  }, e.update = function (t, e) {\n    this.snapshot && (k({\n      flippedElementPositionsBeforeUpdate: this.snapshot.flippedElementPositions,\n      cachedOrderedFlipIds: this.snapshot.cachedOrderedFlipIds,\n      containerEl: this.element,\n      inProgressAnimations: this.inProgressAnimations,\n      flipCallbacks: this.flipCallbacks,\n      applyTransformOrigin: this.applyTransformOrigin,\n      spring: this.spring,\n      debug: this.debug,\n      staggerConfig: this.staggerConfig,\n      handleEnterUpdateDelete: this.handleEnterUpdateDelete,\n      decisionData: {\n        previous: t,\n        current: e\n      },\n      onComplete: this.onComplete,\n      onStart: this.onStart\n    }), delete this.snapshot);\n  }, e.addFlipped = function (t) {\n    var e = t.element,\n        i = t.flipId,\n        n = t.opacity,\n        r = t.translate,\n        s = t.scale,\n        a = t.transformOrigin,\n        o = t.spring,\n        l = t.stagger,\n        p = t.delayUntil,\n        c = t.onAppear,\n        d = t.onStart,\n        f = t.onSpringUpdate,\n        h = t.onComplete,\n        g = t.onExit,\n        m = t.shouldFlip,\n        v = t.shouldInvert;\n    if (!e) throw new Error(\"no element provided\");\n    if (!i) throw new Error(\"No flipId provided\");\n    var y = {\n      scale: s,\n      translate: r,\n      opacity: n,\n      transformOrigin: a,\n      spring: o,\n      stagger: l,\n      delayUntil: p\n    };\n    y.scale || y.translate || y.opacity || u(y, {\n      translate: !0,\n      scale: !0,\n      opacity: !0\n    }), i && (e.dataset.flipId = String(i)), e.dataset.flipConfig = JSON.stringify(y), this.flipCallbacks[i] = {\n      shouldFlip: m,\n      shouldInvert: v,\n      onAppear: c,\n      onStart: d,\n      onSpringUpdate: f,\n      onComplete: h,\n      onExit: g\n    };\n  }, e.addInverted = function (t) {\n    var e = t.element,\n        i = t.parent,\n        n = t.opacity,\n        r = t.translate,\n        s = t.scale,\n        a = t.transformOrigin;\n    if (!e) throw new Error(\"no element provided\");\n    if (!i) throw new Error(\"parent must be provided\");\n    var o = i.dataset.flipId,\n        l = {\n      scale: s,\n      translate: r,\n      opacity: n,\n      transformOrigin: a\n    };\n    l.scale || l.translate || l.opacity || u(l, {\n      translate: !0,\n      scale: !0,\n      opacity: !0\n    }), e.dataset.inverseFlipId = o, e.dataset.flipConfig = JSON.stringify(l);\n  }, t;\n}(),\n    N = new O(),\n    L = function (t) {\n  var e = t.values,\n      i = t.onUpdate,\n      n = t.delay,\n      r = void 0 === n ? 0 : n,\n      s = t.onComplete,\n      a = u({}, m.noWobble, v(t.config)),\n      o = a.overshootClamping,\n      l = N.createSpring(a.stiffness, a.damping);\n  return l.setOvershootClampingEnabled(!!o), l.addListener({\n    onSpringAtRest: function (t) {\n      s && s(), t.destroy();\n    },\n    onSpringUpdate: function (t) {\n      var n = t.getCurrentValue();\n      if (!e) return i(n);\n      var r = Object.keys(e).map(function (t) {\n        return [t, f(e[t][0], e[t][1], n)];\n      }).reduce(function (t, e) {\n        var i;\n        return Object.assign(t, ((i = {})[e[0]] = e[1], i));\n      }, {});\n      i(r);\n    }\n  }), r ? setTimeout(function () {\n    l.setEndValue(1);\n  }, r) : l.setEndValue(1), l;\n};\n\nexport { B as Flipper, g as constants, j as getFlippedElementPositionsBeforeUpdate, k as onFlipKeyUpdate, L as spring, h as utilities };","map":{"version":3,"sources":["../src/utilities/index.ts","../src/forked-rebound/onFrame.js","../src/constants.ts","../src/springSettings/index.ts","../src/forked-rebound/util.js","../src/forked-rebound/Loopers.js","../src/forked-rebound/Spring.js","../src/forked-rebound/SpringSystem.js","../src/flip/animateFlippedElements/spring/index.ts","../src/flip/animateFlippedElements/index.ts","../src/flip/getFlippedElementPositions/utilities.ts","../src/flip/index.ts","../src/flip/getFlippedElementPositions/getFlippedElementPositionsAfterUpdate/index.ts","../src/flip/animateUnflippedElements/index.ts","../src/flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate/index.ts","../src/Flipper.ts","../src/Spring/index.ts"],"names":["isNumber","x","isFunction","isObject","Object","prototype","toString","call","toArray","arrayLike","Array","slice","apply","getDuplicateValsAsStrings","arr","obj","reduce","acc","curr","keys","filter","val","assign","target","forEach","arg","nextKey","hasOwnProperty","tweenProp","start","end","position","_onFrame","window","requestAnimationFrame","callback","setTimeout","springPresets","noWobble","stiffness","damping","gentle","veryGentle","wobbly","stiff","normalizeSpring","spring","indexOf","flipperSpring","flippedSpring","Date","now","performanceNow","performance","removeFirst","array","item","idx","splice","AnimationLooper","run","onFrame","_this","springSystem","loop","PhysicsState","this","velocity","ID","Spring","_id","_springSystem","listeners","_startValue","_currentState","_displacementFromRestThreshold","_endValue","_overshootClampingEnabled","_previousState","_restSpeedThreshold","_tempState","_timeAccumulator","_wasAtRest","_cachedSpringConfig","getId","destroy","deregisterSpring","setSpringConfig","springConfig","_springConfig","getCurrentValue","getDisplacementDistanceForState","state","Math","abs","setEndValue","endValue","prevEndValue","isAtRest","activateSpring","i","len","length","onChange","onSpringEndStateChange","setVelocity","setCurrentValue","currentValue","listener","onSpringUpdate","setAtRest","setOvershootClampingEnabled","enabled","isOvershooting","tension","advance","time","realDeltaTime","adjustedDeltaTime","friction","tempPosition","tempVelocity","aVelocity","aAcceleration","bVelocity","bAcceleration","cVelocity","cAcceleration","_interpolate","notifyActivate","notifyAtRest","notifyPositionUpdated","Boolean","onSpringActivate","_this2","_onActivateCalled","onSpringAtRest","systemShouldAdvance","wasAtRest","alpha","addListener","newListener","push","addOneTimeListener","func","removeListener","key","listenerToRemove","SpringSystem","looper","_activeSprings","_idleSpringIndices","_isIdle","_lastTimeMillis","_springRegistry","createSpring","createSpringWithConfig","registerSpring","getIsIdle","deltaTime","pop","currentTimeMillis","ellapsedMillis","onBeforeIntegrate","onAfterIntegrate","springId","createSuspendedSpring","flipData","overshootClamping","getOnUpdateFunc","onAnimationEnd","flipped","speedConfig","min","max","createStaggeredSprings","flippedArray","staggerConfig","reverse","normalizedSpeed","speed","nextThreshold","setEndValueFuncs","map","cachedGetOnUpdate","onUpdate","args","bind","convertMatrix3dArrayTo2dArray","matrix","index","join","invertedChildren","body","child","childFlipConfig","contains","scaleX","scaleY","translateY","inverseVals","translateX","transformString","translate","scale","style","transform","element","opacity","forceMinVals","minHeight","minWidth","stringTransform","convertMatrix2dArrayToString","invertTransformsForChildren","rectInViewport","top","bottom","left","right","innerHeight","innerWidth","id","querySelectorAll","extractFlipConfig","JSON","parse","dataset","flipConfig","flippedIds","flipCallbacks","inProgressAnimations","flippedElementPositionsBeforeUpdate","flippedElementPositionsAfterUpdate","applyTransformOrigin","getElement","debug","decisionData","onComplete","containerEl","closureResolve","flipCompletedPromise","Promise","resolve","then","completedAnimationIds","firstElement","ownerDocument","querySelector","document","flipDataArray","prevRect","rect","currentRect","prevOpacity","currentOpacity","needsForcedMinVals","width","height","stagger","toReturn","shouldFlip","previous","current","translateDifference","scaleDifference","opacityDifference","currentTransform","Rematrix","toVals","fromVals","transformsArray","shouldInvert","invertedChildElements","getInvertedChildren","c","applyStyles","createApplyStylesFunc","cachedOnComplete","isCancellation","animateOpacity","onStartCalled","onStart","vals","fromVal","undefined","onStartImmediate","transformOrigin","initializeFlip","delayUntil","flipId","f","delayedFlip","delayUntilSprings","delayUntilStaggers","delayedStaggerKeys","flip","staggerDict","immediateFlip","staggerKey","addTupleToObject","getAllElements","portalKey","getRects","flippedElements","getBoundingClientRect","selector","tempFlipperId","random","toFixed","flipperId","createPortalScopedSelector","createFlipperScopedSelector","scopedSelector","onFlipKeyUpdate","cachedOrderedFlipIds","handleEnterUpdateDelete","createScopedSelector","createGetElementFunc","isFlipped","unflippedIds","concat","baseArgs","hideEnteringElements","animateEnteringElements","animateExitingElements","animateUnflippedElements","animateFlippedElementsArgs","animateFlippedElements","childBCR","computedStyle","getComputedStyle","parseFloat","animatedEnteringElementIds","onAppear","animatedExitingElementIds","onExit","promiseToReturn","fragmentTuples","exitingElementCount","onExitCallbacks","domDataForExitAnimations","parent","childPosition","fragmentTuple","t","createDocumentFragment","appendChild","stop","removeChild","DOMException","animatingElements","el","getFlippedElementPositionsBeforeUpdate","inverseFlippedElements","childIdsToParentBCRs","parentBCRs","childIdsToParents","parentNode","closest","exitContainer","bcrIndex","findIndex","n","filteredFlippedElements","parentBCR","flippedElementPositions","cancelInProgressAnimations","Flipper","options","recordBeforeUpdate","update","addFlipped","addInverted","snapshot","prevDecisionData","currentDecisionData","Error","String","stringify","inverseFlipId","createSimpleSpring","config","values","delay","springVal","currentValues","value"],"mappings":"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","sourcesContent":["import { IndexableObject } from './types'\n\nexport const isNumber = (x: any) => typeof x === 'number'\n\nexport const isFunction = (x: any) => typeof x === 'function'\n\nexport const isObject = (x: any) =>\n  Object.prototype.toString.call(x) === '[object Object]'\n\nexport const toArray = (arrayLike: ArrayLike<any>) =>\n  Array.prototype.slice.apply(arrayLike)\n\nexport const getDuplicateValsAsStrings = (arr: string[]): string[] => {\n  const baseObj: IndexableObject = {}\n  const obj = arr.reduce((acc, curr) => {\n    acc[curr] = (acc[curr] || 0) + 1\n    return acc\n  }, baseObj)\n  return Object.keys(obj).filter(val => obj[val] > 1)\n}\n\n// tslint only likes this with a regular function, not an arrow function\nexport function assign(target: IndexableObject, ...args: IndexableObject[]) {\n  args.forEach(arg => {\n    if (!arg) {\n      return\n    }\n    // Skip over if undefined or null\n    for (const nextKey in arg) {\n      // Avoid bugs when hasOwnProperty is shadowed\n      if (Object.prototype.hasOwnProperty.call(arg, nextKey)) {\n        target[nextKey] = arg[nextKey]\n      }\n    }\n  })\n  return target\n}\n\nexport const tweenProp = (start: number, end: number, position: number) =>\n  start + (end - start) * position\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nlet _onFrame\nif (typeof window !== \"undefined\") {\n  _onFrame = window.requestAnimationFrame\n}\n\n_onFrame =\n  _onFrame ||\n  function(callback) {\n    window.setTimeout(callback, 1000 / 60)\n  }\n\nexport default _onFrame\n","export const DATA_FLIP_ID = 'data-flip-id'\nexport const DATA_INVERSE_FLIP_ID = 'data-inverse-flip-id'\nexport const DATA_FLIP_COMPONENT_ID = 'data-flip-component-id'\nexport const DATA_FLIP_CONFIG = 'data-flip-config'\nexport const DATA_PORTAL_KEY = 'data-portal-key'\nexport const DATA_EXIT_CONTAINER = 'data-exit-container'\n","import { isObject, assign } from '../utilities'\nimport { SpringPresets, SpringConfig, SpringOption } from './types'\n\n// adapted from\n// https://github.com/chenglou/react-motion/blob/master/src/presets.js\nexport const springPresets: SpringPresets = {\n  noWobble: { stiffness: 200, damping: 26 },\n  gentle: { stiffness: 120, damping: 14 },\n  veryGentle: { stiffness: 130, damping: 17 },\n  wobbly: { stiffness: 180, damping: 12 },\n  stiff: { stiffness: 260, damping: 26 }\n}\n\nfunction argIsSpringConfig(\n  arg: SpringConfig | keyof SpringPresets | undefined\n): arg is SpringConfig {\n  return isObject(arg)\n}\n\nexport const normalizeSpring = (\n  spring?: SpringConfig | keyof SpringPresets | any\n) => {\n  if (argIsSpringConfig(spring)) {\n    return spring\n  } else if (Object.keys(springPresets).indexOf(spring) > -1) {\n    return springPresets[spring]\n  } else {\n    return {}\n  }\n}\n\nexport const getSpringConfig = ({\n  flipperSpring,\n  flippedSpring\n}: { flipperSpring?: SpringOption; flippedSpring?: SpringOption } = {}) => {\n  return assign(\n    {},\n    springPresets.noWobble,\n    normalizeSpring(flipperSpring),\n    normalizeSpring(flippedSpring)\n  )\n}\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nexport { default as onFrame } from './onFrame'\n\nconst start = Date.now()\nexport const performanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function'\n    ? () => performance.now()\n    : () => Date.now() - start\n\n// Lop off the first occurence of the reference in the Array.\nexport function removeFirst(array, item) {\n  const idx = array.indexOf(item)\n  idx !== -1 && array.splice(idx, 1)\n}\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nimport { onFrame, performanceNow } from \"./util\"\n\n/**\n * Plays each frame of the SpringSystem on animation\n * timing loop. This is the default type of looper for a new spring system\n * as it is the most common when developing UI.\n * @public\n */\nexport class AnimationLooper {\n  run() {\n    onFrame(() => {\n      this.springSystem.loop(performanceNow())\n    })\n  }\n}\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nimport { removeFirst } from './util'\n\nclass PhysicsState {\n  constructor() {\n    this.position = 0\n    this.velocity = 0\n  }\n}\n\nlet ID = 0\nconst MAX_DELTA_TIME_SEC = 0.064\nconst SOLVER_TIMESTEP_SEC = 0.001\n\n/**\n * Provides a model of a classical spring acting to\n * resolve a body to equilibrium. Springs have configurable\n * tension which is a force multipler on the displacement of the\n * spring from its rest point or `endValue` as defined by [Hooke's\n * law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have\n * configurable friction, which ensures that they do not oscillate\n * infinitely. When a Spring is displaced by updating it's resting\n * or `currentValue`, the SpringSystems that contain that Spring\n * will automatically start looping to solve for equilibrium. As each\n * timestep passes, `SpringListener` objects attached to the Spring\n * will be notified of the updates providing a way to drive an\n * animation off of the spring's resolution curve.\n * @public\n */\nclass Spring {\n  constructor(springSystem) {\n    this._id = `s${ID++}`\n    this._springSystem = springSystem\n\n    this.listeners = []\n    this._startValue = 0\n\n    this._currentState = new PhysicsState()\n    this._displacementFromRestThreshold = 0.001\n    this._endValue = 0\n    this._overshootClampingEnabled = false\n    this._previousState = new PhysicsState()\n    this._restSpeedThreshold = 0.001\n\n    this._tempState = new PhysicsState()\n    this._timeAccumulator = 0\n    this._wasAtRest = true\n    // hack from alex -- only call 1x\n    this._onActivateCalled\n    this._cachedSpringConfig = {}\n  }\n\n  getId() {\n    return this._id\n  }\n\n  /**\n   * Remove a Spring from simulation and clear its listeners.\n   * @public\n   */\n  destroy() {\n    this.listeners = []\n    this._springSystem.deregisterSpring(this)\n  }\n\n  /**\n   * Set the configuration values for this Spring. A SpringConfig\n   * contains the tension and friction values used to solve for the\n   * equilibrium of the Spring in the physics loop.\n   * @public\n   */\n  setSpringConfig(springConfig) {\n    this._springConfig = springConfig\n    return this\n  }\n  /**\n   * Retrieve the current value of the Spring.\n   * @public\n   */\n  getCurrentValue() {\n    return this._currentState.position\n  }\n\n  /**\n   * Get the absolute distance of the Spring from a given state value\n   */\n  getDisplacementDistanceForState(state) {\n    return Math.abs(this._endValue - state.position)\n  }\n\n  /**\n   * Set the endValue or resting position of the spring. If this\n   * value is different than the current value, the SpringSystem will\n   * be notified and will begin running its solver loop to resolve\n   * the Spring to equilibrium. Any listeners that are registered\n   * for onSpringEndStateChange will also be notified of this update\n   * immediately.\n   * @public\n   */\n\n  setEndValue(endValue) {\n    if (endValue === this._endValue) return this\n    this.prevEndValue = endValue\n    if (this._endValue === endValue && this.isAtRest()) {\n      return this\n    }\n    this._startValue = this.getCurrentValue()\n    this._endValue = endValue\n    this._springSystem.activateSpring(this.getId())\n    for (let i = 0, len = this.listeners.length; i < len; i++) {\n      const listener = this.listeners[i]\n      const onChange = listener.onSpringEndStateChange\n      onChange && onChange(this)\n    }\n    return this\n  }\n\n  /**\n   * Set the current velocity of the Spring, in pixels per second. As\n   * previously mentioned, this can be useful when you are performing\n   * a direct manipulation gesture. When a UI element is released you\n   * may call setVelocity on its animation Spring so that the Spring\n   * continues with the same velocity as the gesture ended with. The\n   * friction, tension, and displacement of the Spring will then\n   * govern its motion to return to rest on a natural feeling curve.\n   * @public\n   */\n  setVelocity(velocity) {\n    if (velocity === this._currentState.velocity) {\n      return this\n    }\n    this._currentState.velocity = velocity\n    this._springSystem.activateSpring(this.getId())\n    return this\n  }\n\n  setCurrentValue(currentValue) {\n    this._startValue = currentValue\n    this._currentState.position = currentValue\n    for (var i = 0, len = this.listeners.length; i < len; i++) {\n      var listener = this.listeners[i]\n      listener.onSpringUpdate && listener.onSpringUpdate(this)\n    }\n    return this\n  }\n\n  setAtRest() {\n    this._endValue = this._currentState.position\n    this._tempState.position = this._currentState.position\n    this._currentState.velocity = 0\n    return this\n  }\n\n  /**\n   * Enable overshoot clamping. This means that the Spring will stop\n   * immediately when it reaches its resting position regardless of\n   * any existing momentum it may have. This can be useful for certain\n   * types of animations that should not oscillate such as a scale\n   * down to 0 or alpha fade.\n   * @public\n   */\n  setOvershootClampingEnabled(enabled) {\n    this._overshootClampingEnabled = enabled\n    return this\n  }\n\n  /**\n   * Check if the Spring has gone past its end point by comparing\n   * the direction it was moving in when it started to the current\n   * position and end value.\n   * @public\n   */\n  isOvershooting() {\n    const start = this._startValue\n    const end = this._endValue\n    return (\n      this._springConfig.tension > 0 &&\n      ((start < end && this.getCurrentValue() > end) ||\n        (start > end && this.getCurrentValue() < end))\n    )\n  }\n\n  /**\n   * The main solver method for the Spring. It takes\n   * the current time and delta since the last time step and performs\n   * an RK4 integration to get the new position and velocity state\n   * for the Spring based on the tension, friction, velocity, and\n   * displacement of the Spring.\n   * @public\n   */\n  advance(time, realDeltaTime) {\n    let isAtRest = this.isAtRest()\n\n    if (isAtRest && this._wasAtRest) {\n      return\n    }\n\n    let adjustedDeltaTime = realDeltaTime\n    if (realDeltaTime > MAX_DELTA_TIME_SEC) {\n      adjustedDeltaTime = MAX_DELTA_TIME_SEC\n    }\n\n    this._timeAccumulator += adjustedDeltaTime\n\n    const tension = this._springConfig.tension\n    const friction = this._springConfig.friction\n    let position = this._currentState.position\n    let velocity = this._currentState.velocity\n    let tempPosition = this._tempState.position\n    let tempVelocity = this._tempState.velocity\n    let aVelocity\n    let aAcceleration\n    let bVelocity\n    let bAcceleration\n    let cVelocity\n    let cAcceleration\n    let dVelocity\n    let dAcceleration\n    let dxdt\n    let dvdt\n\n    while (this._timeAccumulator >= SOLVER_TIMESTEP_SEC) {\n      this._timeAccumulator -= SOLVER_TIMESTEP_SEC\n\n      if (this._timeAccumulator < SOLVER_TIMESTEP_SEC) {\n        this._previousState.position = position\n        this._previousState.velocity = velocity\n      }\n\n      aVelocity = velocity\n      aAcceleration =\n        tension * (this._endValue - tempPosition) - friction * velocity\n\n      tempPosition = position + aVelocity * SOLVER_TIMESTEP_SEC * 0.5\n      tempVelocity = velocity + aAcceleration * SOLVER_TIMESTEP_SEC * 0.5\n      bVelocity = tempVelocity\n      bAcceleration =\n        tension * (this._endValue - tempPosition) - friction * tempVelocity\n\n      tempPosition = position + bVelocity * SOLVER_TIMESTEP_SEC * 0.5\n      tempVelocity = velocity + bAcceleration * SOLVER_TIMESTEP_SEC * 0.5\n      cVelocity = tempVelocity\n      cAcceleration =\n        tension * (this._endValue - tempPosition) - friction * tempVelocity\n\n      tempPosition = position + cVelocity * SOLVER_TIMESTEP_SEC\n      tempVelocity = velocity + cAcceleration * SOLVER_TIMESTEP_SEC\n      dVelocity = tempVelocity\n      dAcceleration =\n        tension * (this._endValue - tempPosition) - friction * tempVelocity\n\n      dxdt =\n        (1.0 / 6.0) * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity)\n      dvdt =\n        (1.0 / 6.0) *\n        (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration)\n\n      position += dxdt * SOLVER_TIMESTEP_SEC\n      velocity += dvdt * SOLVER_TIMESTEP_SEC\n    }\n\n    this._tempState.position = tempPosition\n    this._tempState.velocity = tempVelocity\n\n    this._currentState.position = position\n    this._currentState.velocity = velocity\n\n    if (this._timeAccumulator > 0) {\n      this._interpolate(this._timeAccumulator / SOLVER_TIMESTEP_SEC)\n    }\n\n    if (\n      this.isAtRest() ||\n      (this._overshootClampingEnabled && this.isOvershooting())\n    ) {\n      if (this._springConfig.tension > 0) {\n        this._startValue = this._endValue\n        this._currentState.position = this._endValue\n      } else {\n        this._endValue = this._currentState.position\n        this._startValue = this._endValue\n      }\n      this.setVelocity(0)\n      isAtRest = true\n    }\n\n    let notifyActivate = false\n    if (this._wasAtRest) {\n      this._wasAtRest = false\n      notifyActivate = true\n    }\n\n    let notifyAtRest = false\n    if (isAtRest) {\n      this._wasAtRest = true\n      notifyAtRest = true\n    }\n\n    this.notifyPositionUpdated(notifyActivate, notifyAtRest)\n  }\n\n  notifyPositionUpdated(notifyActivate, notifyAtRest) {\n    this.listeners.filter(Boolean).forEach(listener => {\n      if (\n        notifyActivate &&\n        listener.onSpringActivate &&\n        !this._onActivateCalled\n      ) {\n        listener.onSpringActivate(this)\n        this._onActivateCalled = true\n      }\n\n      if (listener.onSpringUpdate) {\n        listener.onSpringUpdate(this)\n      }\n\n      if (notifyAtRest && listener.onSpringAtRest) {\n        listener.onSpringAtRest(this)\n      }\n    })\n  }\n\n  /**\n   * Check if the SpringSystem should advance. Springs are advanced\n   * a final frame after they reach equilibrium to ensure that the\n   * currentValue is exactly the requested endValue regardless of the\n   * displacement threshold.\n   * @public\n   */\n  systemShouldAdvance() {\n    return !this.isAtRest() || !this.wasAtRest()\n  }\n\n  wasAtRest() {\n    return this._wasAtRest\n  }\n\n  /**\n   * Check if the Spring is atRest meaning that it's currentValue and\n   * endValue are the same and that it has no velocity. The previously\n   * described thresholds for speed and displacement define the bounds\n   * of this equivalence check. If the Spring has 0 tension, then it will\n   * be considered at rest whenever its absolute velocity drops below the\n   * restSpeedThreshold.\n   * @public\n   */\n  isAtRest() {\n    const isAtRest =\n      Math.abs(this._currentState.velocity) < this._restSpeedThreshold &&\n      (this.getDisplacementDistanceForState(this._currentState) <=\n        this._displacementFromRestThreshold ||\n        this._springConfig.tension === 0)\n    return isAtRest\n  }\n\n  _interpolate(alpha) {\n    this._currentState.position =\n      this._currentState.position * alpha +\n      this._previousState.position * (1 - alpha)\n    this._currentState.velocity =\n      this._currentState.velocity * alpha +\n      this._previousState.velocity * (1 - alpha)\n  }\n\n  addListener(newListener) {\n    this.listeners.push(newListener)\n    return this\n  }\n\n  addOneTimeListener(newListener) {\n    const oneTimeFunc = func => (...args) => {\n      func(...args)\n      this.removeListener(newListener)\n    }\n    Object.keys(newListener).forEach(key => {\n      newListener[key] = oneTimeFunc(newListener[key])\n    })\n    this.listeners.push(newListener)\n    return this\n  }\n\n  removeListener(listenerToRemove) {\n    removeFirst(this.listeners, listenerToRemove)\n    return this\n  }\n}\n\nexport default Spring\n","//\n/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nimport { AnimationLooper } from './Loopers'\nimport Spring from './Spring'\nimport { removeFirst } from './util'\n\n/**\n * A set of Springs that all run on the same physics\n * timing loop. To get started with a Rebound animation, first\n * create a new SpringSystem and then add springs to it.\n * @public\n */\nclass SpringSystem {\n  constructor(looper) {\n    this.looper = looper || new AnimationLooper()\n    this.looper.springSystem = this\n\n    this.listeners = []\n    this._activeSprings = []\n    this._idleSpringIndices = []\n    this._isIdle = true\n    this._lastTimeMillis = -1\n    this._springRegistry = {}\n  }\n\n  /**\n   * Add a new spring to this SpringSystem. This Spring will now be solved for\n   * during the physics iteration loop. By default the spring will use the\n   * default Origami spring config with 40 tension and 7 friction, but you can\n   * also provide your own values here.\n   * @public\n   */\n  createSpring(tension, friction) {\n    return this.createSpringWithConfig({ tension, friction })\n  }\n  /**\n   * Add a spring with the provided SpringConfig.\n   * @public\n   */\n  createSpringWithConfig(springConfig) {\n    const spring = new Spring(this)\n    this.registerSpring(spring)\n    spring.setSpringConfig(springConfig)\n    return spring\n  }\n\n  /**\n   * Check if a SpringSystem is idle or active. If all of the Springs in the\n   * SpringSystem are at rest, i.e. the physics forces have reached equilibrium,\n   * then this method will return true.\n   * @public\n   */\n  getIsIdle() {\n    return this._isIdle\n  }\n\n  /**\n   * Manually add a spring to this system. This is called automatically\n   * if a Spring is created with SpringSystem#createSpring.\n   *\n   * This method sets the spring up in the registry so that it can be solved\n   * in the solver loop.\n   * @public\n   */\n  registerSpring(spring) {\n    this._springRegistry[spring.getId()] = spring\n  }\n\n  /**\n   * Deregister a spring with this SpringSystem. The SpringSystem will\n   * no longer consider this Spring during its integration loop once\n   * this is called. This is normally done automatically for you when\n   * you call Spring#destroy.\n   * @public\n   */\n  deregisterSpring(spring) {\n    removeFirst(this._activeSprings, spring)\n    delete this._springRegistry[spring.getId()]\n  }\n\n  advance(time, deltaTime) {\n    while (this._idleSpringIndices.length > 0) {\n      this._idleSpringIndices.pop()\n    }\n    this._activeSprings.filter(Boolean).forEach(spring => {\n      if (spring.systemShouldAdvance()) {\n        spring.advance(time / 1000.0, deltaTime / 1000.0)\n      } else {\n        this._idleSpringIndices.push(this._activeSprings.indexOf(spring))\n      }\n    })\n\n    while (this._idleSpringIndices.length > 0) {\n      const idx = this._idleSpringIndices.pop()\n      idx >= 0 && this._activeSprings.splice(idx, 1)\n    }\n  }\n\n  /**\n   * This is the main solver loop called to move the simulation\n   * forward through time. Before each pass in the solver loop\n   * onBeforeIntegrate is called on an any listeners that have\n   * registered themeselves with the SpringSystem. This gives you\n   * an opportunity to apply any constraints or adjustments to\n   * the springs that should be enforced before each iteration\n   * loop. Next the advance method is called to move each Spring in\n   * the systemShouldAdvance forward to the current time. After the\n   * integration step runs in advance, onAfterIntegrate is called\n   * on any listeners that have registered themselves with the\n   * SpringSystem. This gives you an opportunity to run any post\n   * integration constraints or adjustments on the Springs in the\n   * SpringSystem.\n   * @public\n   */\n  loop(currentTimeMillis) {\n    let listener\n    if (this._lastTimeMillis === -1) {\n      this._lastTimeMillis = currentTimeMillis - 1\n    }\n    const ellapsedMillis = currentTimeMillis - this._lastTimeMillis\n    this._lastTimeMillis = currentTimeMillis\n\n    let i = 0\n    const len = this.listeners.length\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i]\n      listener.onBeforeIntegrate && listener.onBeforeIntegrate(this)\n    }\n\n    this.advance(currentTimeMillis, ellapsedMillis)\n    if (this._activeSprings.length === 0) {\n      this._isIdle = true\n      this._lastTimeMillis = -1\n    }\n\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i]\n      listener.onAfterIntegrate && listener.onAfterIntegrate(this)\n    }\n\n    if (!this._isIdle) {\n      this.looper.run()\n    }\n  }\n\n  /**\n   * Used to notify the SpringSystem that a Spring has become displaced.\n   * The system responds by starting its solver loop up if it is currently idle.\n   */\n  activateSpring(springId) {\n    const spring = this._springRegistry[springId]\n    if (this._activeSprings.indexOf(spring) === -1) {\n      this._activeSprings.push(spring)\n    }\n    if (this.getIsIdle()) {\n      this._isIdle = false\n      this.looper.run()\n    }\n  }\n}\n\nexport default SpringSystem\n","import { SpringSystem } from '../../../forked-rebound'\nimport { StaggerConfigValue } from '../../../types'\nimport { FlipData, FlipDataArray } from '../types'\nimport {\n  SpringSystemInterface,\n  AddListenerArgs\n} from '../../../forked-rebound/types'\n\n// this should get created only 1x\nconst springSystem: SpringSystemInterface = new SpringSystem()\n\nexport const createSuspendedSpring = (flipData: FlipData) => {\n  const {\n    springConfig: { stiffness, damping, overshootClamping },\n    getOnUpdateFunc,\n    onAnimationEnd,\n    onSpringActivate\n  } = flipData\n\n  const spring = springSystem.createSpring(stiffness!, damping!)\n  spring.setOvershootClampingEnabled(!!overshootClamping)\n  const onSpringAtRest = () => {\n    // prevent SpringSystem from caching unused springs\n    spring.destroy()\n    onAnimationEnd()\n  }\n\n  const springConfig: AddListenerArgs = {\n    onSpringActivate,\n    onSpringAtRest,\n    onSpringUpdate: getOnUpdateFunc({\n      spring,\n      onAnimationEnd\n    })\n  }\n\n  spring.addListener(springConfig)\n  return spring\n}\n\nexport const createSpring = (flipped: FlipData) => {\n  const spring = createSuspendedSpring(flipped)\n  spring.setEndValue(1)\n  return spring\n}\n\nexport const normalizeSpeed = (speedConfig: number | undefined) => {\n  if (typeof speedConfig !== 'number') return 1.1\n  return 1 + Math.min(Math.max(speedConfig * 5, 0), 5)\n}\n\nexport const createStaggeredSprings = (\n  flippedArray: FlipDataArray,\n  staggerConfig: StaggerConfigValue = {}\n) => {\n  if (!flippedArray || !flippedArray.length) {\n    return\n  }\n\n  if (staggerConfig.reverse) {\n    flippedArray.reverse()\n  }\n\n  const normalizedSpeed = normalizeSpeed(staggerConfig.speed)\n\n  const nextThreshold = 1 / Math.max(Math.min(flippedArray.length, 100), 10)\n\n  const setEndValueFuncs = flippedArray\n    .map((flipped, i) => {\n      const cachedGetOnUpdate = flipped.getOnUpdateFunc\n\n      // modify the update function to adjust\n      // the end value of the trailing Flipped component\n      flipped.getOnUpdateFunc = args => {\n        const onUpdate = cachedGetOnUpdate(args)\n        return spring => {\n          let currentValue = spring.getCurrentValue()\n          // make sure trailing animations complete\n          currentValue =\n            currentValue < 0.01 ? 0 : currentValue > 0.99 ? 1 : currentValue\n\n          const updateTrailingAnimation = currentValue >= nextThreshold\n          if (updateTrailingAnimation) {\n            if (setEndValueFuncs[i + 1]) {\n              setEndValueFuncs[i + 1]!(\n                Math.max(Math.min(currentValue * normalizedSpeed, 1), 0)\n              )\n            }\n          }\n          // now call the actual update function\n          onUpdate(spring)\n        }\n      }\n      return flipped\n    })\n    .map(flipped => {\n      const spring = createSuspendedSpring(flipped)\n      if (!spring) {\n        return\n      }\n      return spring.setEndValue.bind(spring)\n    })\n    .filter(Boolean)\n\n  if (setEndValueFuncs[0]) {\n    setEndValueFuncs[0]!(1)\n  }\n}\n","import * as Rematrix from 'rematrix'\nimport { getSpringConfig } from '../../springSettings'\nimport {\n  toArray,\n  isFunction,\n  isNumber,\n  getDuplicateValsAsStrings,\n  assign,\n  tweenProp\n} from '../../utilities'\nimport * as constants from '../../constants'\nimport {\n  GetOnUpdateFunc,\n  OnUpdate,\n  Matrix,\n  InvertedChildren,\n  AnimateFlippedElementsArgs,\n  AnimatedVals,\n  FlipDataArray,\n  FlipData,\n  InitializeFlip\n} from './types'\nimport { BoundingClientRect } from '../getFlippedElementPositions/types'\nimport { FlippedIds } from '../types'\nimport { createSpring, createStaggeredSprings } from './spring'\nimport { IndexableObject } from '../../utilities/types'\nimport { FlipId } from '../../types'\n\n// 3d transforms were causing weird issues in chrome,\n// especially when opacity was also being tweened,\n// so convert to a 2d matrix\nexport const convertMatrix3dArrayTo2dArray = (matrix: Matrix): Matrix =>\n  [0, 1, 4, 5, 12, 13].map(index => matrix[index])\n\nexport const convertMatrix2dArrayToString = (matrix: Matrix) =>\n  `matrix(${matrix.join(', ')})`\n\nexport const invertTransformsForChildren = ({\n  invertedChildren,\n  matrix,\n  body\n}: {\n  matrix: Matrix\n  body: HTMLBodyElement\n  invertedChildren: InvertedChildren\n}) => {\n  invertedChildren.forEach(([child, childFlipConfig]) => {\n    if (!body.contains(child)) {\n      return\n    }\n    const scaleX = matrix[0]\n    const scaleY = matrix[3]\n    const translateX = matrix[4]\n    const translateY = matrix[5]\n\n    const inverseVals = { translateX: 0, translateY: 0, scaleX: 1, scaleY: 1 }\n    let transformString = ''\n    if (childFlipConfig.translate) {\n      inverseVals.translateX = -translateX / scaleX\n      inverseVals.translateY = -translateY / scaleY\n      transformString += `translate(${inverseVals.translateX}px, ${inverseVals.translateY}px)`\n    }\n    if (childFlipConfig.scale) {\n      inverseVals.scaleX = 1 / scaleX\n      inverseVals.scaleY = 1 / scaleY\n      transformString += ` scale(${inverseVals.scaleX}, ${inverseVals.scaleY})`\n    }\n    child.style.transform = transformString\n  })\n}\n\nexport const createApplyStylesFunc = ({\n  element,\n  invertedChildren,\n  body\n}: {\n  element: HTMLElement\n  invertedChildren: InvertedChildren\n  body: HTMLBodyElement\n}) => ({\n  matrix,\n  opacity,\n  forceMinVals\n}: {\n  matrix: Matrix\n  opacity?: number\n  forceMinVals?: boolean\n}) => {\n  if (isNumber(opacity)) {\n    element.style.opacity = opacity + ''\n  }\n\n  if (forceMinVals) {\n    element.style.minHeight = '1px'\n    element.style.minWidth = '1px'\n  }\n\n  if (!matrix) {\n    return\n  }\n\n  const stringTransform = convertMatrix2dArrayToString(matrix)\n\n  // always apply transform, even if identity,\n  // because identity might be the starting state in a FLIP\n  // transition, if the element's position is controlled by transforms\n  element.style.transform = stringTransform\n\n  if (invertedChildren) {\n    invertTransformsForChildren({\n      invertedChildren,\n      matrix,\n      body\n    })\n  }\n}\n\nexport const rectInViewport = ({\n  top,\n  bottom,\n  left,\n  right\n}: BoundingClientRect) => {\n  return (\n    top < window.innerHeight &&\n    bottom > 0 &&\n    left < window.innerWidth &&\n    right > 0\n  )\n}\n\nconst getInvertedChildren = (element: HTMLElement, id: string) =>\n  toArray(\n    element.querySelectorAll(`[${constants.DATA_INVERSE_FLIP_ID}=\"${id}\"]`)\n  )\n\nfunction extractFlipConfig(element: HTMLElement) {\n  const flipConfig = JSON.parse(element.dataset.flipConfig || '{}')\n  return flipConfig\n}\n\nexport default ({\n  flippedIds,\n  flipCallbacks,\n  inProgressAnimations,\n  flippedElementPositionsBeforeUpdate,\n  flippedElementPositionsAfterUpdate,\n  applyTransformOrigin,\n  spring,\n  getElement,\n  debug,\n  staggerConfig = {},\n  decisionData = {},\n  onComplete,\n  containerEl\n}: AnimateFlippedElementsArgs) => {\n  // the stuff below is used so we can return a promise that resolves when all FLIP animations have\n  // completed\n  let closureResolve: (flipIds: FlippedIds) => void\n\n  const flipCompletedPromise: Promise<FlippedIds> = new Promise(resolve => {\n    closureResolve = resolve\n  })\n  // hook for users of lib to attach logic when all flip animations have completed\n  if (onComplete) {\n    flipCompletedPromise.then(() => onComplete(containerEl, decisionData))\n  }\n  if (!flippedIds.length) {\n    return () => {\n      closureResolve!([])\n      return flipCompletedPromise\n    }\n  }\n\n  const completedAnimationIds: FlippedIds = []\n\n  const firstElement: HTMLElement = getElement(flippedIds[0])\n  // special handling for iframes\n  const body = firstElement\n    ? firstElement.ownerDocument!.querySelector('body')!\n    : document.querySelector('body')!\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (debug) {\n      // eslint-disable-next-line no-console\n      console.error(\n        '[react-flip-toolkit]\\nThe \"debug\" prop is set to true. All FLIP animations will return at the beginning of the transition.'\n      )\n    }\n  }\n\n  const duplicateFlipIds = getDuplicateValsAsStrings(flippedIds)\n  if (process.env.NODE_ENV !== 'production') {\n    if (duplicateFlipIds.length) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `[react-flip-toolkit]\\nThere are currently multiple elements with the same flipId on the page.\\nThe animation will only work if each Flipped component has a unique flipId.\\nDuplicate flipId${\n          duplicateFlipIds.length > 1 ? 's' : ''\n        }: ${duplicateFlipIds.join('\\n')}`\n      )\n    }\n  }\n\n  const flipDataArray: FlipDataArray = flippedIds\n\n    // take all the measurements we need\n    // and return an object with animation functions + necessary data\n    .map(id => {\n      const prevRect = flippedElementPositionsBeforeUpdate[id].rect\n      const currentRect = flippedElementPositionsAfterUpdate[id].rect\n      const prevOpacity = flippedElementPositionsBeforeUpdate[id].opacity\n      const currentOpacity = flippedElementPositionsAfterUpdate[id].opacity\n      const needsForcedMinVals = currentRect.width < 1 || currentRect.height < 1\n      const element = flippedElementPositionsAfterUpdate[id].element\n\n      // don't animate elements outside of the user's viewport\n      if (!rectInViewport(prevRect) && !rectInViewport(currentRect)) {\n        return false\n      }\n\n      // this might happen if we are rapidly adding & removing elements(?)\n      if (!element) {\n        return false\n      }\n\n      const flipConfig = extractFlipConfig(element)\n\n      const springConfig = getSpringConfig({\n        flipperSpring: spring,\n        flippedSpring: flipConfig.spring\n      })\n\n      const stagger =\n        flipConfig.stagger === true ? 'default' : flipConfig.stagger\n\n      const toReturn = {\n        element,\n        id,\n        stagger,\n        springConfig\n      }\n\n      if (flipCallbacks[id] && flipCallbacks[id].shouldFlip) {\n        const elementShouldFlip = flipCallbacks[id].shouldFlip!(\n          decisionData.previous,\n          decisionData.current\n        )\n        if (!elementShouldFlip) {\n          return false\n        }\n      }\n\n      // don't animate elements that didn't visibly change\n      // but possibly animate their children\n\n      const translateXDifference = Math.abs(prevRect.left - currentRect.left)\n      const translateYDifference = Math.abs(prevRect.top - currentRect.top)\n\n      const translateDifference = translateXDifference + translateYDifference\n\n      const scaleXDifference = Math.abs(prevRect.width - currentRect.width)\n      const scaleYDifference = Math.abs(prevRect.height - currentRect.height)\n\n      const scaleDifference = scaleXDifference + scaleYDifference\n\n      const opacityDifference = Math.abs(currentOpacity - prevOpacity)\n      const differenceTooSmall =\n        translateDifference < 0.5 &&\n        scaleDifference < 0.5 &&\n        opacityDifference < 0.01\n\n      const hiddenDueToDimensions =\n        (prevRect.height === 0 && currentRect.height === 0) ||\n        (prevRect.width === 0 && currentRect.width === 0)\n      if (hiddenDueToDimensions || differenceTooSmall) {\n        return false\n      }\n\n      const currentTransform = Rematrix.parse(\n        flippedElementPositionsAfterUpdate[id].transform\n      )\n\n      const toVals: AnimatedVals = { matrix: currentTransform }\n\n      const fromVals: AnimatedVals = { matrix: [] }\n      const transformsArray = [currentTransform]\n\n      // we're only going to animate the values that the child wants animated\n      if (flipConfig.translate) {\n        transformsArray.push(\n          Rematrix.translateX(prevRect.left - currentRect.left)\n        )\n        transformsArray.push(\n          Rematrix.translateY(prevRect.top - currentRect.top)\n        )\n      }\n      // going any smaller than 1px breaks transitions in Chrome\n      if (flipConfig.scale) {\n        transformsArray.push(\n          Rematrix.scaleX(\n            Math.max(prevRect.width, 1) / Math.max(currentRect.width, 1)\n          )\n        )\n        transformsArray.push(\n          Rematrix.scaleY(\n            Math.max(prevRect.height, 1) / Math.max(currentRect.height, 1)\n          )\n        )\n      }\n\n      if (flipConfig.opacity) {\n        fromVals.opacity = prevOpacity\n        toVals.opacity = currentOpacity\n      }\n\n      let invertedChildren: InvertedChildren = []\n\n      if (\n        !flipCallbacks[id] ||\n        !flipCallbacks[id].shouldInvert ||\n        flipCallbacks[id].shouldInvert!(\n          decisionData.previous,\n          decisionData.current\n        )\n      ) {\n        const invertedChildElements = getInvertedChildren(element, id)\n        invertedChildren = invertedChildElements.map(c => [\n          c,\n          extractFlipConfig(c)\n        ]) as InvertedChildren\n      }\n\n      fromVals.matrix = convertMatrix3dArrayTo2dArray(\n        transformsArray.reduce(Rematrix.multiply)\n      )\n\n      toVals.matrix = convertMatrix3dArrayTo2dArray(toVals.matrix)\n\n      const applyStyles = createApplyStylesFunc({\n        element,\n        invertedChildren,\n        body\n      })\n\n      let onComplete: () => void\n      if (flipCallbacks[id] && flipCallbacks[id].onComplete) {\n        // must cache or else this could cause an error\n        const cachedOnComplete = flipCallbacks[id].onComplete\n        onComplete = () => cachedOnComplete!(element, decisionData)\n      }\n\n      // this should be called when animation ends naturally\n      // but also when it is interrupted\n      // when it is called, the animation has already been cancelled\n      const onAnimationEnd = (isCancellation: boolean) => {\n        delete inProgressAnimations[id]\n        if (isFunction(onComplete)) {\n          onComplete()\n        }\n        // remove identity transform -- this should have no effect on layout\n        element.style.transform = ''\n        invertedChildren.forEach(([element]) => {\n          element.style.transform = ''\n        })\n        if (needsForcedMinVals && element) {\n          element.style.minHeight = ''\n          element.style.minWidth = ''\n        }\n        if (isCancellation) return\n\n        completedAnimationIds.push(id)\n\n        if (completedAnimationIds.length >= flipDataArray.length) {\n          // we can theoretically call multiple times since a promise only resolves 1x\n          // but that shouldnt happen\n          closureResolve(completedAnimationIds)\n        }\n      }\n\n      const animateOpacity =\n        isNumber(fromVals.opacity) &&\n        isNumber(toVals.opacity) &&\n        fromVals.opacity !== toVals.opacity\n\n      let onStartCalled = false\n\n      const getOnUpdateFunc: GetOnUpdateFunc = ({ spring, onAnimationEnd }) => {\n        inProgressAnimations[id] = {\n          destroy: spring.destroy.bind(spring),\n          onAnimationEnd\n        }\n        const onUpdate: OnUpdate = spring => {\n          if (flipCallbacks[id] && flipCallbacks[id].onSpringUpdate) {\n            flipCallbacks[id].onSpringUpdate!(spring.getCurrentValue())\n          }\n          // trigger the user provided onStart function\n          if (!onStartCalled) {\n            onStartCalled = true\n            if (flipCallbacks[id] && flipCallbacks[id].onStart) {\n              flipCallbacks[id].onStart!(element, decisionData)\n            }\n          }\n\n          const currentValue = spring.getCurrentValue()\n          if (!body.contains(element)) {\n            spring.destroy()\n            return\n          }\n\n          const vals: AnimatedVals = { matrix: [] }\n\n          vals.matrix = fromVals.matrix.map((fromVal, index) =>\n            tweenProp(fromVal, toVals.matrix[index], currentValue)\n          )\n\n          if (animateOpacity) {\n            vals.opacity = tweenProp(\n              fromVals.opacity!,\n              toVals.opacity!,\n              currentValue\n            )\n          }\n          applyStyles(vals)\n        }\n        return onUpdate\n      }\n\n      const initializeFlip: InitializeFlip = () => {\n        // before animating, immediately apply FLIP styles to prevent flicker\n        applyStyles({\n          matrix: fromVals.matrix,\n          opacity: animateOpacity ? fromVals.opacity : undefined,\n          forceMinVals: needsForcedMinVals\n        })\n\n        if (flipCallbacks[id] && flipCallbacks[id].onStartImmediate) {\n          flipCallbacks[id].onStartImmediate!(element, decisionData)\n        }\n        // and batch any other style updates if necessary\n        if (flipConfig.transformOrigin) {\n          element.style.transformOrigin = flipConfig.transformOrigin\n        } else if (applyTransformOrigin) {\n          element.style.transformOrigin = '0 0'\n        }\n\n        invertedChildren.forEach(([child, childFlipConfig]) => {\n          if (childFlipConfig.transformOrigin) {\n            child.style.transformOrigin = childFlipConfig.transformOrigin\n          } else if (applyTransformOrigin) {\n            child.style.transformOrigin = '0 0'\n          }\n        })\n      }\n\n      return assign({}, toReturn, {\n        stagger,\n        springConfig,\n        getOnUpdateFunc,\n        initializeFlip,\n        onAnimationEnd,\n        delayUntil: flipConfig.delayUntil\n      }) as FlipData\n    })\n    // filter out data for all non-animated elements first\n    .filter(Boolean) as FlipDataArray\n\n  flipDataArray.forEach(({ initializeFlip }) => initializeFlip())\n\n  if (debug) {\n    return () => {}\n  }\n\n  const elementIsFlipped = (flipId: FlipId) =>\n    flipDataArray.filter(f => f.id === flipId).length\n\n  const delayedFlip = flipDataArray.filter(\n    f => f.delayUntil && elementIsFlipped(f.delayUntil)\n  )\n\n  // key: flipId value: flip to delay until key is called\n  const delayUntilSprings = {} as IndexableObject\n  // key: flipId value: stagger to delay until key is called\n  const delayUntilStaggers = {} as IndexableObject\n  // key: stagger value: true\n  const delayedStaggerKeys = {} as IndexableObject\n\n  delayedFlip.forEach(flip => {\n    if (flip.stagger) {\n      delayedStaggerKeys[flip.stagger] = true\n      if (delayUntilStaggers[flip.delayUntil!])\n        delayUntilStaggers[flip.delayUntil!].push(flip.stagger)\n      else delayUntilStaggers[flip.delayUntil!] = [flip.stagger]\n    } else {\n      if (delayUntilSprings[flip.delayUntil!])\n        delayUntilSprings[flip.delayUntil!].push(flip)\n      else delayUntilSprings[flip.delayUntil!] = [flip]\n    }\n  })\n\n  const staggerDict = flipDataArray\n    .filter(flipData => flipData.stagger)\n    .reduce((acc, curr) => {\n      if (acc[curr.stagger]) {\n        acc[curr.stagger].push(curr)\n      } else {\n        acc[curr.stagger] = [curr]\n      }\n      return acc\n    }, {} as IndexableObject)\n\n  const immediateFlip = flipDataArray.filter(f => delayedFlip.indexOf(f) === -1)\n\n  immediateFlip.forEach(flipData => {\n    flipData.onSpringActivate = () => {\n      if (delayUntilSprings[flipData.id]) {\n        delayUntilSprings[flipData.id].forEach(createSpring)\n      }\n      if (delayUntilStaggers[flipData.id]) {\n        const uniqueStaggerKeys = Object.keys(\n          delayUntilStaggers[flipData.id].reduce(\n            (acc: IndexableObject, curr: string) =>\n              assign(acc, { [curr]: true }),\n            {}\n          )\n        )\n        uniqueStaggerKeys.forEach((staggerKey: string) => {\n          createStaggeredSprings(\n            staggerDict[staggerKey],\n            staggerConfig[staggerKey]\n          )\n        })\n      }\n    }\n  })\n\n  return () => {\n    // if there are no active FLIP animations, immediately resolve the\n    // returned promise\n    if (!flipDataArray.length) {\n      closureResolve([])\n    }\n    // animate non-staggered elements\n    immediateFlip\n      .filter(flipData => {\n        return !flipData.stagger\n      })\n      .forEach(createSpring)\n\n    // animate staggered elements\n    Object.keys(staggerDict).forEach(staggerKey => {\n      if (delayedStaggerKeys[staggerKey]) return\n      createStaggeredSprings(staggerDict[staggerKey], staggerConfig[staggerKey])\n    })\n    return flipCompletedPromise\n  }\n}\n","import { toArray, assign } from '../../utilities'\nimport * as constants from '../../constants'\nimport { BoundingClientRect } from './types'\n\nexport const addTupleToObject = <T>(\n  acc: Record<string, T>,\n  curr: [string, T]\n): Record<string, T> => assign(acc, { [curr[0]]: curr[1] })\n\nexport const getAllElements = (\n  element?: HTMLElement,\n  portalKey?: string\n): HTMLElement[] => {\n  if (portalKey) {\n    return toArray(\n      document.querySelectorAll(`[${constants.DATA_PORTAL_KEY}=\"${portalKey}\"]`)\n    )\n  } else {\n    return toArray(element!.querySelectorAll(`[${constants.DATA_FLIP_ID}]`))\n  }\n}\nexport const getRects = (\n  flippedElements: HTMLElement[]\n): [HTMLElement, BoundingClientRect][] => {\n  return flippedElements.map((child: HTMLElement): [\n    HTMLElement,\n    BoundingClientRect\n  ] => [child, child.getBoundingClientRect()])\n}\n","import animateUnflippedElements from './animateUnflippedElements'\nimport animateFlippedElements from './animateFlippedElements'\nimport getFlippedElementPositionsAfterUpdate from './getFlippedElementPositions/getFlippedElementPositionsAfterUpdate'\nimport * as constants from '../constants'\nimport { assign, toArray } from '../utilities'\nimport {\n  GetElement,\n  BaseFlipArgs,\n  OnFlipKeyUpdateArgs,\n  FlippedIds\n} from './types'\nimport { AnimateUnflippedElementsArgs } from './animateUnflippedElements/types'\nimport {\n  AnimateFlippedElementsArgs,\n  ScopedSelector\n} from './animateFlippedElements/types'\n\nconst createPortalScopedSelector = (portalKey: string) => (\n  selector: string\n) => {\n  return toArray(\n    document.querySelectorAll(\n      `[${constants.DATA_PORTAL_KEY}=\"${portalKey}\"]${selector}`\n    )\n  )\n}\nconst createFlipperScopedSelector = (containerEl: HTMLElement) => {\n  const tempFlipperId = Math.random().toFixed(5)\n  containerEl.dataset.flipperId = tempFlipperId\n\n  return (selector: string) => {\n    return toArray(\n      containerEl.querySelectorAll(\n        `[data-flipper-id=\"${tempFlipperId}\"] ${selector}`\n      )\n    )\n  }\n}\nconst createScopedSelector = ({\n  containerEl,\n  portalKey\n}: {\n  containerEl?: HTMLElement\n  portalKey?: string\n}): ScopedSelector => {\n  if (portalKey) {\n    return createPortalScopedSelector(portalKey)\n  } else if (containerEl) {\n    return createFlipperScopedSelector(containerEl)\n  } else {\n    return () => []\n  }\n}\n\nconst createGetElementFunc = (scopedSelector: ScopedSelector): GetElement => {\n  return (id: string) => {\n    return scopedSelector(`[${constants.DATA_FLIP_ID}=\"${id}\"]`)[0]\n  }\n}\n\nconst onFlipKeyUpdate = ({\n  cachedOrderedFlipIds = [],\n  inProgressAnimations = {},\n  flippedElementPositionsBeforeUpdate = {},\n  flipCallbacks = {},\n  containerEl,\n  applyTransformOrigin,\n  spring,\n  debug,\n  portalKey,\n  staggerConfig = {},\n  decisionData = {},\n  handleEnterUpdateDelete,\n  onComplete,\n  onStart\n}: OnFlipKeyUpdateArgs) => {\n  const flippedElementPositionsAfterUpdate = getFlippedElementPositionsAfterUpdate(\n    {\n      element: containerEl,\n      portalKey\n    }\n  )\n\n  const scopedSelector = createScopedSelector({\n    containerEl,\n    portalKey\n  })\n  const getElement = createGetElementFunc(scopedSelector)\n\n  const isFlipped = (id: string) =>\n    flippedElementPositionsBeforeUpdate[id] &&\n    flippedElementPositionsAfterUpdate[id]\n\n  const unflippedIds = Object.keys(flippedElementPositionsBeforeUpdate)\n    .concat(Object.keys(flippedElementPositionsAfterUpdate))\n    .filter(id => !isFlipped(id))\n\n  const baseArgs: BaseFlipArgs = {\n    flipCallbacks,\n    getElement,\n    flippedElementPositionsBeforeUpdate,\n    flippedElementPositionsAfterUpdate,\n    inProgressAnimations,\n    decisionData\n  }\n\n  const animateUnFlippedElementsArgs = assign({}, baseArgs, {\n    unflippedIds\n  }) as AnimateUnflippedElementsArgs\n\n  const {\n    hideEnteringElements,\n    animateEnteringElements,\n    animateExitingElements\n  } = animateUnflippedElements(animateUnFlippedElementsArgs)\n\n  const flippedIds: FlippedIds = cachedOrderedFlipIds.filter(isFlipped)\n  // @ts-ignore\n  const animateFlippedElementsArgs: AnimateFlippedElementsArgs = assign(\n    {},\n    baseArgs,\n    {\n      containerEl,\n      flippedIds,\n      applyTransformOrigin,\n      spring,\n      debug,\n      staggerConfig,\n      scopedSelector,\n      onComplete\n    }\n  )\n  if (onStart) onStart(containerEl, decisionData)\n\n  // the function handles putting flipped elements back in their original positions\n  // and returns another function to actually call the flip animation\n  const flip = animateFlippedElements(animateFlippedElementsArgs)\n\n  if (handleEnterUpdateDelete) {\n    handleEnterUpdateDelete({\n      hideEnteringElements,\n      animateEnteringElements,\n      animateExitingElements,\n      animateFlippedElements: flip\n    })\n  } else {\n    hideEnteringElements()\n    animateExitingElements().then(animateEnteringElements)\n    flip()\n  }\n}\n\nexport default onFlipKeyUpdate\n","import { addTupleToObject, getRects, getAllElements } from '../utilities'\nimport {\n  FlippedElementPositionsAfterUpdate,\n  FlippedElementPositionDatumAfterUpdate\n} from './types'\n\nconst getFlippedElementPositionsAfterUpdate = ({\n  element,\n  portalKey\n}: {\n  element: HTMLElement\n  portalKey?: string\n}): FlippedElementPositionsAfterUpdate => {\n  const positionArray = getRects(getAllElements(element, portalKey)).map(\n    ([child, childBCR]) => {\n      const computedStyle = window.getComputedStyle(child)\n      return [\n        child.dataset.flipId,\n        {\n          element: child,\n          rect: childBCR,\n          opacity: parseFloat(computedStyle.opacity!),\n          transform: computedStyle.transform\n        }\n      ]\n    }\n  ) as [string, FlippedElementPositionDatumAfterUpdate][]\n\n  return positionArray.reduce(addTupleToObject, {})\n}\n\nexport default getFlippedElementPositionsAfterUpdate\n","import { AnimateUnflippedElementsArgs, FragmentTuple } from './types'\n\nconst animateUnflippedElements = ({\n  unflippedIds,\n  flipCallbacks,\n  getElement,\n  flippedElementPositionsBeforeUpdate,\n  flippedElementPositionsAfterUpdate,\n  inProgressAnimations,\n  decisionData\n}: AnimateUnflippedElementsArgs) => {\n  const enteringElementIds = unflippedIds.filter(\n    id => flippedElementPositionsAfterUpdate[id]\n  )\n  const animatedEnteringElementIds = enteringElementIds.filter(\n    id => flipCallbacks[id] && flipCallbacks[id].onAppear\n  )\n\n  const animatedExitingElementIds = unflippedIds.filter(\n    id =>\n      flippedElementPositionsBeforeUpdate[id] &&\n      flipCallbacks[id] &&\n      flipCallbacks[id].onExit\n  )\n\n  const hideEnteringElements = () => {\n    animatedEnteringElementIds.forEach(id => {\n      const element = getElement(id)\n      if (element) {\n        element.style.opacity = '0'\n      }\n    })\n  }\n\n  const animateEnteringElements = () => {\n    animatedEnteringElementIds.forEach((id, i) => {\n      const element = getElement(id)\n      if (element) {\n        flipCallbacks[id].onAppear!(element, i, decisionData)\n      }\n    })\n  }\n\n  let closureResolve: () => void\n\n  const promiseToReturn: Promise<void> = new Promise(resolve => {\n    closureResolve = resolve\n  })\n\n  const fragmentTuples: FragmentTuple[] = []\n  let exitingElementCount = 0\n\n  const onExitCallbacks = animatedExitingElementIds.map((id, i) => {\n    const {\n      domDataForExitAnimations: {\n        element,\n        parent,\n        childPosition: { top, left, width, height }\n      }\n    } = flippedElementPositionsBeforeUpdate[id]\n    // insert back into dom\n    if (getComputedStyle(parent).position === 'static') {\n      parent.style.position = 'relative'\n    }\n    element.style.transform = 'matrix(1, 0, 0, 1, 0, 0)'\n    element.style.position = 'absolute'\n    element.style.top = top + 'px'\n    element.style.left = left + 'px'\n    // taken out of the dom flow, the element might have lost these dimensions\n    element.style.height = height + 'px'\n    element.style.width = width + 'px'\n    let fragmentTuple: FragmentTuple | undefined = fragmentTuples.filter(\n      t => t[0] === parent\n    )[0]\n    if (!fragmentTuple) {\n      fragmentTuple = [parent, document.createDocumentFragment()]\n      fragmentTuples.push(fragmentTuple)\n    }\n    fragmentTuple[1].appendChild(element)\n\n    exitingElementCount += 1\n\n    const stop = () => {\n      try {\n        parent.removeChild(element)\n      } catch (DOMException) {\n        // the element is already gone\n      } finally {\n        exitingElementCount -= 1\n        if (exitingElementCount === 0) {\n          closureResolve()\n        }\n      }\n    }\n    // @ts-ignore\n    inProgressAnimations[id] = { stop }\n    return () => flipCallbacks[id].onExit!(element, i, stop, decisionData)\n  })\n\n  // now append all the fragments from the onExit callbacks\n  // (we use fragments for performance)\n  fragmentTuples.forEach(t => {\n    t[0].appendChild(t[1])\n  })\n\n  if (!onExitCallbacks.length) {\n    closureResolve!()\n  }\n\n  const animateExitingElements = () => {\n    onExitCallbacks.forEach(c => c())\n    return promiseToReturn\n  }\n\n  return {\n    hideEnteringElements,\n    animateEnteringElements,\n    animateExitingElements\n  }\n}\n\nexport default animateUnflippedElements\n","import { addTupleToObject, getAllElements, getRects } from '../utilities'\nimport * as constants from '../../../constants'\nimport { toArray, assign } from '../../../utilities'\nimport {\n  FlippedElementPositionsBeforeUpdateReturnVals,\n  FlippedElementPositionDatumBeforeUpdate,\n  GetFlippedElementPositionsBeforeUpdateArgs,\n  ParentBCRs,\n  ChildIdsToParentBCRs,\n  ChildIdsToParents\n} from './types'\nimport { InProgressAnimations } from '../../../types'\n\nexport const cancelInProgressAnimations = (\n  inProgressAnimations: InProgressAnimations,\n  animatingElements: HTMLElement[]\n) => {\n  Object.keys(inProgressAnimations).forEach(id => {\n    if (inProgressAnimations[id].destroy) {\n      inProgressAnimations[id].destroy!()\n    }\n    if (inProgressAnimations[id].onAnimationEnd) {\n      inProgressAnimations[id].onAnimationEnd!(true)\n    }\n    delete inProgressAnimations[id]\n  })\n  animatingElements.forEach(el => {\n    el.style.transform = ''\n    el.style.opacity = ''\n  })\n}\n\nconst getFlippedElementPositionsBeforeUpdate = ({\n  element,\n  flipCallbacks = {},\n  inProgressAnimations = {},\n  portalKey\n}: GetFlippedElementPositionsBeforeUpdateArgs): FlippedElementPositionsBeforeUpdateReturnVals => {\n  const flippedElements = getAllElements(element, portalKey)\n\n  const inverseFlippedElements = toArray(\n    element.querySelectorAll(`[${constants.DATA_INVERSE_FLIP_ID}]`)\n  )\n\n  const childIdsToParentBCRs: ChildIdsToParentBCRs = {}\n  const parentBCRs: ParentBCRs = []\n  const childIdsToParents: ChildIdsToParents = {}\n  // this is for exit animations so we can re-insert exiting elements in the\n  // DOM later\n  flippedElements\n    .filter(\n      el =>\n        flipCallbacks &&\n        flipCallbacks[el.dataset.flipId!] &&\n        flipCallbacks[el.dataset.flipId!].onExit\n    )\n    .forEach(el => {\n      let parent = el.parentNode as HTMLElement\n      // this won't work for IE11\n      if (el.closest) {\n        const exitContainer = el.closest(\n          `[${constants.DATA_EXIT_CONTAINER}]`\n        ) as HTMLElement\n        if (exitContainer) {\n          parent = exitContainer\n        }\n      }\n      let bcrIndex = parentBCRs.findIndex(n => n[0] === parent)\n      if (bcrIndex === -1) {\n        parentBCRs.push([parent, parent.getBoundingClientRect()])\n        bcrIndex = parentBCRs.length - 1\n      }\n      childIdsToParentBCRs[el.dataset.flipId!] = parentBCRs[bcrIndex][1]\n      childIdsToParents[el.dataset.flipId!] = parent\n    })\n\n  const filteredFlippedElements = getRects(flippedElements)\n\n  const flippedElementPositionsTupleArray: [\n    string,\n    FlippedElementPositionDatumBeforeUpdate\n  ][] = filteredFlippedElements.map(([child, childBCR]) => {\n    const domDataForExitAnimations = {}\n\n    // only cache extra data for exit animations\n    // if the element has an onExit listener\n    if (\n      flipCallbacks &&\n      flipCallbacks[child.dataset.flipId!] &&\n      flipCallbacks[child.dataset.flipId!].onExit\n    ) {\n      const parentBCR = childIdsToParentBCRs[child.dataset.flipId!]\n\n      assign(domDataForExitAnimations, {\n        element: child,\n        parent: childIdsToParents[child.dataset.flipId!],\n        childPosition: {\n          top: childBCR.top - parentBCR.top,\n          left: childBCR.left - parentBCR.left,\n          width: childBCR.width,\n          height: childBCR.height\n        }\n      })\n    }\n\n    return [\n      child.dataset.flipId!,\n      {\n        rect: childBCR,\n        opacity: parseFloat(window.getComputedStyle(child).opacity || '1'),\n        domDataForExitAnimations\n      }\n    ]\n  }) as [string, FlippedElementPositionDatumBeforeUpdate][]\n\n  const flippedElementPositions = flippedElementPositionsTupleArray.reduce(\n    addTupleToObject,\n    {}\n  )\n\n  // do this at the very end since we want to cache positions of elements\n  // while they are mid-transition\n  cancelInProgressAnimations(\n    inProgressAnimations,\n    flippedElements.concat(inverseFlippedElements)\n  )\n\n  return {\n    flippedElementPositions,\n    cachedOrderedFlipIds: filteredFlippedElements.map(\n      ([el]) => el.dataset.flipId!\n    )\n  }\n}\n\nexport default getFlippedElementPositionsBeforeUpdate\n","import onFlipKeyUpdate from './flip'\nimport getFlippedElementPositionsBeforeUpdate from './flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate'\nimport { assign } from './utilities'\nimport {\n  StaggerConfig,\n  HandleEnterUpdateDelete,\n  InProgressAnimations,\n  FlipCallbacks,\n  OnFlipperComplete,\n  FlippedProps,\n  OnFlipperStart\n} from './types'\nimport { SpringOption } from './springSettings/types'\nimport { FlippedElementPositionsBeforeUpdate } from './flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate/types'\nimport { FlippedIds } from './flip/types'\n\ninterface Options {\n  element: HTMLElement\n  staggerConfig?: StaggerConfig\n  spring?: SpringOption\n  applyTransformOrigin?: boolean\n  handleEnterUpdateDelete?: HandleEnterUpdateDelete\n  debug?: boolean\n  onComplete?: OnFlipperComplete\n}\n\nclass Flipper {\n  private element!: HTMLElement\n  private staggerConfig!: StaggerConfig\n  private applyTransformOrigin = true\n  private handleEnterUpdateDelete!: HandleEnterUpdateDelete\n  private debug?: boolean\n  private spring!: SpringOption\n  private inProgressAnimations: InProgressAnimations\n  private flipCallbacks: FlipCallbacks\n  private snapshot!: {\n    flippedElementPositions: FlippedElementPositionsBeforeUpdate\n    cachedOrderedFlipIds: FlippedIds\n  }\n  private onComplete?: OnFlipperComplete\n  private onStart?: OnFlipperStart\n\n  constructor(options: Options) {\n    assign(this, options)\n\n    this.inProgressAnimations = {}\n    this.flipCallbacks = {}\n\n    this.recordBeforeUpdate = this.recordBeforeUpdate.bind(this)\n    this.update = this.update.bind(this)\n    this.addFlipped = this.addFlipped.bind(this)\n    this.addInverted = this.addInverted.bind(this)\n  }\n\n  recordBeforeUpdate() {\n    this.snapshot = getFlippedElementPositionsBeforeUpdate({\n      element: this.element,\n      flipCallbacks: this.flipCallbacks,\n      inProgressAnimations: this.inProgressAnimations\n    })\n  }\n  update(prevDecisionData: any, currentDecisionData: any) {\n    if (this.snapshot) {\n      onFlipKeyUpdate({\n        flippedElementPositionsBeforeUpdate: this.snapshot\n          .flippedElementPositions,\n        cachedOrderedFlipIds: this.snapshot.cachedOrderedFlipIds,\n        containerEl: this.element,\n        inProgressAnimations: this.inProgressAnimations,\n        flipCallbacks: this.flipCallbacks,\n        applyTransformOrigin: this.applyTransformOrigin,\n        spring: this.spring,\n        debug: this.debug,\n        staggerConfig: this.staggerConfig,\n        handleEnterUpdateDelete: this.handleEnterUpdateDelete,\n        decisionData: {\n          previous: prevDecisionData,\n          current: currentDecisionData\n        },\n        onComplete: this.onComplete,\n        onStart: this.onStart\n      })\n      delete this.snapshot\n    }\n  }\n\n  addFlipped({\n    element,\n    flipId,\n    opacity,\n    translate,\n    scale,\n    transformOrigin,\n    spring,\n    stagger,\n    delayUntil,\n    onAppear,\n    onStart,\n    onSpringUpdate,\n    onComplete,\n    onExit,\n    shouldFlip,\n    shouldInvert\n  }: FlippedProps & { element: HTMLElement }) {\n    if (!element) {\n      throw new Error('no element provided')\n    }\n    if (!flipId) {\n      throw new Error('No flipId provided')\n    }\n    const flipConfig = {\n      scale,\n      translate,\n      opacity,\n      transformOrigin,\n      spring,\n      stagger,\n      delayUntil\n    }\n    if (!flipConfig.scale && !flipConfig.translate && !flipConfig.opacity) {\n      assign(flipConfig, {\n        translate: true,\n        scale: true,\n        opacity: true\n      })\n    }\n    if (flipId) {\n      element.dataset.flipId = String(flipId)\n    }\n    element.dataset.flipConfig = JSON.stringify(flipConfig)\n    // finally, add callbacks\n    this.flipCallbacks[flipId] = {\n      shouldFlip,\n      shouldInvert,\n      onAppear,\n      onStart,\n      onSpringUpdate,\n      onComplete,\n      onExit\n    }\n  }\n\n  addInverted({\n    element,\n    parent,\n    opacity,\n    translate,\n    scale,\n    transformOrigin\n  }: {\n    element: HTMLElement\n    parent: HTMLElement\n    opacity: boolean\n    translate: boolean\n    scale: boolean\n    transformOrigin: string\n  }) {\n    if (!element) {\n      throw new Error('no element provided')\n    }\n    if (!parent) {\n      throw new Error('parent must be provided')\n    }\n\n    const inverseFlipId = parent.dataset.flipId\n    const flipConfig = {\n      scale,\n      translate,\n      opacity,\n      transformOrigin\n    }\n    if (!flipConfig.scale && !flipConfig.translate && !flipConfig.opacity) {\n      assign(flipConfig, {\n        translate: true,\n        scale: true,\n        opacity: true\n      })\n    }\n    element.dataset.inverseFlipId = inverseFlipId\n    element.dataset.flipConfig = JSON.stringify(flipConfig)\n  }\n}\n\nexport default Flipper\n","// this is exclusively for users of the library to create their own enter + exit animations\nimport { SpringSystem } from '../forked-rebound'\nimport { SpringSystemInterface } from '../forked-rebound/types.d'\nimport { tweenProp, assign } from '../utilities'\nimport { normalizeSpring, springPresets } from '../springSettings'\nimport { SimpleSpringOptions } from './types'\nimport { SpringConfig } from '../springSettings/types'\n\n// this should get created only 1x\nconst springSystem: SpringSystemInterface = new SpringSystem()\n\n/**\n * A simple spring function for animating DOM properties.\n * Returns a function that will immediately cancel the in-progress animation.\n * */\nconst createSimpleSpring = ({\n  config,\n  values,\n  onUpdate,\n  delay = 0,\n  onComplete\n}: SimpleSpringOptions) => {\n  const { stiffness, damping, overshootClamping } = assign(\n    {},\n    springPresets.noWobble,\n    normalizeSpring(config)\n  ) as SpringConfig\n  const spring = springSystem.createSpring(stiffness!, damping!)\n  spring.setOvershootClampingEnabled(!!overshootClamping)\n  spring.addListener({\n    onSpringAtRest: spring => {\n      if (onComplete) onComplete()\n      spring.destroy()\n    },\n    onSpringUpdate: spring => {\n      const springVal = spring.getCurrentValue()\n      if (!values) return onUpdate(springVal)\n      const currentValues = Object.keys(values)\n        .map(value => [\n          value,\n          tweenProp(values[value][0], values[value][1], springVal)\n        ])\n        .reduce((acc, curr) => {\n          return Object.assign(acc, { [curr[0]]: curr[1] })\n        }, {})\n      onUpdate(currentValues)\n    }\n  })\n  if (delay) {\n    setTimeout(() => {\n      spring.setEndValue(1)\n    }, delay)\n  } else {\n    spring.setEndValue(1)\n  }\n  return spring\n}\n\nexport default createSimpleSpring\n"]},"metadata":{},"sourceType":"module"}