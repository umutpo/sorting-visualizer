{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as strings from '../../../base/common/strings.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { SimpleKeybinding, createKeybinding } from '../../../base/common/keybindings.js';\nimport { ImmortalReference, toDisposable, DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { isCodeEditor } from '../../browser/editorBrowser.js';\nimport { ResourceTextEdit } from '../../browser/services/bulkEditService.js';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/commonEditorConfig.js';\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Position as Pos } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { IModelService } from '../../common/services/modelService.js';\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { Configuration, ConfigurationModel, DefaultConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels.js';\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService.js';\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver.js';\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem.js';\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\nimport { NoOpNotification } from '../../../platform/notification/common/notification.js';\nimport { WorkspaceFolder } from '../../../platform/workspace/common/workspace.js';\nimport { SimpleServicesNLS } from '../../common/standaloneStrings.js';\nexport class SimpleModel {\n  constructor(model) {\n    this.disposed = false;\n    this.model = model;\n    this._onWillDispose = new Emitter();\n  }\n\n  get textEditorModel() {\n    return this.model;\n  }\n\n  dispose() {\n    this.disposed = true;\n\n    this._onWillDispose.fire();\n  }\n\n}\n\nfunction withTypedEditor(widget, codeEditorCallback, diffEditorCallback) {\n  if (isCodeEditor(widget)) {\n    // Single Editor\n    return codeEditorCallback(widget);\n  } else {\n    // Diff Editor\n    return diffEditorCallback(widget);\n  }\n}\n\nlet SimpleEditorModelResolverService = class SimpleEditorModelResolverService {\n  constructor(modelService) {\n    this.modelService = modelService;\n  }\n\n  setEditor(editor) {\n    this.editor = editor;\n  }\n\n  createModelReference(resource) {\n    let model = null;\n\n    if (this.editor) {\n      model = withTypedEditor(this.editor, editor => this.findModel(editor, resource), diffEditor => this.findModel(diffEditor.getOriginalEditor(), resource) || this.findModel(diffEditor.getModifiedEditor(), resource));\n    }\n\n    if (!model) {\n      return Promise.reject(new Error(`Model not found`));\n    }\n\n    return Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n  }\n\n  findModel(editor, resource) {\n    let model = this.modelService.getModel(resource);\n\n    if (model && model.uri.toString() !== resource.toString()) {\n      return null;\n    }\n\n    return model;\n  }\n\n};\nSimpleEditorModelResolverService = __decorate([__param(0, IModelService)], SimpleEditorModelResolverService);\nexport { SimpleEditorModelResolverService };\nexport class SimpleEditorProgressService {\n  show() {\n    return SimpleEditorProgressService.NULL_PROGRESS_RUNNER;\n  }\n\n  showWhile(promise, delay) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield promise;\n    });\n  }\n\n}\nSimpleEditorProgressService.NULL_PROGRESS_RUNNER = {\n  done: () => {},\n  total: () => {},\n  worked: () => {}\n};\nexport class SimpleDialogService {\n  confirm(confirmation) {\n    return this.doConfirm(confirmation).then(confirmed => {\n      return {\n        confirmed,\n        checkboxChecked: false // unsupported\n\n      };\n    });\n  }\n\n  doConfirm(confirmation) {\n    let messageText = confirmation.message;\n\n    if (confirmation.detail) {\n      messageText = messageText + '\\n\\n' + confirmation.detail;\n    }\n\n    return Promise.resolve(window.confirm(messageText));\n  }\n\n  show(severity, message, buttons, options) {\n    return Promise.resolve({\n      choice: 0\n    });\n  }\n\n}\nexport class SimpleNotificationService {\n  info(message) {\n    return this.notify({\n      severity: Severity.Info,\n      message\n    });\n  }\n\n  warn(message) {\n    return this.notify({\n      severity: Severity.Warning,\n      message\n    });\n  }\n\n  error(error) {\n    return this.notify({\n      severity: Severity.Error,\n      message: error\n    });\n  }\n\n  notify(notification) {\n    switch (notification.severity) {\n      case Severity.Error:\n        console.error(notification.message);\n        break;\n\n      case Severity.Warning:\n        console.warn(notification.message);\n        break;\n\n      default:\n        console.log(notification.message);\n        break;\n    }\n\n    return SimpleNotificationService.NO_OP;\n  }\n\n  status(message, options) {\n    return Disposable.None;\n  }\n\n}\nSimpleNotificationService.NO_OP = new NoOpNotification();\nexport class StandaloneCommandService {\n  constructor(instantiationService) {\n    this._onWillExecuteCommand = new Emitter();\n    this._onDidExecuteCommand = new Emitter();\n    this.onDidExecuteCommand = this._onDidExecuteCommand.event;\n    this._instantiationService = instantiationService;\n  }\n\n  executeCommand(id) {\n    const command = CommandsRegistry.getCommand(id);\n\n    if (!command) {\n      return Promise.reject(new Error(`command '${id}' not found`));\n    }\n\n    try {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      this._onWillExecuteCommand.fire({\n        commandId: id,\n        args\n      });\n\n      const result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]);\n\n      this._onDidExecuteCommand.fire({\n        commandId: id,\n        args\n      });\n\n      return Promise.resolve(result);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n}\nexport class StandaloneKeybindingService extends AbstractKeybindingService {\n  constructor(contextKeyService, commandService, telemetryService, notificationService, logService, domNode) {\n    super(contextKeyService, commandService, telemetryService, notificationService, logService);\n    this._cachedResolver = null;\n    this._dynamicKeybindings = []; // for standard keybindings\n\n    this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, e => {\n      const keyEvent = new StandardKeyboardEvent(e);\n\n      const shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n\n      if (shouldPreventDefault) {\n        keyEvent.preventDefault();\n        keyEvent.stopPropagation();\n      }\n    })); // for single modifier chord keybindings (e.g. shift shift)\n\n\n    this._register(dom.addDisposableListener(window, dom.EventType.KEY_UP, e => {\n      const keyEvent = new StandardKeyboardEvent(e);\n\n      const shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n\n      if (shouldPreventDefault) {\n        keyEvent.preventDefault();\n      }\n    }));\n  }\n\n  addDynamicKeybinding(commandId, _keybinding, handler, when) {\n    const keybinding = createKeybinding(_keybinding, OS);\n    const toDispose = new DisposableStore();\n\n    if (keybinding) {\n      this._dynamicKeybindings.push({\n        keybinding: keybinding.parts,\n        command: commandId,\n        when: when,\n        weight1: 1000,\n        weight2: 0,\n        extensionId: null,\n        isBuiltinExtension: false\n      });\n\n      toDispose.add(toDisposable(() => {\n        for (let i = 0; i < this._dynamicKeybindings.length; i++) {\n          let kb = this._dynamicKeybindings[i];\n\n          if (kb.command === commandId) {\n            this._dynamicKeybindings.splice(i, 1);\n\n            this.updateResolver({\n              source: 1\n              /* Default */\n\n            });\n            return;\n          }\n        }\n      }));\n    }\n\n    toDispose.add(CommandsRegistry.registerCommand(commandId, handler));\n    this.updateResolver({\n      source: 1\n      /* Default */\n\n    });\n    return toDispose;\n  }\n\n  updateResolver(event) {\n    this._cachedResolver = null;\n\n    this._onDidUpdateKeybindings.fire(event);\n  }\n\n  _getResolver() {\n    if (!this._cachedResolver) {\n      const defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n\n      const overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n\n      this._cachedResolver = new KeybindingResolver(defaults, overrides, str => this._log(str));\n    }\n\n    return this._cachedResolver;\n  }\n\n  _documentHasFocus() {\n    return document.hasFocus();\n  }\n\n  _toNormalizedKeybindingItems(items, isDefault) {\n    let result = [],\n        resultLen = 0;\n\n    for (const item of items) {\n      const when = item.when || undefined;\n      const keybinding = item.keybinding;\n\n      if (!keybinding) {\n        // This might be a removal keybinding item in user settings => accept it\n        result[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n      } else {\n        const resolvedKeybindings = USLayoutResolvedKeybinding.resolveUserBinding(keybinding, OS);\n\n        for (const resolvedKeybinding of resolvedKeybindings) {\n          result[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  resolveKeyboardEvent(keyboardEvent) {\n    let keybinding = new SimpleKeybinding(keyboardEvent.ctrlKey, keyboardEvent.shiftKey, keyboardEvent.altKey, keyboardEvent.metaKey, keyboardEvent.keyCode).toChord();\n    return new USLayoutResolvedKeybinding(keybinding, OS);\n  }\n\n}\n\nfunction isConfigurationOverrides(thing) {\n  return thing && typeof thing === 'object' && (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string') && (!thing.resource || thing.resource instanceof URI);\n}\n\nexport class SimpleConfigurationService {\n  constructor() {\n    this._onDidChangeConfiguration = new Emitter();\n    this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n    this._configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n  }\n\n  getValue(arg1, arg2) {\n    const section = typeof arg1 === 'string' ? arg1 : undefined;\n    const overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n    return this._configuration.getValue(section, overrides, undefined);\n  }\n\n  updateValues(values) {\n    const previous = {\n      data: this._configuration.toData()\n    };\n    let changedKeys = [];\n\n    for (const entry of values) {\n      const [key, value] = entry;\n\n      if (this.getValue(key) === value) {\n        continue;\n      }\n\n      this._configuration.updateValue(key, value);\n\n      changedKeys.push(key);\n    }\n\n    if (changedKeys.length > 0) {\n      const configurationChangeEvent = new ConfigurationChangeEvent({\n        keys: changedKeys,\n        overrides: []\n      }, previous, this._configuration);\n      configurationChangeEvent.source = 7\n      /* MEMORY */\n      ;\n      configurationChangeEvent.sourceConfig = null;\n\n      this._onDidChangeConfiguration.fire(configurationChangeEvent);\n    }\n\n    return Promise.resolve();\n  }\n\n}\nexport class SimpleResourceConfigurationService {\n  constructor(configurationService) {\n    this.configurationService = configurationService;\n    this._onDidChangeConfiguration = new Emitter();\n    this.configurationService.onDidChangeConfiguration(e => {\n      this._onDidChangeConfiguration.fire({\n        affectedKeys: e.affectedKeys,\n        affectsConfiguration: (resource, configuration) => e.affectsConfiguration(configuration)\n      });\n    });\n  }\n\n  getValue(resource, arg2, arg3) {\n    const position = Pos.isIPosition(arg2) ? arg2 : null;\n    const section = position ? typeof arg3 === 'string' ? arg3 : undefined : typeof arg2 === 'string' ? arg2 : undefined;\n\n    if (typeof section === 'undefined') {\n      return this.configurationService.getValue();\n    }\n\n    return this.configurationService.getValue(section);\n  }\n\n}\nlet SimpleResourcePropertiesService = class SimpleResourcePropertiesService {\n  constructor(configurationService) {\n    this.configurationService = configurationService;\n  }\n\n  getEOL(resource, language) {\n    const eol = this.configurationService.getValue('files.eol', {\n      overrideIdentifier: language,\n      resource\n    });\n\n    if (eol && typeof eol === 'string' && eol !== 'auto') {\n      return eol;\n    }\n\n    return isLinux || isMacintosh ? '\\n' : '\\r\\n';\n  }\n\n};\nSimpleResourcePropertiesService = __decorate([__param(0, IConfigurationService)], SimpleResourcePropertiesService);\nexport { SimpleResourcePropertiesService };\nexport class StandaloneTelemetryService {\n  publicLog(eventName, data) {\n    return Promise.resolve(undefined);\n  }\n\n  publicLog2(eventName, data) {\n    return this.publicLog(eventName, data);\n  }\n\n}\nexport class SimpleWorkspaceContextService {\n  constructor() {\n    const resource = URI.from({\n      scheme: SimpleWorkspaceContextService.SCHEME,\n      authority: 'model',\n      path: '/'\n    });\n    this.workspace = {\n      id: '4064f6ec-cb38-4ad0-af64-ee6467e63c82',\n      folders: [new WorkspaceFolder({\n        uri: resource,\n        name: '',\n        index: 0\n      })]\n    };\n  }\n\n  getWorkspace() {\n    return this.workspace;\n  }\n\n}\nSimpleWorkspaceContextService.SCHEME = 'inmemory';\nexport function updateConfigurationService(configurationService, source, isDiffEditor) {\n  if (!source) {\n    return;\n  }\n\n  if (!(configurationService instanceof SimpleConfigurationService)) {\n    return;\n  }\n\n  let toUpdate = [];\n  Object.keys(source).forEach(key => {\n    if (isEditorConfigurationKey(key)) {\n      toUpdate.push([`editor.${key}`, source[key]]);\n    }\n\n    if (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n      toUpdate.push([`diffEditor.${key}`, source[key]]);\n    }\n  });\n\n  if (toUpdate.length > 0) {\n    configurationService.updateValues(toUpdate);\n  }\n}\nexport class SimpleBulkEditService {\n  constructor(_modelService) {\n    this._modelService = _modelService; //\n  }\n\n  hasPreviewHandler() {\n    return false;\n  }\n\n  apply(edits, _options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const textEdits = new Map();\n\n      for (let edit of edits) {\n        if (!(edit instanceof ResourceTextEdit)) {\n          throw new Error('bad edit - only text edits are supported');\n        }\n\n        const model = this._modelService.getModel(edit.resource);\n\n        if (!model) {\n          throw new Error('bad edit - model not found');\n        }\n\n        if (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n          throw new Error('bad state - model changed in the meantime');\n        }\n\n        let array = textEdits.get(model);\n\n        if (!array) {\n          array = [];\n          textEdits.set(model, array);\n        }\n\n        array.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n      }\n\n      let totalEdits = 0;\n      let totalFiles = 0;\n\n      for (const [model, edits] of textEdits) {\n        model.pushStackElement();\n        model.pushEditOperations([], edits, () => []);\n        model.pushStackElement();\n        totalFiles += 1;\n        totalEdits += edits.length;\n      }\n\n      return {\n        ariaSummary: strings.format(SimpleServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles)\n      };\n    });\n  }\n\n}\nexport class SimpleUriLabelService {\n  getUriLabel(resource, options) {\n    if (resource.scheme === 'file') {\n      return resource.fsPath;\n    }\n\n    return resource.path;\n  }\n\n}\nexport class SimpleLayoutService {\n  constructor(_codeEditorService, _container) {\n    this._codeEditorService = _codeEditorService;\n    this._container = _container;\n    this.onDidLayout = Event.None;\n  }\n\n  get dimension() {\n    if (!this._dimension) {\n      this._dimension = dom.getClientArea(window.document.body);\n    }\n\n    return this._dimension;\n  }\n\n  get container() {\n    return this._container;\n  }\n\n  focus() {\n    var _a;\n\n    (_a = this._codeEditorService.getFocusedCodeEditor()) === null || _a === void 0 ? void 0 : _a.focus();\n  }\n\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/editor/standalone/browser/simpleServices.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","strings","dom","StandardKeyboardEvent","Emitter","Event","SimpleKeybinding","createKeybinding","ImmortalReference","toDisposable","DisposableStore","Disposable","OS","isLinux","isMacintosh","Severity","URI","isCodeEditor","ResourceTextEdit","isDiffEditorConfigurationKey","isEditorConfigurationKey","EditOperation","Position","Pos","Range","IModelService","CommandsRegistry","IConfigurationService","Configuration","ConfigurationModel","DefaultConfigurationModel","ConfigurationChangeEvent","AbstractKeybindingService","KeybindingResolver","KeybindingsRegistry","ResolvedKeybindingItem","USLayoutResolvedKeybinding","NoOpNotification","WorkspaceFolder","SimpleServicesNLS","SimpleModel","constructor","model","disposed","_onWillDispose","textEditorModel","dispose","fire","withTypedEditor","widget","codeEditorCallback","diffEditorCallback","SimpleEditorModelResolverService","modelService","setEditor","editor","createModelReference","resource","findModel","diffEditor","getOriginalEditor","getModifiedEditor","Error","getModel","uri","toString","SimpleEditorProgressService","show","NULL_PROGRESS_RUNNER","showWhile","promise","delay","total","worked","SimpleDialogService","confirm","confirmation","doConfirm","confirmed","checkboxChecked","messageText","message","detail","window","severity","buttons","options","choice","SimpleNotificationService","info","notify","Info","warn","Warning","error","notification","console","log","NO_OP","status","None","StandaloneCommandService","instantiationService","_onWillExecuteCommand","_onDidExecuteCommand","onDidExecuteCommand","event","_instantiationService","executeCommand","id","command","getCommand","args","commandId","invokeFunction","handler","err","StandaloneKeybindingService","contextKeyService","commandService","telemetryService","notificationService","logService","domNode","_cachedResolver","_dynamicKeybindings","_register","addDisposableListener","EventType","KEY_DOWN","keyEvent","shouldPreventDefault","_dispatch","preventDefault","stopPropagation","KEY_UP","_singleModifierDispatch","addDynamicKeybinding","_keybinding","when","keybinding","toDispose","push","parts","weight1","weight2","extensionId","isBuiltinExtension","add","kb","splice","updateResolver","source","registerCommand","_onDidUpdateKeybindings","_getResolver","defaults","_toNormalizedKeybindingItems","getDefaultKeybindings","overrides","str","_log","_documentHasFocus","document","hasFocus","items","isDefault","resultLen","item","undefined","commandArgs","resolvedKeybindings","resolveUserBinding","resolvedKeybinding","resolveKeyboardEvent","keyboardEvent","ctrlKey","shiftKey","altKey","metaKey","keyCode","toChord","isConfigurationOverrides","thing","overrideIdentifier","SimpleConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","_configuration","getValue","arg1","arg2","section","updateValues","values","previous","data","toData","changedKeys","entry","updateValue","configurationChangeEvent","keys","sourceConfig","SimpleResourceConfigurationService","configurationService","affectedKeys","affectsConfiguration","configuration","arg3","position","isIPosition","SimpleResourcePropertiesService","getEOL","language","eol","StandaloneTelemetryService","publicLog","eventName","publicLog2","SimpleWorkspaceContextService","from","scheme","SCHEME","authority","path","workspace","folders","name","index","getWorkspace","updateConfigurationService","isDiffEditor","toUpdate","forEach","SimpleBulkEditService","_modelService","hasPreviewHandler","edits","_options","textEdits","Map","edit","versionId","getVersionId","array","get","set","replaceMove","lift","textEdit","range","text","totalEdits","totalFiles","pushStackElement","pushEditOperations","ariaSummary","format","bulkEditServiceSummary","SimpleUriLabelService","getUriLabel","fsPath","SimpleLayoutService","_codeEditorService","_container","onDidLayout","dimension","_dimension","getClientArea","body","container","focus","_a","getFocusedCodeEditor"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as strings from '../../../base/common/strings.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { SimpleKeybinding, createKeybinding } from '../../../base/common/keybindings.js';\nimport { ImmortalReference, toDisposable, DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { isCodeEditor } from '../../browser/editorBrowser.js';\nimport { ResourceTextEdit } from '../../browser/services/bulkEditService.js';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/commonEditorConfig.js';\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Position as Pos } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { IModelService } from '../../common/services/modelService.js';\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { Configuration, ConfigurationModel, DefaultConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels.js';\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService.js';\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver.js';\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem.js';\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\nimport { NoOpNotification } from '../../../platform/notification/common/notification.js';\nimport { WorkspaceFolder } from '../../../platform/workspace/common/workspace.js';\nimport { SimpleServicesNLS } from '../../common/standaloneStrings.js';\nexport class SimpleModel {\n    constructor(model) {\n        this.disposed = false;\n        this.model = model;\n        this._onWillDispose = new Emitter();\n    }\n    get textEditorModel() {\n        return this.model;\n    }\n    dispose() {\n        this.disposed = true;\n        this._onWillDispose.fire();\n    }\n}\nfunction withTypedEditor(widget, codeEditorCallback, diffEditorCallback) {\n    if (isCodeEditor(widget)) {\n        // Single Editor\n        return codeEditorCallback(widget);\n    }\n    else {\n        // Diff Editor\n        return diffEditorCallback(widget);\n    }\n}\nlet SimpleEditorModelResolverService = class SimpleEditorModelResolverService {\n    constructor(modelService) {\n        this.modelService = modelService;\n    }\n    setEditor(editor) {\n        this.editor = editor;\n    }\n    createModelReference(resource) {\n        let model = null;\n        if (this.editor) {\n            model = withTypedEditor(this.editor, (editor) => this.findModel(editor, resource), (diffEditor) => this.findModel(diffEditor.getOriginalEditor(), resource) || this.findModel(diffEditor.getModifiedEditor(), resource));\n        }\n        if (!model) {\n            return Promise.reject(new Error(`Model not found`));\n        }\n        return Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n    }\n    findModel(editor, resource) {\n        let model = this.modelService.getModel(resource);\n        if (model && model.uri.toString() !== resource.toString()) {\n            return null;\n        }\n        return model;\n    }\n};\nSimpleEditorModelResolverService = __decorate([\n    __param(0, IModelService)\n], SimpleEditorModelResolverService);\nexport { SimpleEditorModelResolverService };\nexport class SimpleEditorProgressService {\n    show() {\n        return SimpleEditorProgressService.NULL_PROGRESS_RUNNER;\n    }\n    showWhile(promise, delay) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield promise;\n        });\n    }\n}\nSimpleEditorProgressService.NULL_PROGRESS_RUNNER = {\n    done: () => { },\n    total: () => { },\n    worked: () => { }\n};\nexport class SimpleDialogService {\n    confirm(confirmation) {\n        return this.doConfirm(confirmation).then(confirmed => {\n            return {\n                confirmed,\n                checkboxChecked: false // unsupported\n            };\n        });\n    }\n    doConfirm(confirmation) {\n        let messageText = confirmation.message;\n        if (confirmation.detail) {\n            messageText = messageText + '\\n\\n' + confirmation.detail;\n        }\n        return Promise.resolve(window.confirm(messageText));\n    }\n    show(severity, message, buttons, options) {\n        return Promise.resolve({ choice: 0 });\n    }\n}\nexport class SimpleNotificationService {\n    info(message) {\n        return this.notify({ severity: Severity.Info, message });\n    }\n    warn(message) {\n        return this.notify({ severity: Severity.Warning, message });\n    }\n    error(error) {\n        return this.notify({ severity: Severity.Error, message: error });\n    }\n    notify(notification) {\n        switch (notification.severity) {\n            case Severity.Error:\n                console.error(notification.message);\n                break;\n            case Severity.Warning:\n                console.warn(notification.message);\n                break;\n            default:\n                console.log(notification.message);\n                break;\n        }\n        return SimpleNotificationService.NO_OP;\n    }\n    status(message, options) {\n        return Disposable.None;\n    }\n}\nSimpleNotificationService.NO_OP = new NoOpNotification();\nexport class StandaloneCommandService {\n    constructor(instantiationService) {\n        this._onWillExecuteCommand = new Emitter();\n        this._onDidExecuteCommand = new Emitter();\n        this.onDidExecuteCommand = this._onDidExecuteCommand.event;\n        this._instantiationService = instantiationService;\n    }\n    executeCommand(id, ...args) {\n        const command = CommandsRegistry.getCommand(id);\n        if (!command) {\n            return Promise.reject(new Error(`command '${id}' not found`));\n        }\n        try {\n            this._onWillExecuteCommand.fire({ commandId: id, args });\n            const result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]);\n            this._onDidExecuteCommand.fire({ commandId: id, args });\n            return Promise.resolve(result);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n}\nexport class StandaloneKeybindingService extends AbstractKeybindingService {\n    constructor(contextKeyService, commandService, telemetryService, notificationService, logService, domNode) {\n        super(contextKeyService, commandService, telemetryService, notificationService, logService);\n        this._cachedResolver = null;\n        this._dynamicKeybindings = [];\n        // for standard keybindings\n        this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e) => {\n            const keyEvent = new StandardKeyboardEvent(e);\n            const shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n            if (shouldPreventDefault) {\n                keyEvent.preventDefault();\n                keyEvent.stopPropagation();\n            }\n        }));\n        // for single modifier chord keybindings (e.g. shift shift)\n        this._register(dom.addDisposableListener(window, dom.EventType.KEY_UP, (e) => {\n            const keyEvent = new StandardKeyboardEvent(e);\n            const shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n            if (shouldPreventDefault) {\n                keyEvent.preventDefault();\n            }\n        }));\n    }\n    addDynamicKeybinding(commandId, _keybinding, handler, when) {\n        const keybinding = createKeybinding(_keybinding, OS);\n        const toDispose = new DisposableStore();\n        if (keybinding) {\n            this._dynamicKeybindings.push({\n                keybinding: keybinding.parts,\n                command: commandId,\n                when: when,\n                weight1: 1000,\n                weight2: 0,\n                extensionId: null,\n                isBuiltinExtension: false\n            });\n            toDispose.add(toDisposable(() => {\n                for (let i = 0; i < this._dynamicKeybindings.length; i++) {\n                    let kb = this._dynamicKeybindings[i];\n                    if (kb.command === commandId) {\n                        this._dynamicKeybindings.splice(i, 1);\n                        this.updateResolver({ source: 1 /* Default */ });\n                        return;\n                    }\n                }\n            }));\n        }\n        toDispose.add(CommandsRegistry.registerCommand(commandId, handler));\n        this.updateResolver({ source: 1 /* Default */ });\n        return toDispose;\n    }\n    updateResolver(event) {\n        this._cachedResolver = null;\n        this._onDidUpdateKeybindings.fire(event);\n    }\n    _getResolver() {\n        if (!this._cachedResolver) {\n            const defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n            const overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n            this._cachedResolver = new KeybindingResolver(defaults, overrides, (str) => this._log(str));\n        }\n        return this._cachedResolver;\n    }\n    _documentHasFocus() {\n        return document.hasFocus();\n    }\n    _toNormalizedKeybindingItems(items, isDefault) {\n        let result = [], resultLen = 0;\n        for (const item of items) {\n            const when = item.when || undefined;\n            const keybinding = item.keybinding;\n            if (!keybinding) {\n                // This might be a removal keybinding item in user settings => accept it\n                result[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n            }\n            else {\n                const resolvedKeybindings = USLayoutResolvedKeybinding.resolveUserBinding(keybinding, OS);\n                for (const resolvedKeybinding of resolvedKeybindings) {\n                    result[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n                }\n            }\n        }\n        return result;\n    }\n    resolveKeyboardEvent(keyboardEvent) {\n        let keybinding = new SimpleKeybinding(keyboardEvent.ctrlKey, keyboardEvent.shiftKey, keyboardEvent.altKey, keyboardEvent.metaKey, keyboardEvent.keyCode).toChord();\n        return new USLayoutResolvedKeybinding(keybinding, OS);\n    }\n}\nfunction isConfigurationOverrides(thing) {\n    return thing\n        && typeof thing === 'object'\n        && (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n        && (!thing.resource || thing.resource instanceof URI);\n}\nexport class SimpleConfigurationService {\n    constructor() {\n        this._onDidChangeConfiguration = new Emitter();\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        this._configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n    }\n    getValue(arg1, arg2) {\n        const section = typeof arg1 === 'string' ? arg1 : undefined;\n        const overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n        return this._configuration.getValue(section, overrides, undefined);\n    }\n    updateValues(values) {\n        const previous = { data: this._configuration.toData() };\n        let changedKeys = [];\n        for (const entry of values) {\n            const [key, value] = entry;\n            if (this.getValue(key) === value) {\n                continue;\n            }\n            this._configuration.updateValue(key, value);\n            changedKeys.push(key);\n        }\n        if (changedKeys.length > 0) {\n            const configurationChangeEvent = new ConfigurationChangeEvent({ keys: changedKeys, overrides: [] }, previous, this._configuration);\n            configurationChangeEvent.source = 7 /* MEMORY */;\n            configurationChangeEvent.sourceConfig = null;\n            this._onDidChangeConfiguration.fire(configurationChangeEvent);\n        }\n        return Promise.resolve();\n    }\n}\nexport class SimpleResourceConfigurationService {\n    constructor(configurationService) {\n        this.configurationService = configurationService;\n        this._onDidChangeConfiguration = new Emitter();\n        this.configurationService.onDidChangeConfiguration((e) => {\n            this._onDidChangeConfiguration.fire({ affectedKeys: e.affectedKeys, affectsConfiguration: (resource, configuration) => e.affectsConfiguration(configuration) });\n        });\n    }\n    getValue(resource, arg2, arg3) {\n        const position = Pos.isIPosition(arg2) ? arg2 : null;\n        const section = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\n        if (typeof section === 'undefined') {\n            return this.configurationService.getValue();\n        }\n        return this.configurationService.getValue(section);\n    }\n}\nlet SimpleResourcePropertiesService = class SimpleResourcePropertiesService {\n    constructor(configurationService) {\n        this.configurationService = configurationService;\n    }\n    getEOL(resource, language) {\n        const eol = this.configurationService.getValue('files.eol', { overrideIdentifier: language, resource });\n        if (eol && typeof eol === 'string' && eol !== 'auto') {\n            return eol;\n        }\n        return (isLinux || isMacintosh) ? '\\n' : '\\r\\n';\n    }\n};\nSimpleResourcePropertiesService = __decorate([\n    __param(0, IConfigurationService)\n], SimpleResourcePropertiesService);\nexport { SimpleResourcePropertiesService };\nexport class StandaloneTelemetryService {\n    publicLog(eventName, data) {\n        return Promise.resolve(undefined);\n    }\n    publicLog2(eventName, data) {\n        return this.publicLog(eventName, data);\n    }\n}\nexport class SimpleWorkspaceContextService {\n    constructor() {\n        const resource = URI.from({ scheme: SimpleWorkspaceContextService.SCHEME, authority: 'model', path: '/' });\n        this.workspace = { id: '4064f6ec-cb38-4ad0-af64-ee6467e63c82', folders: [new WorkspaceFolder({ uri: resource, name: '', index: 0 })] };\n    }\n    getWorkspace() {\n        return this.workspace;\n    }\n}\nSimpleWorkspaceContextService.SCHEME = 'inmemory';\nexport function updateConfigurationService(configurationService, source, isDiffEditor) {\n    if (!source) {\n        return;\n    }\n    if (!(configurationService instanceof SimpleConfigurationService)) {\n        return;\n    }\n    let toUpdate = [];\n    Object.keys(source).forEach((key) => {\n        if (isEditorConfigurationKey(key)) {\n            toUpdate.push([`editor.${key}`, source[key]]);\n        }\n        if (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n            toUpdate.push([`diffEditor.${key}`, source[key]]);\n        }\n    });\n    if (toUpdate.length > 0) {\n        configurationService.updateValues(toUpdate);\n    }\n}\nexport class SimpleBulkEditService {\n    constructor(_modelService) {\n        this._modelService = _modelService;\n        //\n    }\n    hasPreviewHandler() {\n        return false;\n    }\n    apply(edits, _options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const textEdits = new Map();\n            for (let edit of edits) {\n                if (!(edit instanceof ResourceTextEdit)) {\n                    throw new Error('bad edit - only text edits are supported');\n                }\n                const model = this._modelService.getModel(edit.resource);\n                if (!model) {\n                    throw new Error('bad edit - model not found');\n                }\n                if (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n                    throw new Error('bad state - model changed in the meantime');\n                }\n                let array = textEdits.get(model);\n                if (!array) {\n                    array = [];\n                    textEdits.set(model, array);\n                }\n                array.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n            }\n            let totalEdits = 0;\n            let totalFiles = 0;\n            for (const [model, edits] of textEdits) {\n                model.pushStackElement();\n                model.pushEditOperations([], edits, () => []);\n                model.pushStackElement();\n                totalFiles += 1;\n                totalEdits += edits.length;\n            }\n            return {\n                ariaSummary: strings.format(SimpleServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles)\n            };\n        });\n    }\n}\nexport class SimpleUriLabelService {\n    getUriLabel(resource, options) {\n        if (resource.scheme === 'file') {\n            return resource.fsPath;\n        }\n        return resource.path;\n    }\n}\nexport class SimpleLayoutService {\n    constructor(_codeEditorService, _container) {\n        this._codeEditorService = _codeEditorService;\n        this._container = _container;\n        this.onDidLayout = Event.None;\n    }\n    get dimension() {\n        if (!this._dimension) {\n            this._dimension = dom.getClientArea(window.document.body);\n        }\n        return this._dimension;\n    }\n    get container() {\n        return this._container;\n    }\n    focus() {\n        var _a;\n        (_a = this._codeEditorService.getFocusedCodeEditor()) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}