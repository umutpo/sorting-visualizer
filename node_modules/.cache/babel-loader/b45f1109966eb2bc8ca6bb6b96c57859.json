{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nexport class AbstractCodeEditorService extends Disposable {\n  constructor() {\n    super();\n    this._onCodeEditorAdd = this._register(new Emitter());\n    this.onCodeEditorAdd = this._onCodeEditorAdd.event;\n    this._onCodeEditorRemove = this._register(new Emitter());\n    this.onCodeEditorRemove = this._onCodeEditorRemove.event;\n    this._onDiffEditorAdd = this._register(new Emitter());\n    this._onDiffEditorRemove = this._register(new Emitter());\n    this._onDecorationTypeRegistered = this._register(new Emitter());\n    this._modelProperties = new Map();\n    this._codeEditors = Object.create(null);\n    this._diffEditors = Object.create(null);\n  }\n\n  addCodeEditor(editor) {\n    this._codeEditors[editor.getId()] = editor;\n\n    this._onCodeEditorAdd.fire(editor);\n  }\n\n  removeCodeEditor(editor) {\n    if (delete this._codeEditors[editor.getId()]) {\n      this._onCodeEditorRemove.fire(editor);\n    }\n  }\n\n  listCodeEditors() {\n    return Object.keys(this._codeEditors).map(id => this._codeEditors[id]);\n  }\n\n  addDiffEditor(editor) {\n    this._diffEditors[editor.getId()] = editor;\n\n    this._onDiffEditorAdd.fire(editor);\n  }\n\n  removeDiffEditor(editor) {\n    if (delete this._diffEditors[editor.getId()]) {\n      this._onDiffEditorRemove.fire(editor);\n    }\n  }\n\n  listDiffEditors() {\n    return Object.keys(this._diffEditors).map(id => this._diffEditors[id]);\n  }\n\n  getFocusedCodeEditor() {\n    let editorWithWidgetFocus = null;\n    const editors = this.listCodeEditors();\n\n    for (const editor of editors) {\n      if (editor.hasTextFocus()) {\n        // bingo!\n        return editor;\n      }\n\n      if (editor.hasWidgetFocus()) {\n        editorWithWidgetFocus = editor;\n      }\n    }\n\n    return editorWithWidgetFocus;\n  }\n\n  setModelProperty(resource, key, value) {\n    const key1 = resource.toString();\n    let dest;\n\n    if (this._modelProperties.has(key1)) {\n      dest = this._modelProperties.get(key1);\n    } else {\n      dest = new Map();\n\n      this._modelProperties.set(key1, dest);\n    }\n\n    dest.set(key, value);\n  }\n\n  getModelProperty(resource, key) {\n    const key1 = resource.toString();\n\n    if (this._modelProperties.has(key1)) {\n      const innerMap = this._modelProperties.get(key1);\n\n      return innerMap.get(key);\n    }\n\n    return undefined;\n  }\n\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/editor/browser/services/abstractCodeEditorService.js"],"names":["Emitter","Disposable","AbstractCodeEditorService","constructor","_onCodeEditorAdd","_register","onCodeEditorAdd","event","_onCodeEditorRemove","onCodeEditorRemove","_onDiffEditorAdd","_onDiffEditorRemove","_onDecorationTypeRegistered","_modelProperties","Map","_codeEditors","Object","create","_diffEditors","addCodeEditor","editor","getId","fire","removeCodeEditor","listCodeEditors","keys","map","id","addDiffEditor","removeDiffEditor","listDiffEditors","getFocusedCodeEditor","editorWithWidgetFocus","editors","hasTextFocus","hasWidgetFocus","setModelProperty","resource","key","value","key1","toString","dest","has","get","set","getModelProperty","innerMap","undefined"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nexport class AbstractCodeEditorService extends Disposable {\n    constructor() {\n        super();\n        this._onCodeEditorAdd = this._register(new Emitter());\n        this.onCodeEditorAdd = this._onCodeEditorAdd.event;\n        this._onCodeEditorRemove = this._register(new Emitter());\n        this.onCodeEditorRemove = this._onCodeEditorRemove.event;\n        this._onDiffEditorAdd = this._register(new Emitter());\n        this._onDiffEditorRemove = this._register(new Emitter());\n        this._onDecorationTypeRegistered = this._register(new Emitter());\n        this._modelProperties = new Map();\n        this._codeEditors = Object.create(null);\n        this._diffEditors = Object.create(null);\n    }\n    addCodeEditor(editor) {\n        this._codeEditors[editor.getId()] = editor;\n        this._onCodeEditorAdd.fire(editor);\n    }\n    removeCodeEditor(editor) {\n        if (delete this._codeEditors[editor.getId()]) {\n            this._onCodeEditorRemove.fire(editor);\n        }\n    }\n    listCodeEditors() {\n        return Object.keys(this._codeEditors).map(id => this._codeEditors[id]);\n    }\n    addDiffEditor(editor) {\n        this._diffEditors[editor.getId()] = editor;\n        this._onDiffEditorAdd.fire(editor);\n    }\n    removeDiffEditor(editor) {\n        if (delete this._diffEditors[editor.getId()]) {\n            this._onDiffEditorRemove.fire(editor);\n        }\n    }\n    listDiffEditors() {\n        return Object.keys(this._diffEditors).map(id => this._diffEditors[id]);\n    }\n    getFocusedCodeEditor() {\n        let editorWithWidgetFocus = null;\n        const editors = this.listCodeEditors();\n        for (const editor of editors) {\n            if (editor.hasTextFocus()) {\n                // bingo!\n                return editor;\n            }\n            if (editor.hasWidgetFocus()) {\n                editorWithWidgetFocus = editor;\n            }\n        }\n        return editorWithWidgetFocus;\n    }\n    setModelProperty(resource, key, value) {\n        const key1 = resource.toString();\n        let dest;\n        if (this._modelProperties.has(key1)) {\n            dest = this._modelProperties.get(key1);\n        }\n        else {\n            dest = new Map();\n            this._modelProperties.set(key1, dest);\n        }\n        dest.set(key, value);\n    }\n    getModelProperty(resource, key) {\n        const key1 = resource.toString();\n        if (this._modelProperties.has(key1)) {\n            const innerMap = this._modelProperties.get(key1);\n            return innerMap.get(key);\n        }\n        return undefined;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}