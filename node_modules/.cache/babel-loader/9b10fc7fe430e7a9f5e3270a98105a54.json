{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createCancelablePromise, RunOnceScheduler } from '../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nexport class HoverOperation {\n  constructor(computer, success, error, progress, hoverTime) {\n    this._computer = computer;\n    this._state = 0\n    /* IDLE */\n    ;\n    this._hoverTime = hoverTime;\n    this._firstWaitScheduler = new RunOnceScheduler(() => this._triggerAsyncComputation(), 0);\n    this._secondWaitScheduler = new RunOnceScheduler(() => this._triggerSyncComputation(), 0);\n    this._loadingMessageScheduler = new RunOnceScheduler(() => this._showLoadingMessage(), 0);\n    this._asyncComputationPromise = null;\n    this._asyncComputationPromiseDone = false;\n    this._completeCallback = success;\n    this._errorCallback = error;\n    this._progressCallback = progress;\n  }\n\n  setHoverTime(hoverTime) {\n    this._hoverTime = hoverTime;\n  }\n\n  _firstWaitTime() {\n    return this._hoverTime / 2;\n  }\n\n  _secondWaitTime() {\n    return this._hoverTime / 2;\n  }\n\n  _loadingMessageTime() {\n    return 3 * this._hoverTime;\n  }\n\n  _triggerAsyncComputation() {\n    this._state = 2\n    /* SECOND_WAIT */\n    ;\n\n    this._secondWaitScheduler.schedule(this._secondWaitTime());\n\n    if (this._computer.computeAsync) {\n      this._asyncComputationPromiseDone = false;\n      this._asyncComputationPromise = createCancelablePromise(token => this._computer.computeAsync(token));\n\n      this._asyncComputationPromise.then(asyncResult => {\n        this._asyncComputationPromiseDone = true;\n\n        this._withAsyncResult(asyncResult);\n      }, e => this._onError(e));\n    } else {\n      this._asyncComputationPromiseDone = true;\n    }\n  }\n\n  _triggerSyncComputation() {\n    if (this._computer.computeSync) {\n      this._computer.onResult(this._computer.computeSync(), true);\n    }\n\n    if (this._asyncComputationPromiseDone) {\n      this._state = 0\n      /* IDLE */\n      ;\n\n      this._onComplete(this._computer.getResult());\n    } else {\n      this._state = 3\n      /* WAITING_FOR_ASYNC_COMPUTATION */\n      ;\n\n      this._onProgress(this._computer.getResult());\n    }\n  }\n\n  _showLoadingMessage() {\n    if (this._state === 3\n    /* WAITING_FOR_ASYNC_COMPUTATION */\n    ) {\n      this._onProgress(this._computer.getResultWithLoadingMessage());\n    }\n  }\n\n  _withAsyncResult(asyncResult) {\n    if (asyncResult) {\n      this._computer.onResult(asyncResult, false);\n    }\n\n    if (this._state === 3\n    /* WAITING_FOR_ASYNC_COMPUTATION */\n    ) {\n      this._state = 0\n      /* IDLE */\n      ;\n\n      this._onComplete(this._computer.getResult());\n    }\n  }\n\n  _onComplete(value) {\n    this._completeCallback(value);\n  }\n\n  _onError(error) {\n    if (this._errorCallback) {\n      this._errorCallback(error);\n    } else {\n      onUnexpectedError(error);\n    }\n  }\n\n  _onProgress(value) {\n    this._progressCallback(value);\n  }\n\n  start(mode) {\n    if (mode === 0\n    /* Delayed */\n    ) {\n      if (this._state === 0\n      /* IDLE */\n      ) {\n        this._state = 1\n        /* FIRST_WAIT */\n        ;\n\n        this._firstWaitScheduler.schedule(this._firstWaitTime());\n\n        this._loadingMessageScheduler.schedule(this._loadingMessageTime());\n      }\n    } else {\n      switch (this._state) {\n        case 0\n        /* IDLE */\n        :\n          this._triggerAsyncComputation();\n\n          this._secondWaitScheduler.cancel();\n\n          this._triggerSyncComputation();\n\n          break;\n\n        case 2\n        /* SECOND_WAIT */\n        :\n          this._secondWaitScheduler.cancel();\n\n          this._triggerSyncComputation();\n\n          break;\n      }\n    }\n  }\n\n  cancel() {\n    this._loadingMessageScheduler.cancel();\n\n    if (this._state === 1\n    /* FIRST_WAIT */\n    ) {\n      this._firstWaitScheduler.cancel();\n    }\n\n    if (this._state === 2\n    /* SECOND_WAIT */\n    ) {\n      this._secondWaitScheduler.cancel();\n\n      if (this._asyncComputationPromise) {\n        this._asyncComputationPromise.cancel();\n\n        this._asyncComputationPromise = null;\n      }\n    }\n\n    if (this._state === 3\n    /* WAITING_FOR_ASYNC_COMPUTATION */\n    ) {\n      if (this._asyncComputationPromise) {\n        this._asyncComputationPromise.cancel();\n\n        this._asyncComputationPromise = null;\n      }\n    }\n\n    this._state = 0\n    /* IDLE */\n    ;\n  }\n\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/editor/contrib/hover/hoverOperation.js"],"names":["createCancelablePromise","RunOnceScheduler","onUnexpectedError","HoverOperation","constructor","computer","success","error","progress","hoverTime","_computer","_state","_hoverTime","_firstWaitScheduler","_triggerAsyncComputation","_secondWaitScheduler","_triggerSyncComputation","_loadingMessageScheduler","_showLoadingMessage","_asyncComputationPromise","_asyncComputationPromiseDone","_completeCallback","_errorCallback","_progressCallback","setHoverTime","_firstWaitTime","_secondWaitTime","_loadingMessageTime","schedule","computeAsync","token","then","asyncResult","_withAsyncResult","e","_onError","computeSync","onResult","_onComplete","getResult","_onProgress","getResultWithLoadingMessage","value","start","mode","cancel"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createCancelablePromise, RunOnceScheduler } from '../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nexport class HoverOperation {\n    constructor(computer, success, error, progress, hoverTime) {\n        this._computer = computer;\n        this._state = 0 /* IDLE */;\n        this._hoverTime = hoverTime;\n        this._firstWaitScheduler = new RunOnceScheduler(() => this._triggerAsyncComputation(), 0);\n        this._secondWaitScheduler = new RunOnceScheduler(() => this._triggerSyncComputation(), 0);\n        this._loadingMessageScheduler = new RunOnceScheduler(() => this._showLoadingMessage(), 0);\n        this._asyncComputationPromise = null;\n        this._asyncComputationPromiseDone = false;\n        this._completeCallback = success;\n        this._errorCallback = error;\n        this._progressCallback = progress;\n    }\n    setHoverTime(hoverTime) {\n        this._hoverTime = hoverTime;\n    }\n    _firstWaitTime() {\n        return this._hoverTime / 2;\n    }\n    _secondWaitTime() {\n        return this._hoverTime / 2;\n    }\n    _loadingMessageTime() {\n        return 3 * this._hoverTime;\n    }\n    _triggerAsyncComputation() {\n        this._state = 2 /* SECOND_WAIT */;\n        this._secondWaitScheduler.schedule(this._secondWaitTime());\n        if (this._computer.computeAsync) {\n            this._asyncComputationPromiseDone = false;\n            this._asyncComputationPromise = createCancelablePromise(token => this._computer.computeAsync(token));\n            this._asyncComputationPromise.then((asyncResult) => {\n                this._asyncComputationPromiseDone = true;\n                this._withAsyncResult(asyncResult);\n            }, (e) => this._onError(e));\n        }\n        else {\n            this._asyncComputationPromiseDone = true;\n        }\n    }\n    _triggerSyncComputation() {\n        if (this._computer.computeSync) {\n            this._computer.onResult(this._computer.computeSync(), true);\n        }\n        if (this._asyncComputationPromiseDone) {\n            this._state = 0 /* IDLE */;\n            this._onComplete(this._computer.getResult());\n        }\n        else {\n            this._state = 3 /* WAITING_FOR_ASYNC_COMPUTATION */;\n            this._onProgress(this._computer.getResult());\n        }\n    }\n    _showLoadingMessage() {\n        if (this._state === 3 /* WAITING_FOR_ASYNC_COMPUTATION */) {\n            this._onProgress(this._computer.getResultWithLoadingMessage());\n        }\n    }\n    _withAsyncResult(asyncResult) {\n        if (asyncResult) {\n            this._computer.onResult(asyncResult, false);\n        }\n        if (this._state === 3 /* WAITING_FOR_ASYNC_COMPUTATION */) {\n            this._state = 0 /* IDLE */;\n            this._onComplete(this._computer.getResult());\n        }\n    }\n    _onComplete(value) {\n        this._completeCallback(value);\n    }\n    _onError(error) {\n        if (this._errorCallback) {\n            this._errorCallback(error);\n        }\n        else {\n            onUnexpectedError(error);\n        }\n    }\n    _onProgress(value) {\n        this._progressCallback(value);\n    }\n    start(mode) {\n        if (mode === 0 /* Delayed */) {\n            if (this._state === 0 /* IDLE */) {\n                this._state = 1 /* FIRST_WAIT */;\n                this._firstWaitScheduler.schedule(this._firstWaitTime());\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime());\n            }\n        }\n        else {\n            switch (this._state) {\n                case 0 /* IDLE */:\n                    this._triggerAsyncComputation();\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n                case 2 /* SECOND_WAIT */:\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n            }\n        }\n    }\n    cancel() {\n        this._loadingMessageScheduler.cancel();\n        if (this._state === 1 /* FIRST_WAIT */) {\n            this._firstWaitScheduler.cancel();\n        }\n        if (this._state === 2 /* SECOND_WAIT */) {\n            this._secondWaitScheduler.cancel();\n            if (this._asyncComputationPromise) {\n                this._asyncComputationPromise.cancel();\n                this._asyncComputationPromise = null;\n            }\n        }\n        if (this._state === 3 /* WAITING_FOR_ASYNC_COMPUTATION */) {\n            if (this._asyncComputationPromise) {\n                this._asyncComputationPromise.cancel();\n                this._asyncComputationPromise = null;\n            }\n        }\n        this._state = 0 /* IDLE */;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}