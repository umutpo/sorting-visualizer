{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Token, TokenizationResult, TokenizationResult2 } from '../core/token.js';\n\nclass NullStateImpl {\n  clone() {\n    return this;\n  }\n\n  equals(other) {\n    return this === other;\n  }\n\n}\n\nexport const NULL_STATE = new NullStateImpl();\nexport const NULL_MODE_ID = 'vs.editor.nullMode';\nexport function nullTokenize(languageId, buffer, state, deltaOffset) {\n  return new TokenizationResult([new Token(deltaOffset, '', languageId)], state);\n}\nexport function nullTokenize2(languageId, buffer, state, deltaOffset) {\n  let tokens = new Uint32Array(2);\n  tokens[0] = deltaOffset;\n  tokens[1] = (languageId << 0\n  /* LANGUAGEID_OFFSET */\n  | 0\n  /* Other */\n  << 8\n  /* TOKEN_TYPE_OFFSET */\n  | 0\n  /* None */\n  << 11\n  /* FONT_STYLE_OFFSET */\n  | 1\n  /* DefaultForeground */\n  << 14\n  /* FOREGROUND_OFFSET */\n  | 2\n  /* DefaultBackground */\n  << 23\n  /* BACKGROUND_OFFSET */\n  ) >>> 0;\n  return new TokenizationResult2(tokens, state === null ? NULL_STATE : state);\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/editor/common/modes/nullMode.js"],"names":["Token","TokenizationResult","TokenizationResult2","NullStateImpl","clone","equals","other","NULL_STATE","NULL_MODE_ID","nullTokenize","languageId","buffer","state","deltaOffset","nullTokenize2","tokens","Uint32Array"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,KAAT,EAAgBC,kBAAhB,EAAoCC,mBAApC,QAA+D,kBAA/D;;AACA,MAAMC,aAAN,CAAoB;AAChBC,EAAAA,KAAK,GAAG;AACJ,WAAO,IAAP;AACH;;AACDC,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACV,WAAQ,SAASA,KAAjB;AACH;;AANe;;AAQpB,OAAO,MAAMC,UAAU,GAAG,IAAIJ,aAAJ,EAAnB;AACP,OAAO,MAAMK,YAAY,GAAG,oBAArB;AACP,OAAO,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,WAAjD,EAA8D;AACjE,SAAO,IAAIZ,kBAAJ,CAAuB,CAAC,IAAID,KAAJ,CAAUa,WAAV,EAAuB,EAAvB,EAA2BH,UAA3B,CAAD,CAAvB,EAAiEE,KAAjE,CAAP;AACH;AACD,OAAO,SAASE,aAAT,CAAuBJ,UAAvB,EAAmCC,MAAnC,EAA2CC,KAA3C,EAAkDC,WAAlD,EAA+D;AAClE,MAAIE,MAAM,GAAG,IAAIC,WAAJ,CAAgB,CAAhB,CAAb;AACAD,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAYF,WAAZ;AACAE,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,CAAEL,UAAU,IAAI;AAAE;AAAjB,IACN;AAAE;AAAF,KAAiB;AAAE;AADb,IAEN;AAAE;AAAF,KAAgB;AAAG;AAFb,IAGN;AAAE;AAAF,KAA6B;AAAG;AAH1B,IAIN;AAAE;AAAF,KAA6B;AAAG;AAJ3B,QAIyD,CAJrE;AAKA,SAAO,IAAIR,mBAAJ,CAAwBa,MAAxB,EAAgCH,KAAK,KAAK,IAAV,GAAiBL,UAAjB,GAA8BK,KAA9D,CAAP;AACH","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Token, TokenizationResult, TokenizationResult2 } from '../core/token.js';\nclass NullStateImpl {\n    clone() {\n        return this;\n    }\n    equals(other) {\n        return (this === other);\n    }\n}\nexport const NULL_STATE = new NullStateImpl();\nexport const NULL_MODE_ID = 'vs.editor.nullMode';\nexport function nullTokenize(languageId, buffer, state, deltaOffset) {\n    return new TokenizationResult([new Token(deltaOffset, '', languageId)], state);\n}\nexport function nullTokenize2(languageId, buffer, state, deltaOffset) {\n    let tokens = new Uint32Array(2);\n    tokens[0] = deltaOffset;\n    tokens[1] = ((languageId << 0 /* LANGUAGEID_OFFSET */)\n        | (0 /* Other */ << 8 /* TOKEN_TYPE_OFFSET */)\n        | (0 /* None */ << 11 /* FONT_STYLE_OFFSET */)\n        | (1 /* DefaultForeground */ << 14 /* FOREGROUND_OFFSET */)\n        | (2 /* DefaultBackground */ << 23 /* BACKGROUND_OFFSET */)) >>> 0;\n    return new TokenizationResult2(tokens, state === null ? NULL_STATE : state);\n}\n"]},"metadata":{},"sourceType":"module"}