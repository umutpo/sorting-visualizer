{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { renderLabelWithIcons } from '../iconLabel/iconLabels.js';\nimport * as objects from '../../../common/objects.js';\nexport class HighlightedLabel {\n  constructor(container, supportIcons) {\n    this.supportIcons = supportIcons;\n    this.text = '';\n    this.title = '';\n    this.highlights = [];\n    this.didEverRender = false;\n    this.domNode = document.createElement('span');\n    this.domNode.className = 'monaco-highlighted-label';\n    container.appendChild(this.domNode);\n  }\n\n  get element() {\n    return this.domNode;\n  }\n\n  set(text) {\n    let highlights = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let title = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    let escapeNewLines = arguments.length > 3 ? arguments[3] : undefined;\n\n    if (!text) {\n      text = '';\n    }\n\n    if (escapeNewLines) {\n      // adjusts highlights inplace\n      text = HighlightedLabel.escapeNewLines(text, highlights);\n    }\n\n    if (this.didEverRender && this.text === text && this.title === title && objects.equals(this.highlights, highlights)) {\n      return;\n    }\n\n    this.text = text;\n    this.title = title;\n    this.highlights = highlights;\n    this.render();\n  }\n\n  render() {\n    const children = [];\n    let pos = 0;\n\n    for (const highlight of this.highlights) {\n      if (highlight.end === highlight.start) {\n        continue;\n      }\n\n      if (pos < highlight.start) {\n        const substring = this.text.substring(pos, highlight.start);\n        children.push(dom.$('span', undefined, ...(this.supportIcons ? renderLabelWithIcons(substring) : [substring])));\n        pos = highlight.end;\n      }\n\n      const substring = this.text.substring(highlight.start, highlight.end);\n      const element = dom.$('span.highlight', undefined, ...(this.supportIcons ? renderLabelWithIcons(substring) : [substring]));\n\n      if (highlight.extraClasses) {\n        element.classList.add(highlight.extraClasses);\n      }\n\n      children.push(element);\n      pos = highlight.end;\n    }\n\n    if (pos < this.text.length) {\n      const substring = this.text.substring(pos);\n      children.push(dom.$('span', undefined, ...(this.supportIcons ? renderLabelWithIcons(substring) : [substring])));\n    }\n\n    dom.reset(this.domNode, ...children);\n\n    if (this.title) {\n      this.domNode.title = this.title;\n    } else {\n      this.domNode.removeAttribute('title');\n    }\n\n    this.didEverRender = true;\n  }\n\n  static escapeNewLines(text, highlights) {\n    let total = 0;\n    let extra = 0;\n    return text.replace(/\\r\\n|\\r|\\n/g, (match, offset) => {\n      extra = match === '\\r\\n' ? -1 : 0;\n      offset += total;\n\n      for (const highlight of highlights) {\n        if (highlight.end <= offset) {\n          continue;\n        }\n\n        if (highlight.start >= offset) {\n          highlight.start += extra;\n        }\n\n        if (highlight.end >= offset) {\n          highlight.end += extra;\n        }\n      }\n\n      total += extra;\n      return '\\u23CE';\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/base/browser/ui/highlightedlabel/highlightedLabel.js"],"names":["dom","renderLabelWithIcons","objects","HighlightedLabel","constructor","container","supportIcons","text","title","highlights","didEverRender","domNode","document","createElement","className","appendChild","element","set","escapeNewLines","equals","render","children","pos","highlight","end","start","substring","push","$","undefined","extraClasses","classList","add","length","reset","removeAttribute","total","extra","replace","match","offset"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { renderLabelWithIcons } from '../iconLabel/iconLabels.js';\nimport * as objects from '../../../common/objects.js';\nexport class HighlightedLabel {\n    constructor(container, supportIcons) {\n        this.supportIcons = supportIcons;\n        this.text = '';\n        this.title = '';\n        this.highlights = [];\n        this.didEverRender = false;\n        this.domNode = document.createElement('span');\n        this.domNode.className = 'monaco-highlighted-label';\n        container.appendChild(this.domNode);\n    }\n    get element() {\n        return this.domNode;\n    }\n    set(text, highlights = [], title = '', escapeNewLines) {\n        if (!text) {\n            text = '';\n        }\n        if (escapeNewLines) {\n            // adjusts highlights inplace\n            text = HighlightedLabel.escapeNewLines(text, highlights);\n        }\n        if (this.didEverRender && this.text === text && this.title === title && objects.equals(this.highlights, highlights)) {\n            return;\n        }\n        this.text = text;\n        this.title = title;\n        this.highlights = highlights;\n        this.render();\n    }\n    render() {\n        const children = [];\n        let pos = 0;\n        for (const highlight of this.highlights) {\n            if (highlight.end === highlight.start) {\n                continue;\n            }\n            if (pos < highlight.start) {\n                const substring = this.text.substring(pos, highlight.start);\n                children.push(dom.$('span', undefined, ...this.supportIcons ? renderLabelWithIcons(substring) : [substring]));\n                pos = highlight.end;\n            }\n            const substring = this.text.substring(highlight.start, highlight.end);\n            const element = dom.$('span.highlight', undefined, ...this.supportIcons ? renderLabelWithIcons(substring) : [substring]);\n            if (highlight.extraClasses) {\n                element.classList.add(highlight.extraClasses);\n            }\n            children.push(element);\n            pos = highlight.end;\n        }\n        if (pos < this.text.length) {\n            const substring = this.text.substring(pos);\n            children.push(dom.$('span', undefined, ...this.supportIcons ? renderLabelWithIcons(substring) : [substring]));\n        }\n        dom.reset(this.domNode, ...children);\n        if (this.title) {\n            this.domNode.title = this.title;\n        }\n        else {\n            this.domNode.removeAttribute('title');\n        }\n        this.didEverRender = true;\n    }\n    static escapeNewLines(text, highlights) {\n        let total = 0;\n        let extra = 0;\n        return text.replace(/\\r\\n|\\r|\\n/g, (match, offset) => {\n            extra = match === '\\r\\n' ? -1 : 0;\n            offset += total;\n            for (const highlight of highlights) {\n                if (highlight.end <= offset) {\n                    continue;\n                }\n                if (highlight.start >= offset) {\n                    highlight.start += extra;\n                }\n                if (highlight.end >= offset) {\n                    highlight.end += extra;\n                }\n            }\n            total += extra;\n            return '\\u23CE';\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}