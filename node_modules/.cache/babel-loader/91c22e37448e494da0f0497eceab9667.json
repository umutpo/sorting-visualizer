{"ast":null,"code":"var _jsxFileName = \"/home/umut/Documents/cs/cs410/Project2Group14/src/App.js\";\nimport './App.css';\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport MonacoEditor from 'react-monaco-editor';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.body2,\n    textAlign: 'center',\n    alignContent: 'center',\n    color: theme.palette.text.primary,\n    fontSize: 35,\n    padding: 40,\n    height: 40,\n    width: 40\n  };\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: [],\n      array: [1, 10, 3, 0, 13, 2, 5, 8],\n      leftIndex: -1,\n      rightIndex: -1,\n      code: \"def sorting_algorithm(arr):\\n\\tprint('Hello world')\\n\"\n    };\n  }\n\n  stepForward() {// TODO\n  }\n\n  stepBack() {// TODO\n  }\n\n  submitCode() {\n    fetch('/user-code', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code: window.btoa(this.state.code),\n        array: this.state.array\n      })\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        logs: data.logs\n      });\n    });\n  }\n\n  renderCellWithColor(num, index) {\n    if (index === this.state.leftIndex) {\n      return /*#__PURE__*/_jsxDEV(Item, {\n        style: {\n          backgroundColor: 'blue'\n        },\n        children: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }, this);\n    } else if (index === this.state.rightIndex) {\n      return /*#__PURE__*/_jsxDEV(Item, {\n        style: {\n          backgroundColor: 'red'\n        },\n        children: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Item, {\n        children: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  editorDidMount(editor, monaco) {\n    editor.focus();\n  }\n\n  onChange(newValue, e) {\n    this.setState({\n      code: newValue\n    });\n  }\n\n  render() {\n    const code = this.state.code;\n    const options = {\n      selectOnLineNumbers: false,\n      automaticLayout: true,\n      fontSize: 15,\n      minimap: {\n        enabled: false\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        className: \"All-sections\",\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ArraySection\",\n          children: /*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"App-header\",\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              className: \"Stack\",\n              direction: \"row\",\n              spacing: 2,\n              children: this.state.array.map((num, index) => this.renderCellWithColor(num, index))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              className: \"Stack\",\n              direction: \"row\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => {\n                  this.stepBack();\n                },\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => {\n                  this.stepForward();\n                },\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MonacoEditor, {\n            width: \"600\",\n            height: \"800\",\n            language: \"python\",\n            theme: \"vs-light\",\n            value: code,\n            options: options,\n            onChange: this.onChange.bind(this),\n            editorDidMount: this.editorDidMount.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            className: \"Stack\",\n            direction: \"row\",\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => {\n                this.submitCode();\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/src/App.js"],"names":["React","Paper","Stack","Button","styled","MonacoEditor","useEffect","useState","Item","theme","typography","body2","textAlign","alignContent","color","palette","text","primary","fontSize","padding","height","width","App","Component","constructor","props","state","logs","array","leftIndex","rightIndex","code","stepForward","stepBack","submitCode","fetch","method","headers","body","JSON","stringify","window","btoa","then","res","json","data","setState","renderCellWithColor","num","index","backgroundColor","editorDidMount","editor","monaco","focus","onChange","newValue","e","render","options","selectOnLineNumbers","automaticLayout","minimap","enabled","map","bind"],"mappings":"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","sourcesContent":["import './App.css';\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport MonacoEditor from 'react-monaco-editor';\nimport {useEffect, useState} from \"react\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  textAlign: 'center',\n  alignContent: 'center',\n  color: theme.palette.text.primary,\n  fontSize: 35,\n  padding: 40,\n  height: 40,\n  width: 40,\n}));\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      logs: [],\n      array: [1, 10, 3, 0, 13, 2, 5, 8],\n      leftIndex: -1,\n      rightIndex: -1,\n      code: \"def sorting_algorithm(arr):\\n\\tprint('Hello world')\\n\"\n    }\n  }\n\n  stepForward() {\n    // TODO\n  }\n\n  stepBack() {\n    // TODO\n  }\n\n  submitCode() {\n    fetch('/user-code', {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        code: window.btoa(this.state.code),\n        array: this.state.array\n      })\n    }).then(res => res.json()).then(data => {\n      this.setState({logs: data.logs})\n    });\n  }\n\n  renderCellWithColor(num, index) {\n    if (index === this.state.leftIndex) {\n      return <Item style={{ backgroundColor: 'blue' }}>{num}</Item>\n    } else if ((index === this.state.rightIndex)) {\n      return <Item style={{ backgroundColor: 'red' }}>{num}</Item>\n    } else {\n      return <Item>{num}</Item>\n    }\n  }\n\n  editorDidMount(editor, monaco) {\n    editor.focus();\n  }\n  onChange(newValue, e) {\n    this.setState({\n      code: newValue\n    })\n  }\n\n  render() {\n    const code = this.state.code;\n    const options = {\n      selectOnLineNumbers: false,\n      automaticLayout: true,\n      fontSize: 15,\n      minimap: {\n        enabled: false\n      },\n    };\n    return (\n      <div className=\"App\">\n        <Stack className=\"All-sections\" direction=\"row\">\n          <div className=\"ArraySection\">\n            <header className=\"App-header\">\n              <Stack className=\"Stack\" direction=\"row\" spacing={2}>\n                {this.state.array.map((num, index) => (\n                  this.renderCellWithColor(num, index)\n                ))}\n              </Stack>\n              <Stack className=\"Stack\" direction=\"row\" spacing={2}>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => { this.stepBack(); }}>\n                  Previous\n                </Button>\n\n                <Button variant=\"contained\" color=\"primary\" onClick={() => { this.stepForward(); }}>\n                  Next\n                </Button>\n              </Stack>\n            </header>\n          </div>\n          <div>\n            <MonacoEditor\n                width=\"600\"\n                height=\"800\"\n                language=\"python\"\n                theme=\"vs-light\"\n                value={code}\n                options={options}\n                onChange={this.onChange.bind(this)}\n                editorDidMount={this.editorDidMount.bind(this)}\n            />\n            <Stack className=\"Stack\" direction=\"row\" spacing={2}>\n              <Button variant=\"contained\" color=\"primary\" onClick={() => { this.submitCode(); }}>\n                Submit\n              </Button>\n            </Stack>\n\n          </div>\n        </Stack>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}