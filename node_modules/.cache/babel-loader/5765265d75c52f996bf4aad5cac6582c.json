{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nexport class TokenizationRegistryImpl {\n  constructor() {\n    this._map = new Map();\n    this._promises = new Map();\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this._colorMap = null;\n  }\n\n  fire(languages) {\n    this._onDidChange.fire({\n      changedLanguages: languages,\n      changedColorMap: false\n    });\n  }\n\n  register(language, support) {\n    this._map.set(language, support);\n\n    this.fire([language]);\n    return toDisposable(() => {\n      if (this._map.get(language) !== support) {\n        return;\n      }\n\n      this._map.delete(language);\n\n      this.fire([language]);\n    });\n  }\n\n  registerPromise(language, supportPromise) {\n    let registration = null;\n    let isDisposed = false;\n\n    this._promises.set(language, supportPromise.then(support => {\n      this._promises.delete(language);\n\n      if (isDisposed || !support) {\n        return;\n      }\n\n      registration = this.register(language, support);\n    }));\n\n    return toDisposable(() => {\n      isDisposed = true;\n\n      if (registration) {\n        registration.dispose();\n      }\n    });\n  }\n\n  getPromise(language) {\n    const support = this.get(language);\n\n    if (support) {\n      return Promise.resolve(support);\n    }\n\n    const promise = this._promises.get(language);\n\n    if (promise) {\n      return promise.then(_ => this.get(language));\n    }\n\n    return null;\n  }\n\n  get(language) {\n    return this._map.get(language) || null;\n  }\n\n  setColorMap(colorMap) {\n    this._colorMap = colorMap;\n\n    this._onDidChange.fire({\n      changedLanguages: Array.from(this._map.keys()),\n      changedColorMap: true\n    });\n  }\n\n  getColorMap() {\n    return this._colorMap;\n  }\n\n  getDefaultBackground() {\n    if (this._colorMap && this._colorMap.length > 2\n    /* DefaultBackground */\n    ) {\n      return this._colorMap[2\n      /* DefaultBackground */\n      ];\n    }\n\n    return null;\n  }\n\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/editor/common/modes/tokenizationRegistry.js"],"names":["Emitter","toDisposable","TokenizationRegistryImpl","constructor","_map","Map","_promises","_onDidChange","onDidChange","event","_colorMap","fire","languages","changedLanguages","changedColorMap","register","language","support","set","get","delete","registerPromise","supportPromise","registration","isDisposed","then","dispose","getPromise","Promise","resolve","promise","_","setColorMap","colorMap","Array","from","keys","getColorMap","getDefaultBackground","length"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nexport class TokenizationRegistryImpl {\n    constructor() {\n        this._map = new Map();\n        this._promises = new Map();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._colorMap = null;\n    }\n    fire(languages) {\n        this._onDidChange.fire({\n            changedLanguages: languages,\n            changedColorMap: false\n        });\n    }\n    register(language, support) {\n        this._map.set(language, support);\n        this.fire([language]);\n        return toDisposable(() => {\n            if (this._map.get(language) !== support) {\n                return;\n            }\n            this._map.delete(language);\n            this.fire([language]);\n        });\n    }\n    registerPromise(language, supportPromise) {\n        let registration = null;\n        let isDisposed = false;\n        this._promises.set(language, supportPromise.then(support => {\n            this._promises.delete(language);\n            if (isDisposed || !support) {\n                return;\n            }\n            registration = this.register(language, support);\n        }));\n        return toDisposable(() => {\n            isDisposed = true;\n            if (registration) {\n                registration.dispose();\n            }\n        });\n    }\n    getPromise(language) {\n        const support = this.get(language);\n        if (support) {\n            return Promise.resolve(support);\n        }\n        const promise = this._promises.get(language);\n        if (promise) {\n            return promise.then(_ => this.get(language));\n        }\n        return null;\n    }\n    get(language) {\n        return (this._map.get(language) || null);\n    }\n    setColorMap(colorMap) {\n        this._colorMap = colorMap;\n        this._onDidChange.fire({\n            changedLanguages: Array.from(this._map.keys()),\n            changedColorMap: true\n        });\n    }\n    getColorMap() {\n        return this._colorMap;\n    }\n    getDefaultBackground() {\n        if (this._colorMap && this._colorMap.length > 2 /* DefaultBackground */) {\n            return this._colorMap[2 /* DefaultBackground */];\n        }\n        return null;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}