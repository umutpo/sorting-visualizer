{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../base/browser/browser.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { CharWidthRequest, readCharWidths } from './charWidthReader.js';\nimport { ElementSizeObserver } from './elementSizeObserver.js';\nimport { CommonEditorConfiguration } from '../../common/config/commonEditorConfig.js';\nimport { EditorFontLigatures, EDITOR_FONT_DEFAULTS } from '../../common/config/editorOptions.js';\nimport { FontInfo } from '../../common/config/fontInfo.js';\n\nclass CSSBasedConfigurationCache {\n  constructor() {\n    this._keys = Object.create(null);\n    this._values = Object.create(null);\n  }\n\n  has(item) {\n    const itemId = item.getId();\n    return !!this._values[itemId];\n  }\n\n  get(item) {\n    const itemId = item.getId();\n    return this._values[itemId];\n  }\n\n  put(item, value) {\n    const itemId = item.getId();\n    this._keys[itemId] = item;\n    this._values[itemId] = value;\n  }\n\n  remove(item) {\n    const itemId = item.getId();\n    delete this._keys[itemId];\n    delete this._values[itemId];\n  }\n\n  getValues() {\n    return Object.keys(this._keys).map(id => this._values[id]);\n  }\n\n}\n\nexport function clearAllFontInfos() {\n  CSSBasedConfiguration.INSTANCE.clearCache();\n}\n\nclass CSSBasedConfiguration extends Disposable {\n  constructor() {\n    super();\n    this._onDidChange = this._register(new Emitter());\n    this.onDidChange = this._onDidChange.event;\n    this._cache = new CSSBasedConfigurationCache();\n    this._evictUntrustedReadingsTimeout = -1;\n  }\n\n  dispose() {\n    if (this._evictUntrustedReadingsTimeout !== -1) {\n      clearTimeout(this._evictUntrustedReadingsTimeout);\n      this._evictUntrustedReadingsTimeout = -1;\n    }\n\n    super.dispose();\n  }\n\n  clearCache() {\n    this._cache = new CSSBasedConfigurationCache();\n\n    this._onDidChange.fire();\n  }\n\n  _writeToCache(item, value) {\n    this._cache.put(item, value);\n\n    if (!value.isTrusted && this._evictUntrustedReadingsTimeout === -1) {\n      // Try reading again after some time\n      this._evictUntrustedReadingsTimeout = setTimeout(() => {\n        this._evictUntrustedReadingsTimeout = -1;\n\n        this._evictUntrustedReadings();\n      }, 5000);\n    }\n  }\n\n  _evictUntrustedReadings() {\n    const values = this._cache.getValues();\n\n    let somethingRemoved = false;\n\n    for (const item of values) {\n      if (!item.isTrusted) {\n        somethingRemoved = true;\n\n        this._cache.remove(item);\n      }\n    }\n\n    if (somethingRemoved) {\n      this._onDidChange.fire();\n    }\n  }\n\n  readConfiguration(bareFontInfo) {\n    if (!this._cache.has(bareFontInfo)) {\n      let readConfig = CSSBasedConfiguration._actualReadConfiguration(bareFontInfo);\n\n      if (readConfig.typicalHalfwidthCharacterWidth <= 2 || readConfig.typicalFullwidthCharacterWidth <= 2 || readConfig.spaceWidth <= 2 || readConfig.maxDigitWidth <= 2) {\n        // Hey, it's Bug 14341 ... we couldn't read\n        readConfig = new FontInfo({\n          zoomLevel: browser.getZoomLevel(),\n          pixelRatio: browser.getPixelRatio(),\n          fontFamily: readConfig.fontFamily,\n          fontWeight: readConfig.fontWeight,\n          fontSize: readConfig.fontSize,\n          fontFeatureSettings: readConfig.fontFeatureSettings,\n          lineHeight: readConfig.lineHeight,\n          letterSpacing: readConfig.letterSpacing,\n          isMonospace: readConfig.isMonospace,\n          typicalHalfwidthCharacterWidth: Math.max(readConfig.typicalHalfwidthCharacterWidth, 5),\n          typicalFullwidthCharacterWidth: Math.max(readConfig.typicalFullwidthCharacterWidth, 5),\n          canUseHalfwidthRightwardsArrow: readConfig.canUseHalfwidthRightwardsArrow,\n          spaceWidth: Math.max(readConfig.spaceWidth, 5),\n          middotWidth: Math.max(readConfig.middotWidth, 5),\n          wsmiddotWidth: Math.max(readConfig.wsmiddotWidth, 5),\n          maxDigitWidth: Math.max(readConfig.maxDigitWidth, 5)\n        }, false);\n      }\n\n      this._writeToCache(bareFontInfo, readConfig);\n    }\n\n    return this._cache.get(bareFontInfo);\n  }\n\n  static createRequest(chr, type, all, monospace) {\n    const result = new CharWidthRequest(chr, type);\n    all.push(result);\n\n    if (monospace) {\n      monospace.push(result);\n    }\n\n    return result;\n  }\n\n  static _actualReadConfiguration(bareFontInfo) {\n    const all = [];\n    const monospace = [];\n    const typicalHalfwidthCharacter = this.createRequest('n', 0\n    /* Regular */\n    , all, monospace);\n    const typicalFullwidthCharacter = this.createRequest('\\uff4d', 0\n    /* Regular */\n    , all, null);\n    const space = this.createRequest(' ', 0\n    /* Regular */\n    , all, monospace);\n    const digit0 = this.createRequest('0', 0\n    /* Regular */\n    , all, monospace);\n    const digit1 = this.createRequest('1', 0\n    /* Regular */\n    , all, monospace);\n    const digit2 = this.createRequest('2', 0\n    /* Regular */\n    , all, monospace);\n    const digit3 = this.createRequest('3', 0\n    /* Regular */\n    , all, monospace);\n    const digit4 = this.createRequest('4', 0\n    /* Regular */\n    , all, monospace);\n    const digit5 = this.createRequest('5', 0\n    /* Regular */\n    , all, monospace);\n    const digit6 = this.createRequest('6', 0\n    /* Regular */\n    , all, monospace);\n    const digit7 = this.createRequest('7', 0\n    /* Regular */\n    , all, monospace);\n    const digit8 = this.createRequest('8', 0\n    /* Regular */\n    , all, monospace);\n    const digit9 = this.createRequest('9', 0\n    /* Regular */\n    , all, monospace); // monospace test: used for whitespace rendering\n\n    const rightwardsArrow = this.createRequest('→', 0\n    /* Regular */\n    , all, monospace);\n    const halfwidthRightwardsArrow = this.createRequest('￫', 0\n    /* Regular */\n    , all, null); // U+00B7 - MIDDLE DOT\n\n    const middot = this.createRequest('·', 0\n    /* Regular */\n    , all, monospace); // U+2E31 - WORD SEPARATOR MIDDLE DOT\n\n    const wsmiddotWidth = this.createRequest(String.fromCharCode(0x2E31), 0\n    /* Regular */\n    , all, null); // monospace test: some characters\n\n    const monospaceTestChars = '|/-_ilm%';\n\n    for (let i = 0, len = monospaceTestChars.length; i < len; i++) {\n      this.createRequest(monospaceTestChars.charAt(i), 0\n      /* Regular */\n      , all, monospace);\n      this.createRequest(monospaceTestChars.charAt(i), 1\n      /* Italic */\n      , all, monospace);\n      this.createRequest(monospaceTestChars.charAt(i), 2\n      /* Bold */\n      , all, monospace);\n    }\n\n    readCharWidths(bareFontInfo, all);\n    const maxDigitWidth = Math.max(digit0.width, digit1.width, digit2.width, digit3.width, digit4.width, digit5.width, digit6.width, digit7.width, digit8.width, digit9.width);\n    let isMonospace = bareFontInfo.fontFeatureSettings === EditorFontLigatures.OFF;\n    const referenceWidth = monospace[0].width;\n\n    for (let i = 1, len = monospace.length; isMonospace && i < len; i++) {\n      const diff = referenceWidth - monospace[i].width;\n\n      if (diff < -0.001 || diff > 0.001) {\n        isMonospace = false;\n        break;\n      }\n    }\n\n    let canUseHalfwidthRightwardsArrow = true;\n\n    if (isMonospace && halfwidthRightwardsArrow.width !== referenceWidth) {\n      // using a halfwidth rightwards arrow would break monospace...\n      canUseHalfwidthRightwardsArrow = false;\n    }\n\n    if (halfwidthRightwardsArrow.width > rightwardsArrow.width) {\n      // using a halfwidth rightwards arrow would paint a larger arrow than a regular rightwards arrow\n      canUseHalfwidthRightwardsArrow = false;\n    } // let's trust the zoom level only 2s after it was changed.\n\n\n    const canTrustBrowserZoomLevel = browser.getTimeSinceLastZoomLevelChanged() > 2000;\n    return new FontInfo({\n      zoomLevel: browser.getZoomLevel(),\n      pixelRatio: browser.getPixelRatio(),\n      fontFamily: bareFontInfo.fontFamily,\n      fontWeight: bareFontInfo.fontWeight,\n      fontSize: bareFontInfo.fontSize,\n      fontFeatureSettings: bareFontInfo.fontFeatureSettings,\n      lineHeight: bareFontInfo.lineHeight,\n      letterSpacing: bareFontInfo.letterSpacing,\n      isMonospace: isMonospace,\n      typicalHalfwidthCharacterWidth: typicalHalfwidthCharacter.width,\n      typicalFullwidthCharacterWidth: typicalFullwidthCharacter.width,\n      canUseHalfwidthRightwardsArrow: canUseHalfwidthRightwardsArrow,\n      spaceWidth: space.width,\n      middotWidth: middot.width,\n      wsmiddotWidth: wsmiddotWidth.width,\n      maxDigitWidth: maxDigitWidth\n    }, canTrustBrowserZoomLevel);\n  }\n\n}\n\nCSSBasedConfiguration.INSTANCE = new CSSBasedConfiguration();\nexport class Configuration extends CommonEditorConfiguration {\n  constructor(isSimpleWidget, options) {\n    let referenceDomElement = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let accessibilityService = arguments.length > 3 ? arguments[3] : undefined;\n    super(isSimpleWidget, options);\n    this.accessibilityService = accessibilityService;\n    this._elementSizeObserver = this._register(new ElementSizeObserver(referenceDomElement, options.dimension, () => this._recomputeOptions()));\n\n    this._register(CSSBasedConfiguration.INSTANCE.onDidChange(() => this._recomputeOptions()));\n\n    if (this._validatedOptions.get(10\n    /* automaticLayout */\n    )) {\n      this._elementSizeObserver.startObserving();\n    }\n\n    this._register(browser.onDidChangeZoomLevel(_ => this._recomputeOptions()));\n\n    this._register(this.accessibilityService.onDidChangeScreenReaderOptimized(() => this._recomputeOptions()));\n\n    this._recomputeOptions();\n  }\n\n  static applyFontInfoSlow(domNode, fontInfo) {\n    domNode.style.fontFamily = fontInfo.getMassagedFontFamily(browser.isSafari ? EDITOR_FONT_DEFAULTS.fontFamily : null);\n    domNode.style.fontWeight = fontInfo.fontWeight;\n    domNode.style.fontSize = fontInfo.fontSize + 'px';\n    domNode.style.fontFeatureSettings = fontInfo.fontFeatureSettings;\n    domNode.style.lineHeight = fontInfo.lineHeight + 'px';\n    domNode.style.letterSpacing = fontInfo.letterSpacing + 'px';\n  }\n\n  static applyFontInfo(domNode, fontInfo) {\n    domNode.setFontFamily(fontInfo.getMassagedFontFamily(browser.isSafari ? EDITOR_FONT_DEFAULTS.fontFamily : null));\n    domNode.setFontWeight(fontInfo.fontWeight);\n    domNode.setFontSize(fontInfo.fontSize);\n    domNode.setFontFeatureSettings(fontInfo.fontFeatureSettings);\n    domNode.setLineHeight(fontInfo.lineHeight);\n    domNode.setLetterSpacing(fontInfo.letterSpacing);\n  }\n\n  observeReferenceElement(dimension) {\n    this._elementSizeObserver.observe(dimension);\n  }\n\n  updatePixelRatio() {\n    this._recomputeOptions();\n  }\n\n  static _getExtraEditorClassName() {\n    let extra = '';\n\n    if (!browser.isSafari && !browser.isWebkitWebView) {\n      // Use user-select: none in all browsers except Safari and native macOS WebView\n      extra += 'no-user-select ';\n    }\n\n    if (browser.isSafari) {\n      // See https://github.com/microsoft/vscode/issues/108822\n      extra += 'no-minimap-shadow ';\n    }\n\n    if (platform.isMacintosh) {\n      extra += 'mac ';\n    }\n\n    return extra;\n  }\n\n  _getEnvConfiguration() {\n    return {\n      extraEditorClassName: Configuration._getExtraEditorClassName(),\n      outerWidth: this._elementSizeObserver.getWidth(),\n      outerHeight: this._elementSizeObserver.getHeight(),\n      emptySelectionClipboard: browser.isWebKit || browser.isFirefox,\n      pixelRatio: browser.getPixelRatio(),\n      zoomLevel: browser.getZoomLevel(),\n      accessibilitySupport: this.accessibilityService.isScreenReaderOptimized() ? 2\n      /* Enabled */\n      : this.accessibilityService.getAccessibilitySupport()\n    };\n  }\n\n  readConfiguration(bareFontInfo) {\n    return CSSBasedConfiguration.INSTANCE.readConfiguration(bareFontInfo);\n  }\n\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/editor/browser/config/configuration.js"],"names":["browser","Emitter","Disposable","platform","CharWidthRequest","readCharWidths","ElementSizeObserver","CommonEditorConfiguration","EditorFontLigatures","EDITOR_FONT_DEFAULTS","FontInfo","CSSBasedConfigurationCache","constructor","_keys","Object","create","_values","has","item","itemId","getId","get","put","value","remove","getValues","keys","map","id","clearAllFontInfos","CSSBasedConfiguration","INSTANCE","clearCache","_onDidChange","_register","onDidChange","event","_cache","_evictUntrustedReadingsTimeout","dispose","clearTimeout","fire","_writeToCache","isTrusted","setTimeout","_evictUntrustedReadings","values","somethingRemoved","readConfiguration","bareFontInfo","readConfig","_actualReadConfiguration","typicalHalfwidthCharacterWidth","typicalFullwidthCharacterWidth","spaceWidth","maxDigitWidth","zoomLevel","getZoomLevel","pixelRatio","getPixelRatio","fontFamily","fontWeight","fontSize","fontFeatureSettings","lineHeight","letterSpacing","isMonospace","Math","max","canUseHalfwidthRightwardsArrow","middotWidth","wsmiddotWidth","createRequest","chr","type","all","monospace","result","push","typicalHalfwidthCharacter","typicalFullwidthCharacter","space","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","rightwardsArrow","halfwidthRightwardsArrow","middot","String","fromCharCode","monospaceTestChars","i","len","length","charAt","width","OFF","referenceWidth","diff","canTrustBrowserZoomLevel","getTimeSinceLastZoomLevelChanged","Configuration","isSimpleWidget","options","referenceDomElement","accessibilityService","_elementSizeObserver","dimension","_recomputeOptions","_validatedOptions","startObserving","onDidChangeZoomLevel","_","onDidChangeScreenReaderOptimized","applyFontInfoSlow","domNode","fontInfo","style","getMassagedFontFamily","isSafari","applyFontInfo","setFontFamily","setFontWeight","setFontSize","setFontFeatureSettings","setLineHeight","setLetterSpacing","observeReferenceElement","observe","updatePixelRatio","_getExtraEditorClassName","extra","isWebkitWebView","isMacintosh","_getEnvConfiguration","extraEditorClassName","outerWidth","getWidth","outerHeight","getHeight","emptySelectionClipboard","isWebKit","isFirefox","accessibilitySupport","isScreenReaderOptimized","getAccessibilitySupport"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../base/browser/browser.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { CharWidthRequest, readCharWidths } from './charWidthReader.js';\nimport { ElementSizeObserver } from './elementSizeObserver.js';\nimport { CommonEditorConfiguration } from '../../common/config/commonEditorConfig.js';\nimport { EditorFontLigatures, EDITOR_FONT_DEFAULTS } from '../../common/config/editorOptions.js';\nimport { FontInfo } from '../../common/config/fontInfo.js';\nclass CSSBasedConfigurationCache {\n    constructor() {\n        this._keys = Object.create(null);\n        this._values = Object.create(null);\n    }\n    has(item) {\n        const itemId = item.getId();\n        return !!this._values[itemId];\n    }\n    get(item) {\n        const itemId = item.getId();\n        return this._values[itemId];\n    }\n    put(item, value) {\n        const itemId = item.getId();\n        this._keys[itemId] = item;\n        this._values[itemId] = value;\n    }\n    remove(item) {\n        const itemId = item.getId();\n        delete this._keys[itemId];\n        delete this._values[itemId];\n    }\n    getValues() {\n        return Object.keys(this._keys).map(id => this._values[id]);\n    }\n}\nexport function clearAllFontInfos() {\n    CSSBasedConfiguration.INSTANCE.clearCache();\n}\nclass CSSBasedConfiguration extends Disposable {\n    constructor() {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._cache = new CSSBasedConfigurationCache();\n        this._evictUntrustedReadingsTimeout = -1;\n    }\n    dispose() {\n        if (this._evictUntrustedReadingsTimeout !== -1) {\n            clearTimeout(this._evictUntrustedReadingsTimeout);\n            this._evictUntrustedReadingsTimeout = -1;\n        }\n        super.dispose();\n    }\n    clearCache() {\n        this._cache = new CSSBasedConfigurationCache();\n        this._onDidChange.fire();\n    }\n    _writeToCache(item, value) {\n        this._cache.put(item, value);\n        if (!value.isTrusted && this._evictUntrustedReadingsTimeout === -1) {\n            // Try reading again after some time\n            this._evictUntrustedReadingsTimeout = setTimeout(() => {\n                this._evictUntrustedReadingsTimeout = -1;\n                this._evictUntrustedReadings();\n            }, 5000);\n        }\n    }\n    _evictUntrustedReadings() {\n        const values = this._cache.getValues();\n        let somethingRemoved = false;\n        for (const item of values) {\n            if (!item.isTrusted) {\n                somethingRemoved = true;\n                this._cache.remove(item);\n            }\n        }\n        if (somethingRemoved) {\n            this._onDidChange.fire();\n        }\n    }\n    readConfiguration(bareFontInfo) {\n        if (!this._cache.has(bareFontInfo)) {\n            let readConfig = CSSBasedConfiguration._actualReadConfiguration(bareFontInfo);\n            if (readConfig.typicalHalfwidthCharacterWidth <= 2 || readConfig.typicalFullwidthCharacterWidth <= 2 || readConfig.spaceWidth <= 2 || readConfig.maxDigitWidth <= 2) {\n                // Hey, it's Bug 14341 ... we couldn't read\n                readConfig = new FontInfo({\n                    zoomLevel: browser.getZoomLevel(),\n                    pixelRatio: browser.getPixelRatio(),\n                    fontFamily: readConfig.fontFamily,\n                    fontWeight: readConfig.fontWeight,\n                    fontSize: readConfig.fontSize,\n                    fontFeatureSettings: readConfig.fontFeatureSettings,\n                    lineHeight: readConfig.lineHeight,\n                    letterSpacing: readConfig.letterSpacing,\n                    isMonospace: readConfig.isMonospace,\n                    typicalHalfwidthCharacterWidth: Math.max(readConfig.typicalHalfwidthCharacterWidth, 5),\n                    typicalFullwidthCharacterWidth: Math.max(readConfig.typicalFullwidthCharacterWidth, 5),\n                    canUseHalfwidthRightwardsArrow: readConfig.canUseHalfwidthRightwardsArrow,\n                    spaceWidth: Math.max(readConfig.spaceWidth, 5),\n                    middotWidth: Math.max(readConfig.middotWidth, 5),\n                    wsmiddotWidth: Math.max(readConfig.wsmiddotWidth, 5),\n                    maxDigitWidth: Math.max(readConfig.maxDigitWidth, 5),\n                }, false);\n            }\n            this._writeToCache(bareFontInfo, readConfig);\n        }\n        return this._cache.get(bareFontInfo);\n    }\n    static createRequest(chr, type, all, monospace) {\n        const result = new CharWidthRequest(chr, type);\n        all.push(result);\n        if (monospace) {\n            monospace.push(result);\n        }\n        return result;\n    }\n    static _actualReadConfiguration(bareFontInfo) {\n        const all = [];\n        const monospace = [];\n        const typicalHalfwidthCharacter = this.createRequest('n', 0 /* Regular */, all, monospace);\n        const typicalFullwidthCharacter = this.createRequest('\\uff4d', 0 /* Regular */, all, null);\n        const space = this.createRequest(' ', 0 /* Regular */, all, monospace);\n        const digit0 = this.createRequest('0', 0 /* Regular */, all, monospace);\n        const digit1 = this.createRequest('1', 0 /* Regular */, all, monospace);\n        const digit2 = this.createRequest('2', 0 /* Regular */, all, monospace);\n        const digit3 = this.createRequest('3', 0 /* Regular */, all, monospace);\n        const digit4 = this.createRequest('4', 0 /* Regular */, all, monospace);\n        const digit5 = this.createRequest('5', 0 /* Regular */, all, monospace);\n        const digit6 = this.createRequest('6', 0 /* Regular */, all, monospace);\n        const digit7 = this.createRequest('7', 0 /* Regular */, all, monospace);\n        const digit8 = this.createRequest('8', 0 /* Regular */, all, monospace);\n        const digit9 = this.createRequest('9', 0 /* Regular */, all, monospace);\n        // monospace test: used for whitespace rendering\n        const rightwardsArrow = this.createRequest('→', 0 /* Regular */, all, monospace);\n        const halfwidthRightwardsArrow = this.createRequest('￫', 0 /* Regular */, all, null);\n        // U+00B7 - MIDDLE DOT\n        const middot = this.createRequest('·', 0 /* Regular */, all, monospace);\n        // U+2E31 - WORD SEPARATOR MIDDLE DOT\n        const wsmiddotWidth = this.createRequest(String.fromCharCode(0x2E31), 0 /* Regular */, all, null);\n        // monospace test: some characters\n        const monospaceTestChars = '|/-_ilm%';\n        for (let i = 0, len = monospaceTestChars.length; i < len; i++) {\n            this.createRequest(monospaceTestChars.charAt(i), 0 /* Regular */, all, monospace);\n            this.createRequest(monospaceTestChars.charAt(i), 1 /* Italic */, all, monospace);\n            this.createRequest(monospaceTestChars.charAt(i), 2 /* Bold */, all, monospace);\n        }\n        readCharWidths(bareFontInfo, all);\n        const maxDigitWidth = Math.max(digit0.width, digit1.width, digit2.width, digit3.width, digit4.width, digit5.width, digit6.width, digit7.width, digit8.width, digit9.width);\n        let isMonospace = (bareFontInfo.fontFeatureSettings === EditorFontLigatures.OFF);\n        const referenceWidth = monospace[0].width;\n        for (let i = 1, len = monospace.length; isMonospace && i < len; i++) {\n            const diff = referenceWidth - monospace[i].width;\n            if (diff < -0.001 || diff > 0.001) {\n                isMonospace = false;\n                break;\n            }\n        }\n        let canUseHalfwidthRightwardsArrow = true;\n        if (isMonospace && halfwidthRightwardsArrow.width !== referenceWidth) {\n            // using a halfwidth rightwards arrow would break monospace...\n            canUseHalfwidthRightwardsArrow = false;\n        }\n        if (halfwidthRightwardsArrow.width > rightwardsArrow.width) {\n            // using a halfwidth rightwards arrow would paint a larger arrow than a regular rightwards arrow\n            canUseHalfwidthRightwardsArrow = false;\n        }\n        // let's trust the zoom level only 2s after it was changed.\n        const canTrustBrowserZoomLevel = (browser.getTimeSinceLastZoomLevelChanged() > 2000);\n        return new FontInfo({\n            zoomLevel: browser.getZoomLevel(),\n            pixelRatio: browser.getPixelRatio(),\n            fontFamily: bareFontInfo.fontFamily,\n            fontWeight: bareFontInfo.fontWeight,\n            fontSize: bareFontInfo.fontSize,\n            fontFeatureSettings: bareFontInfo.fontFeatureSettings,\n            lineHeight: bareFontInfo.lineHeight,\n            letterSpacing: bareFontInfo.letterSpacing,\n            isMonospace: isMonospace,\n            typicalHalfwidthCharacterWidth: typicalHalfwidthCharacter.width,\n            typicalFullwidthCharacterWidth: typicalFullwidthCharacter.width,\n            canUseHalfwidthRightwardsArrow: canUseHalfwidthRightwardsArrow,\n            spaceWidth: space.width,\n            middotWidth: middot.width,\n            wsmiddotWidth: wsmiddotWidth.width,\n            maxDigitWidth: maxDigitWidth\n        }, canTrustBrowserZoomLevel);\n    }\n}\nCSSBasedConfiguration.INSTANCE = new CSSBasedConfiguration();\nexport class Configuration extends CommonEditorConfiguration {\n    constructor(isSimpleWidget, options, referenceDomElement = null, accessibilityService) {\n        super(isSimpleWidget, options);\n        this.accessibilityService = accessibilityService;\n        this._elementSizeObserver = this._register(new ElementSizeObserver(referenceDomElement, options.dimension, () => this._recomputeOptions()));\n        this._register(CSSBasedConfiguration.INSTANCE.onDidChange(() => this._recomputeOptions()));\n        if (this._validatedOptions.get(10 /* automaticLayout */)) {\n            this._elementSizeObserver.startObserving();\n        }\n        this._register(browser.onDidChangeZoomLevel(_ => this._recomputeOptions()));\n        this._register(this.accessibilityService.onDidChangeScreenReaderOptimized(() => this._recomputeOptions()));\n        this._recomputeOptions();\n    }\n    static applyFontInfoSlow(domNode, fontInfo) {\n        domNode.style.fontFamily = fontInfo.getMassagedFontFamily(browser.isSafari ? EDITOR_FONT_DEFAULTS.fontFamily : null);\n        domNode.style.fontWeight = fontInfo.fontWeight;\n        domNode.style.fontSize = fontInfo.fontSize + 'px';\n        domNode.style.fontFeatureSettings = fontInfo.fontFeatureSettings;\n        domNode.style.lineHeight = fontInfo.lineHeight + 'px';\n        domNode.style.letterSpacing = fontInfo.letterSpacing + 'px';\n    }\n    static applyFontInfo(domNode, fontInfo) {\n        domNode.setFontFamily(fontInfo.getMassagedFontFamily(browser.isSafari ? EDITOR_FONT_DEFAULTS.fontFamily : null));\n        domNode.setFontWeight(fontInfo.fontWeight);\n        domNode.setFontSize(fontInfo.fontSize);\n        domNode.setFontFeatureSettings(fontInfo.fontFeatureSettings);\n        domNode.setLineHeight(fontInfo.lineHeight);\n        domNode.setLetterSpacing(fontInfo.letterSpacing);\n    }\n    observeReferenceElement(dimension) {\n        this._elementSizeObserver.observe(dimension);\n    }\n    updatePixelRatio() {\n        this._recomputeOptions();\n    }\n    static _getExtraEditorClassName() {\n        let extra = '';\n        if (!browser.isSafari && !browser.isWebkitWebView) {\n            // Use user-select: none in all browsers except Safari and native macOS WebView\n            extra += 'no-user-select ';\n        }\n        if (browser.isSafari) {\n            // See https://github.com/microsoft/vscode/issues/108822\n            extra += 'no-minimap-shadow ';\n        }\n        if (platform.isMacintosh) {\n            extra += 'mac ';\n        }\n        return extra;\n    }\n    _getEnvConfiguration() {\n        return {\n            extraEditorClassName: Configuration._getExtraEditorClassName(),\n            outerWidth: this._elementSizeObserver.getWidth(),\n            outerHeight: this._elementSizeObserver.getHeight(),\n            emptySelectionClipboard: browser.isWebKit || browser.isFirefox,\n            pixelRatio: browser.getPixelRatio(),\n            zoomLevel: browser.getZoomLevel(),\n            accessibilitySupport: (this.accessibilityService.isScreenReaderOptimized()\n                ? 2 /* Enabled */\n                : this.accessibilityService.getAccessibilitySupport())\n        };\n    }\n    readConfiguration(bareFontInfo) {\n        return CSSBasedConfiguration.INSTANCE.readConfiguration(bareFontInfo);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}