{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../common/event.js';\n\nclass WindowManager {\n  constructor() {\n    // --- Zoom Level\n    this._zoomLevel = 0;\n    this._lastZoomLevelChangeTime = 0;\n    this._onDidChangeZoomLevel = new Emitter();\n    this.onDidChangeZoomLevel = this._onDidChangeZoomLevel.event; // --- Zoom Factor\n\n    this._zoomFactor = 1;\n  }\n\n  getZoomLevel() {\n    return this._zoomLevel;\n  }\n\n  getTimeSinceLastZoomLevelChanged() {\n    return Date.now() - this._lastZoomLevelChangeTime;\n  }\n\n  getZoomFactor() {\n    return this._zoomFactor;\n  } // --- Pixel Ratio\n\n\n  getPixelRatio() {\n    let ctx = document.createElement('canvas').getContext('2d');\n    let dpr = window.devicePixelRatio || 1;\n    let bsr = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n    return dpr / bsr;\n  }\n\n}\n\nWindowManager.INSTANCE = new WindowManager();\nexport function getZoomLevel() {\n  return WindowManager.INSTANCE.getZoomLevel();\n}\n/** Returns the time (in ms) since the zoom level was changed */\n\nexport function getTimeSinceLastZoomLevelChanged() {\n  return WindowManager.INSTANCE.getTimeSinceLastZoomLevelChanged();\n}\nexport function onDidChangeZoomLevel(callback) {\n  return WindowManager.INSTANCE.onDidChangeZoomLevel(callback);\n}\n/** The zoom scale for an index, e.g. 1, 1.2, 1.4 */\n\nexport function getZoomFactor() {\n  return WindowManager.INSTANCE.getZoomFactor();\n}\nexport function getPixelRatio() {\n  return WindowManager.INSTANCE.getPixelRatio();\n}\nconst userAgent = navigator.userAgent;\nexport const isFirefox = userAgent.indexOf('Firefox') >= 0;\nexport const isWebKit = userAgent.indexOf('AppleWebKit') >= 0;\nexport const isChrome = userAgent.indexOf('Chrome') >= 0;\nexport const isSafari = !isChrome && userAgent.indexOf('Safari') >= 0;\nexport const isWebkitWebView = !isChrome && !isSafari && isWebKit;\nexport const isAndroid = userAgent.indexOf('Android') >= 0;\nexport const isStandalone = window.matchMedia && window.matchMedia('(display-mode: standalone)').matches;","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/base/browser/browser.js"],"names":["Emitter","WindowManager","constructor","_zoomLevel","_lastZoomLevelChangeTime","_onDidChangeZoomLevel","onDidChangeZoomLevel","event","_zoomFactor","getZoomLevel","getTimeSinceLastZoomLevelChanged","Date","now","getZoomFactor","getPixelRatio","ctx","document","createElement","getContext","dpr","window","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","INSTANCE","callback","userAgent","navigator","isFirefox","indexOf","isWebKit","isChrome","isSafari","isWebkitWebView","isAndroid","isStandalone","matchMedia","matches"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,oBAAxB;;AACA,MAAMC,aAAN,CAAoB;AAChBC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,wBAAL,GAAgC,CAAhC;AACA,SAAKC,qBAAL,GAA6B,IAAIL,OAAJ,EAA7B;AACA,SAAKM,oBAAL,GAA4B,KAAKD,qBAAL,CAA2BE,KAAvD,CALU,CAMV;;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACH;;AACDC,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKN,UAAZ;AACH;;AACDO,EAAAA,gCAAgC,GAAG;AAC/B,WAAOC,IAAI,CAACC,GAAL,KAAa,KAAKR,wBAAzB;AACH;;AACDS,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAKL,WAAZ;AACH,GAlBe,CAmBhB;;;AACAM,EAAAA,aAAa,GAAG;AACZ,QAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCC,UAAjC,CAA4C,IAA5C,CAAV;AACA,QAAIC,GAAG,GAAGC,MAAM,CAACC,gBAAP,IAA2B,CAArC;AACA,QAAIC,GAAG,GAAGP,GAAG,CAACQ,4BAAJ,IACNR,GAAG,CAACS,yBADE,IAENT,GAAG,CAACU,wBAFE,IAGNV,GAAG,CAACW,uBAHE,IAINX,GAAG,CAACY,sBAJE,IAIwB,CAJlC;AAKA,WAAOR,GAAG,GAAGG,GAAb;AACH;;AA7Be;;AA+BpBrB,aAAa,CAAC2B,QAAd,GAAyB,IAAI3B,aAAJ,EAAzB;AACA,OAAO,SAASQ,YAAT,GAAwB;AAC3B,SAAOR,aAAa,CAAC2B,QAAd,CAAuBnB,YAAvB,EAAP;AACH;AACD;;AACA,OAAO,SAASC,gCAAT,GAA4C;AAC/C,SAAOT,aAAa,CAAC2B,QAAd,CAAuBlB,gCAAvB,EAAP;AACH;AACD,OAAO,SAASJ,oBAAT,CAA8BuB,QAA9B,EAAwC;AAC3C,SAAO5B,aAAa,CAAC2B,QAAd,CAAuBtB,oBAAvB,CAA4CuB,QAA5C,CAAP;AACH;AACD;;AACA,OAAO,SAAShB,aAAT,GAAyB;AAC5B,SAAOZ,aAAa,CAAC2B,QAAd,CAAuBf,aAAvB,EAAP;AACH;AACD,OAAO,SAASC,aAAT,GAAyB;AAC5B,SAAOb,aAAa,CAAC2B,QAAd,CAAuBd,aAAvB,EAAP;AACH;AACD,MAAMgB,SAAS,GAAGC,SAAS,CAACD,SAA5B;AACA,OAAO,MAAME,SAAS,GAAIF,SAAS,CAACG,OAAV,CAAkB,SAAlB,KAAgC,CAAnD;AACP,OAAO,MAAMC,QAAQ,GAAIJ,SAAS,CAACG,OAAV,CAAkB,aAAlB,KAAoC,CAAtD;AACP,OAAO,MAAME,QAAQ,GAAIL,SAAS,CAACG,OAAV,CAAkB,QAAlB,KAA+B,CAAjD;AACP,OAAO,MAAMG,QAAQ,GAAI,CAACD,QAAD,IAAcL,SAAS,CAACG,OAAV,CAAkB,QAAlB,KAA+B,CAA/D;AACP,OAAO,MAAMI,eAAe,GAAI,CAACF,QAAD,IAAa,CAACC,QAAd,IAA0BF,QAAnD;AACP,OAAO,MAAMI,SAAS,GAAIR,SAAS,CAACG,OAAV,CAAkB,SAAlB,KAAgC,CAAnD;AACP,OAAO,MAAMM,YAAY,GAAInB,MAAM,CAACoB,UAAP,IAAqBpB,MAAM,CAACoB,UAAP,CAAkB,4BAAlB,EAAgDC,OAA3F","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../common/event.js';\nclass WindowManager {\n    constructor() {\n        // --- Zoom Level\n        this._zoomLevel = 0;\n        this._lastZoomLevelChangeTime = 0;\n        this._onDidChangeZoomLevel = new Emitter();\n        this.onDidChangeZoomLevel = this._onDidChangeZoomLevel.event;\n        // --- Zoom Factor\n        this._zoomFactor = 1;\n    }\n    getZoomLevel() {\n        return this._zoomLevel;\n    }\n    getTimeSinceLastZoomLevelChanged() {\n        return Date.now() - this._lastZoomLevelChangeTime;\n    }\n    getZoomFactor() {\n        return this._zoomFactor;\n    }\n    // --- Pixel Ratio\n    getPixelRatio() {\n        let ctx = document.createElement('canvas').getContext('2d');\n        let dpr = window.devicePixelRatio || 1;\n        let bsr = ctx.webkitBackingStorePixelRatio ||\n            ctx.mozBackingStorePixelRatio ||\n            ctx.msBackingStorePixelRatio ||\n            ctx.oBackingStorePixelRatio ||\n            ctx.backingStorePixelRatio || 1;\n        return dpr / bsr;\n    }\n}\nWindowManager.INSTANCE = new WindowManager();\nexport function getZoomLevel() {\n    return WindowManager.INSTANCE.getZoomLevel();\n}\n/** Returns the time (in ms) since the zoom level was changed */\nexport function getTimeSinceLastZoomLevelChanged() {\n    return WindowManager.INSTANCE.getTimeSinceLastZoomLevelChanged();\n}\nexport function onDidChangeZoomLevel(callback) {\n    return WindowManager.INSTANCE.onDidChangeZoomLevel(callback);\n}\n/** The zoom scale for an index, e.g. 1, 1.2, 1.4 */\nexport function getZoomFactor() {\n    return WindowManager.INSTANCE.getZoomFactor();\n}\nexport function getPixelRatio() {\n    return WindowManager.INSTANCE.getPixelRatio();\n}\nconst userAgent = navigator.userAgent;\nexport const isFirefox = (userAgent.indexOf('Firefox') >= 0);\nexport const isWebKit = (userAgent.indexOf('AppleWebKit') >= 0);\nexport const isChrome = (userAgent.indexOf('Chrome') >= 0);\nexport const isSafari = (!isChrome && (userAgent.indexOf('Safari') >= 0));\nexport const isWebkitWebView = (!isChrome && !isSafari && isWebKit);\nexport const isAndroid = (userAgent.indexOf('Android') >= 0);\nexport const isStandalone = (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches);\n"]},"metadata":{},"sourceType":"module"}