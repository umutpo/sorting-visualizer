{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar _a;\n\nimport { renderMarkdown } from '../../../base/browser/markdownRenderer.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { IModeService } from '../../common/services/modeService.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { tokenizeToString } from '../../common/modes/textToHtmlTokenizer.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { TokenizationRegistry } from '../../common/modes.js';\nimport { Configuration } from '../config/configuration.js';\n/**\n * Markdown renderer that can render codeblocks with the editor mechanics. This\n * renderer should always be preferred.\n */\n\nlet MarkdownRenderer = class MarkdownRenderer {\n  constructor(_options, _modeService, _openerService) {\n    this._options = _options;\n    this._modeService = _modeService;\n    this._openerService = _openerService;\n    this._onDidRenderAsync = new Emitter();\n    this.onDidRenderAsync = this._onDidRenderAsync.event;\n  }\n\n  dispose() {\n    this._onDidRenderAsync.dispose();\n  }\n\n  render(markdown, options, markedOptions) {\n    if (!markdown) {\n      const element = document.createElement('span');\n      return {\n        element,\n        dispose: () => {}\n      };\n    }\n\n    const disposables = new DisposableStore();\n    const rendered = disposables.add(renderMarkdown(markdown, Object.assign(Object.assign({}, this._getRenderOptions(markdown, disposables)), options), markedOptions));\n    return {\n      element: rendered.element,\n      dispose: () => disposables.dispose()\n    };\n  }\n\n  _getRenderOptions(markdown, disposeables) {\n    return {\n      baseUrl: this._options.baseUrl,\n      codeBlockRenderer: (languageAlias, value) => __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d; // In markdown,\n        // it is possible that we stumble upon language aliases (e.g.js instead of javascript)\n        // it is possible no alias is given in which case we fall back to the current editor lang\n\n\n        let languageId;\n\n        if (languageAlias) {\n          languageId = this._modeService.getModeIdForLanguageName(languageAlias);\n        } else if (this._options.editor) {\n          languageId = (_a = this._options.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getLanguageId();\n        }\n\n        if (!languageId) {\n          languageId = 'plaintext';\n        }\n\n        this._modeService.triggerMode(languageId);\n\n        const tokenization = (_b = yield TokenizationRegistry.getPromise(languageId)) !== null && _b !== void 0 ? _b : undefined;\n        const element = document.createElement('span');\n        element.innerHTML = (_d = (_c = MarkdownRenderer._ttpTokenizer) === null || _c === void 0 ? void 0 : _c.createHTML(value, this._modeService.languageIdCodec, tokenization)) !== null && _d !== void 0 ? _d : tokenizeToString(value, this._modeService.languageIdCodec, tokenization); // use \"good\" font\n\n        if (this._options.editor) {\n          const fontInfo = this._options.editor.getOption(43\n          /* fontInfo */\n          );\n\n          Configuration.applyFontInfoSlow(element, fontInfo);\n        } else if (this._options.codeBlockFontFamily) {\n          element.style.fontFamily = this._options.codeBlockFontFamily;\n        }\n\n        return element;\n      }),\n      asyncRenderCallback: () => this._onDidRenderAsync.fire(),\n      actionHandler: {\n        callback: content => this._openerService.open(content, {\n          fromUserGesture: true,\n          allowContributedOpeners: true,\n          allowCommands: markdown.isTrusted\n        }).catch(onUnexpectedError),\n        disposables: disposeables\n      }\n    };\n  }\n\n};\nMarkdownRenderer._ttpTokenizer = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('tokenizeToString', {\n  createHTML(value, languageIdCodec, tokenizer) {\n    return tokenizeToString(value, languageIdCodec, tokenizer);\n  }\n\n});\nMarkdownRenderer = __decorate([__param(1, IModeService), __param(2, IOpenerService)], MarkdownRenderer);\nexport { MarkdownRenderer };","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/editor/browser/core/markdownRenderer.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","_a","renderMarkdown","IOpenerService","IModeService","onUnexpectedError","tokenizeToString","Emitter","DisposableStore","TokenizationRegistry","Configuration","MarkdownRenderer","constructor","_options","_modeService","_openerService","_onDidRenderAsync","onDidRenderAsync","event","dispose","render","markdown","options","markedOptions","element","document","createElement","disposables","rendered","add","assign","_getRenderOptions","disposeables","baseUrl","codeBlockRenderer","languageAlias","_b","_c","_d","languageId","getModeIdForLanguageName","editor","getModel","getLanguageId","triggerMode","tokenization","getPromise","undefined","innerHTML","_ttpTokenizer","createHTML","languageIdCodec","fontInfo","getOption","applyFontInfoSlow","codeBlockFontFamily","style","fontFamily","asyncRenderCallback","fire","actionHandler","callback","content","open","fromUserGesture","allowContributedOpeners","allowCommands","isTrusted","catch","window","trustedTypes","createPolicy","tokenizer"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nimport { renderMarkdown } from '../../../base/browser/markdownRenderer.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { IModeService } from '../../common/services/modeService.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { tokenizeToString } from '../../common/modes/textToHtmlTokenizer.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { TokenizationRegistry } from '../../common/modes.js';\nimport { Configuration } from '../config/configuration.js';\n/**\n * Markdown renderer that can render codeblocks with the editor mechanics. This\n * renderer should always be preferred.\n */\nlet MarkdownRenderer = class MarkdownRenderer {\n    constructor(_options, _modeService, _openerService) {\n        this._options = _options;\n        this._modeService = _modeService;\n        this._openerService = _openerService;\n        this._onDidRenderAsync = new Emitter();\n        this.onDidRenderAsync = this._onDidRenderAsync.event;\n    }\n    dispose() {\n        this._onDidRenderAsync.dispose();\n    }\n    render(markdown, options, markedOptions) {\n        if (!markdown) {\n            const element = document.createElement('span');\n            return { element, dispose: () => { } };\n        }\n        const disposables = new DisposableStore();\n        const rendered = disposables.add(renderMarkdown(markdown, Object.assign(Object.assign({}, this._getRenderOptions(markdown, disposables)), options), markedOptions));\n        return {\n            element: rendered.element,\n            dispose: () => disposables.dispose()\n        };\n    }\n    _getRenderOptions(markdown, disposeables) {\n        return {\n            baseUrl: this._options.baseUrl,\n            codeBlockRenderer: (languageAlias, value) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                // In markdown,\n                // it is possible that we stumble upon language aliases (e.g.js instead of javascript)\n                // it is possible no alias is given in which case we fall back to the current editor lang\n                let languageId;\n                if (languageAlias) {\n                    languageId = this._modeService.getModeIdForLanguageName(languageAlias);\n                }\n                else if (this._options.editor) {\n                    languageId = (_a = this._options.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getLanguageId();\n                }\n                if (!languageId) {\n                    languageId = 'plaintext';\n                }\n                this._modeService.triggerMode(languageId);\n                const tokenization = (_b = yield TokenizationRegistry.getPromise(languageId)) !== null && _b !== void 0 ? _b : undefined;\n                const element = document.createElement('span');\n                element.innerHTML = ((_d = (_c = MarkdownRenderer._ttpTokenizer) === null || _c === void 0 ? void 0 : _c.createHTML(value, this._modeService.languageIdCodec, tokenization)) !== null && _d !== void 0 ? _d : tokenizeToString(value, this._modeService.languageIdCodec, tokenization));\n                // use \"good\" font\n                if (this._options.editor) {\n                    const fontInfo = this._options.editor.getOption(43 /* fontInfo */);\n                    Configuration.applyFontInfoSlow(element, fontInfo);\n                }\n                else if (this._options.codeBlockFontFamily) {\n                    element.style.fontFamily = this._options.codeBlockFontFamily;\n                }\n                return element;\n            }),\n            asyncRenderCallback: () => this._onDidRenderAsync.fire(),\n            actionHandler: {\n                callback: (content) => this._openerService.open(content, { fromUserGesture: true, allowContributedOpeners: true, allowCommands: markdown.isTrusted }).catch(onUnexpectedError),\n                disposables: disposeables\n            }\n        };\n    }\n};\nMarkdownRenderer._ttpTokenizer = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('tokenizeToString', {\n    createHTML(value, languageIdCodec, tokenizer) {\n        return tokenizeToString(value, languageIdCodec, tokenizer);\n    }\n});\nMarkdownRenderer = __decorate([\n    __param(1, IModeService),\n    __param(2, IOpenerService)\n], MarkdownRenderer);\nexport { MarkdownRenderer };\n"]},"metadata":{},"sourceType":"module"}