{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { MouseTarget } from '../controller/mouseTarget.js';\nexport class ViewUserInputEvents {\n  constructor(coordinatesConverter) {\n    this.onKeyDown = null;\n    this.onKeyUp = null;\n    this.onContextMenu = null;\n    this.onMouseMove = null;\n    this.onMouseLeave = null;\n    this.onMouseDown = null;\n    this.onMouseUp = null;\n    this.onMouseDrag = null;\n    this.onMouseDrop = null;\n    this.onMouseDropCanceled = null;\n    this.onMouseWheel = null;\n    this._coordinatesConverter = coordinatesConverter;\n  }\n\n  emitKeyDown(e) {\n    if (this.onKeyDown) {\n      this.onKeyDown(e);\n    }\n  }\n\n  emitKeyUp(e) {\n    if (this.onKeyUp) {\n      this.onKeyUp(e);\n    }\n  }\n\n  emitContextMenu(e) {\n    if (this.onContextMenu) {\n      this.onContextMenu(this._convertViewToModelMouseEvent(e));\n    }\n  }\n\n  emitMouseMove(e) {\n    if (this.onMouseMove) {\n      this.onMouseMove(this._convertViewToModelMouseEvent(e));\n    }\n  }\n\n  emitMouseLeave(e) {\n    if (this.onMouseLeave) {\n      this.onMouseLeave(this._convertViewToModelMouseEvent(e));\n    }\n  }\n\n  emitMouseDown(e) {\n    if (this.onMouseDown) {\n      this.onMouseDown(this._convertViewToModelMouseEvent(e));\n    }\n  }\n\n  emitMouseUp(e) {\n    if (this.onMouseUp) {\n      this.onMouseUp(this._convertViewToModelMouseEvent(e));\n    }\n  }\n\n  emitMouseDrag(e) {\n    if (this.onMouseDrag) {\n      this.onMouseDrag(this._convertViewToModelMouseEvent(e));\n    }\n  }\n\n  emitMouseDrop(e) {\n    if (this.onMouseDrop) {\n      this.onMouseDrop(this._convertViewToModelMouseEvent(e));\n    }\n  }\n\n  emitMouseDropCanceled() {\n    if (this.onMouseDropCanceled) {\n      this.onMouseDropCanceled();\n    }\n  }\n\n  emitMouseWheel(e) {\n    if (this.onMouseWheel) {\n      this.onMouseWheel(e);\n    }\n  }\n\n  _convertViewToModelMouseEvent(e) {\n    if (e.target) {\n      return {\n        event: e.event,\n        target: this._convertViewToModelMouseTarget(e.target)\n      };\n    }\n\n    return e;\n  }\n\n  _convertViewToModelMouseTarget(target) {\n    return ViewUserInputEvents.convertViewToModelMouseTarget(target, this._coordinatesConverter);\n  }\n\n  static convertViewToModelMouseTarget(target, coordinatesConverter) {\n    return new ExternalMouseTarget(target.element, target.type, target.mouseColumn, target.position ? coordinatesConverter.convertViewPositionToModelPosition(target.position) : null, target.range ? coordinatesConverter.convertViewRangeToModelRange(target.range) : null, target.detail);\n  }\n\n}\n\nclass ExternalMouseTarget {\n  constructor(element, type, mouseColumn, position, range, detail) {\n    this.element = element;\n    this.type = type;\n    this.mouseColumn = mouseColumn;\n    this.position = position;\n    this.range = range;\n    this.detail = detail;\n  }\n\n  toString() {\n    return MouseTarget.toString(this);\n  }\n\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/editor/browser/view/viewUserInputEvents.js"],"names":["MouseTarget","ViewUserInputEvents","constructor","coordinatesConverter","onKeyDown","onKeyUp","onContextMenu","onMouseMove","onMouseLeave","onMouseDown","onMouseUp","onMouseDrag","onMouseDrop","onMouseDropCanceled","onMouseWheel","_coordinatesConverter","emitKeyDown","e","emitKeyUp","emitContextMenu","_convertViewToModelMouseEvent","emitMouseMove","emitMouseLeave","emitMouseDown","emitMouseUp","emitMouseDrag","emitMouseDrop","emitMouseDropCanceled","emitMouseWheel","target","event","_convertViewToModelMouseTarget","convertViewToModelMouseTarget","ExternalMouseTarget","element","type","mouseColumn","position","convertViewPositionToModelPosition","range","convertViewRangeToModelRange","detail","toString"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { MouseTarget } from '../controller/mouseTarget.js';\nexport class ViewUserInputEvents {\n    constructor(coordinatesConverter) {\n        this.onKeyDown = null;\n        this.onKeyUp = null;\n        this.onContextMenu = null;\n        this.onMouseMove = null;\n        this.onMouseLeave = null;\n        this.onMouseDown = null;\n        this.onMouseUp = null;\n        this.onMouseDrag = null;\n        this.onMouseDrop = null;\n        this.onMouseDropCanceled = null;\n        this.onMouseWheel = null;\n        this._coordinatesConverter = coordinatesConverter;\n    }\n    emitKeyDown(e) {\n        if (this.onKeyDown) {\n            this.onKeyDown(e);\n        }\n    }\n    emitKeyUp(e) {\n        if (this.onKeyUp) {\n            this.onKeyUp(e);\n        }\n    }\n    emitContextMenu(e) {\n        if (this.onContextMenu) {\n            this.onContextMenu(this._convertViewToModelMouseEvent(e));\n        }\n    }\n    emitMouseMove(e) {\n        if (this.onMouseMove) {\n            this.onMouseMove(this._convertViewToModelMouseEvent(e));\n        }\n    }\n    emitMouseLeave(e) {\n        if (this.onMouseLeave) {\n            this.onMouseLeave(this._convertViewToModelMouseEvent(e));\n        }\n    }\n    emitMouseDown(e) {\n        if (this.onMouseDown) {\n            this.onMouseDown(this._convertViewToModelMouseEvent(e));\n        }\n    }\n    emitMouseUp(e) {\n        if (this.onMouseUp) {\n            this.onMouseUp(this._convertViewToModelMouseEvent(e));\n        }\n    }\n    emitMouseDrag(e) {\n        if (this.onMouseDrag) {\n            this.onMouseDrag(this._convertViewToModelMouseEvent(e));\n        }\n    }\n    emitMouseDrop(e) {\n        if (this.onMouseDrop) {\n            this.onMouseDrop(this._convertViewToModelMouseEvent(e));\n        }\n    }\n    emitMouseDropCanceled() {\n        if (this.onMouseDropCanceled) {\n            this.onMouseDropCanceled();\n        }\n    }\n    emitMouseWheel(e) {\n        if (this.onMouseWheel) {\n            this.onMouseWheel(e);\n        }\n    }\n    _convertViewToModelMouseEvent(e) {\n        if (e.target) {\n            return {\n                event: e.event,\n                target: this._convertViewToModelMouseTarget(e.target)\n            };\n        }\n        return e;\n    }\n    _convertViewToModelMouseTarget(target) {\n        return ViewUserInputEvents.convertViewToModelMouseTarget(target, this._coordinatesConverter);\n    }\n    static convertViewToModelMouseTarget(target, coordinatesConverter) {\n        return new ExternalMouseTarget(target.element, target.type, target.mouseColumn, target.position ? coordinatesConverter.convertViewPositionToModelPosition(target.position) : null, target.range ? coordinatesConverter.convertViewRangeToModelRange(target.range) : null, target.detail);\n    }\n}\nclass ExternalMouseTarget {\n    constructor(element, type, mouseColumn, position, range, detail) {\n        this.element = element;\n        this.type = type;\n        this.mouseColumn = mouseColumn;\n        this.position = position;\n        this.range = range;\n        this.detail = detail;\n    }\n    toString() {\n        return MouseTarget.toString(this);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}