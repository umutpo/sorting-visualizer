{"ast":null,"code":"import e, { createContext as t, Component as r, Children as n, cloneElement as i } from \"react\";\nimport \"prop-types\";\nimport { getFlippedElementPositionsBeforeUpdate as o, onFlipKeyUpdate as p, utilities as l, constants as a, spring as s } from \"flip-toolkit\";\n\nfunction c(e, t) {\n  if (null == e) return {};\n  var r,\n      n,\n      i = {},\n      o = Object.keys(e);\n\n  for (n = 0; n < o.length; n++) t.indexOf(r = o[n]) >= 0 || (i[r] = e[r]);\n\n  return i;\n}\n\nvar d = t({}),\n    f = t(\"portal\"),\n    u = function (t) {\n  var r, n;\n\n  function i() {\n    var e;\n    return (e = t.apply(this, arguments) || this).inProgressAnimations = {}, e.flipCallbacks = {}, e.el = void 0, e;\n  }\n\n  n = t, (r = i).prototype = Object.create(n.prototype), r.prototype.constructor = r, r.__proto__ = n;\n  var l = i.prototype;\n  return l.getSnapshotBeforeUpdate = function (e) {\n    return e.flipKey !== this.props.flipKey && this.el ? o({\n      element: this.el,\n      flipCallbacks: this.flipCallbacks,\n      inProgressAnimations: this.inProgressAnimations,\n      portalKey: this.props.portalKey\n    }) : null;\n  }, l.componentDidUpdate = function (e, t, r) {\n    this.props.flipKey !== e.flipKey && this.el && p({\n      flippedElementPositionsBeforeUpdate: r.flippedElementPositions,\n      cachedOrderedFlipIds: r.cachedOrderedFlipIds,\n      containerEl: this.el,\n      inProgressAnimations: this.inProgressAnimations,\n      flipCallbacks: this.flipCallbacks,\n      applyTransformOrigin: this.props.applyTransformOrigin,\n      spring: this.props.spring,\n      debug: this.props.debug,\n      portalKey: this.props.portalKey,\n      staggerConfig: this.props.staggerConfig,\n      handleEnterUpdateDelete: this.props.handleEnterUpdateDelete,\n      decisionData: {\n        previous: e.decisionData,\n        current: this.props.decisionData\n      },\n      onComplete: this.props.onComplete,\n      onStart: this.props.onStart\n    });\n  }, l.render = function () {\n    var t = this,\n        r = this.props,\n        n = r.portalKey,\n        i = e.createElement(d.Provider, {\n      value: this.flipCallbacks\n    }, e.createElement(r.element, {\n      className: r.className,\n      ref: function (e) {\n        return t.el = e;\n      }\n    }, this.props.children));\n    return n && (i = e.createElement(f.Provider, {\n      value: n\n    }, i)), i;\n  }, i;\n}(r);\n\nu.defaultProps = {\n  applyTransformOrigin: !0,\n  element: \"div\"\n};\n\nvar h = function (e) {\n  var t,\n      r = e.children,\n      o = e.flipId,\n      p = e.inverseFlipId,\n      s = e.portalKey,\n      d = c(e, [\"children\", \"flipId\", \"inverseFlipId\", \"portalKey\"]),\n      f = r,\n      u = function (e) {\n    return \"function\" == typeof e;\n  }(f);\n\n  if (!u) try {\n    f = n.only(r);\n  } catch (e) {\n    throw new Error(\"Each Flipped component must wrap a single child\");\n  }\n  d.scale || d.translate || d.opacity || l.assign(d, {\n    translate: !0,\n    scale: !0,\n    opacity: !0\n  });\n  var h = ((t = {})[a.DATA_FLIP_CONFIG] = JSON.stringify(d), t);\n  return void 0 !== o ? h[a.DATA_FLIP_ID] = String(o) : p && (h[a.DATA_INVERSE_FLIP_ID] = String(p)), void 0 !== s && (h[a.DATA_PORTAL_KEY] = s), u ? f(h) : i(f, h);\n},\n    m = function (t) {\n  var r = t.children,\n      n = t.flipId,\n      i = t.shouldFlip,\n      o = t.shouldInvert,\n      p = t.onAppear,\n      a = t.onStart,\n      s = t.onStartImmediate,\n      u = t.onComplete,\n      m = t.onExit,\n      g = t.onSpringUpdate,\n      y = c(t, [\"children\", \"flipId\", \"shouldFlip\", \"shouldInvert\", \"onAppear\", \"onStart\", \"onStartImmediate\", \"onComplete\", \"onExit\", \"onSpringUpdate\"]);\n  return r ? y.inverseFlipId ? e.createElement(h, Object.assign({}, y), r) : e.createElement(f.Consumer, null, function (t) {\n    return e.createElement(d.Consumer, null, function (c) {\n      return l.isObject(c) && n && (c[n] = {\n        shouldFlip: i,\n        shouldInvert: o,\n        onAppear: p,\n        onStart: a,\n        onStartImmediate: s,\n        onComplete: u,\n        onExit: m,\n        onSpringUpdate: g\n      }), e.createElement(h, Object.assign({\n        flipId: n\n      }, y, {\n        portalKey: t\n      }), r);\n    });\n  }) : null;\n};\n\nm.displayName = \"Flipped\";\n\nvar g = function (e) {\n  var t;\n  return i(e.children, ((t = {})[a.DATA_EXIT_CONTAINER] = !0, t));\n};\n\nexport { g as ExitContainer, m as Flipped, u as Flipper, s as spring };","map":{"version":3,"sources":["../src/Flipper/context.ts","../src/Flipper/index.tsx","../src/Flipped/index.tsx","../src/ExitContainer/index.tsx"],"names":["FlipContext","createContext","PortalContext","Flipper","Component","applyTransformOrigin","element","_this","undefined","getSnapshotBeforeUpdate","prevProps","flipKey","this","props","el","getFlippedElementPositionsBeforeUpdate","flipCallbacks","inProgressAnimations","portalKey","componentDidUpdate","_prevState","cachedData","onFlipKeyUpdate","flippedElementPositionsBeforeUpdate","flippedElementPositions","cachedOrderedFlipIds","containerEl","spring","debug","staggerConfig","handleEnterUpdateDelete","decisionData","previous","current","onComplete","onStart","render","className","flipperMarkup","React","Provider","value","ref","_this2","children","child","Flipped","flipId","inverseFlipId","rest","isFunctionAsChildren","isFunction","Children","only","e","Error","scale","translate","opacity","utilities","assign","dataAttributes","constants","DATA_FLIP_CONFIG","JSON","stringify","DATA_FLIP_ID","String","DATA_INVERSE_FLIP_ID","DATA_PORTAL_KEY","cloneElement","FlippedWithContext","shouldFlip","shouldInvert","onAppear","onStartImmediate","onExit","onSpringUpdate","Consumer","isObject","data","displayName","ExitContainer","DATA_EXIT_CONTAINER"],"mappings":"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","sourcesContent":["import { createContext } from 'react'\nimport { FlipCallbacks } from 'flip-toolkit/lib/types'\n\nexport const FlipContext = createContext({} as FlipCallbacks)\nexport const PortalContext = createContext('portal')\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  getFlippedElementPositionsBeforeUpdate,\n  onFlipKeyUpdate\n} from 'flip-toolkit'\nimport {\n  FlipperProps,\n  InProgressAnimations,\n  FlipCallbacks\n} from 'flip-toolkit/lib/types'\nimport { FlippedElementPositionsBeforeUpdateReturnVals } from 'flip-toolkit/lib/flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate/types'\nimport { FlipContext, PortalContext } from './context'\n\nclass Flipper extends Component<FlipperProps> {\n  static defaultProps = {\n    applyTransformOrigin: true,\n    element: 'div'\n  }\n\n  private inProgressAnimations: InProgressAnimations = {}\n  private flipCallbacks: FlipCallbacks = {}\n  private el?: HTMLElement = undefined\n\n  getSnapshotBeforeUpdate(prevProps: FlipperProps) {\n    if (prevProps.flipKey !== this.props.flipKey && this.el) {\n      return getFlippedElementPositionsBeforeUpdate({\n        element: this.el,\n        // if onExit callbacks exist here, we'll cache the DOM node\n        flipCallbacks: this.flipCallbacks,\n        inProgressAnimations: this.inProgressAnimations,\n        portalKey: this.props.portalKey\n      })\n    }\n    return null\n  }\n\n  componentDidUpdate(\n    prevProps: FlipperProps,\n    _prevState: any,\n    cachedData: FlippedElementPositionsBeforeUpdateReturnVals\n  ) {\n    if (this.props.flipKey !== prevProps.flipKey && this.el) {\n      onFlipKeyUpdate({\n        flippedElementPositionsBeforeUpdate: cachedData.flippedElementPositions,\n        cachedOrderedFlipIds: cachedData.cachedOrderedFlipIds,\n        containerEl: this.el,\n        inProgressAnimations: this.inProgressAnimations,\n        flipCallbacks: this.flipCallbacks,\n        applyTransformOrigin: this.props.applyTransformOrigin,\n        spring: this.props.spring,\n        debug: this.props.debug,\n        portalKey: this.props.portalKey,\n        staggerConfig: this.props.staggerConfig,\n        handleEnterUpdateDelete: this.props.handleEnterUpdateDelete,\n        decisionData: {\n          previous: prevProps.decisionData,\n          current: this.props.decisionData\n        },\n        onComplete: this.props.onComplete,\n        onStart: this.props.onStart\n      })\n    }\n  }\n\n  public render() {\n    const { element, className, portalKey } = this.props\n    const Element = element\n\n    let flipperMarkup = (\n      <FlipContext.Provider value={this.flipCallbacks}>\n        {/*\n        // @ts-ignore */}\n        <Element\n          className={className}\n          ref={(el: HTMLElement) => (this.el = el)}\n        >\n          {this.props.children}\n        </Element>\n      </FlipContext.Provider>\n    )\n\n    if (portalKey) {\n      flipperMarkup = (\n        <PortalContext.Provider value={portalKey}>\n          {flipperMarkup}\n        </PortalContext.Provider>\n      )\n    }\n\n    return flipperMarkup\n  }\n}\n// @ts-ignore\n\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  Flipper.propTypes = {\n    flipKey: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.bool\n    ]),\n    children: PropTypes.node.isRequired,\n    spring: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    applyTransformOrigin: PropTypes.bool,\n    debug: PropTypes.bool,\n    element: PropTypes.string,\n    className: PropTypes.string,\n    portalKey: PropTypes.string,\n    staggerConfig: PropTypes.object,\n    decisionData: PropTypes.any,\n    handleEnterUpdateDelete: PropTypes.func,\n    onComplete: PropTypes.func,\n    onStart: PropTypes.func\n  }\n}\n\nexport default Flipper\n","import React, {\n  FunctionComponent,\n  Children,\n  cloneElement,\n  ReactElement\n} from 'react'\nimport PropTypes from 'prop-types'\nimport { utilities, constants } from 'flip-toolkit'\nimport { FlippedProps, SerializableFlippedProps } from 'flip-toolkit/lib/types'\nimport { FlipContext, PortalContext } from '../Flipper/context'\n\nfunction isFunction(child: any): child is Function {\n  return typeof child === 'function'\n}\n\n// This wrapper creates child components for the main Flipper component\nexport const Flipped: FunctionComponent<SerializableFlippedProps> = ({\n  children,\n  flipId,\n  inverseFlipId,\n  portalKey,\n  ...rest\n}) => {\n  let child = children\n  const isFunctionAsChildren = isFunction(child)\n\n  if (!isFunctionAsChildren) {\n    try {\n      child = Children.only(children)\n    } catch (e) {\n      throw new Error('Each Flipped component must wrap a single child')\n    }\n  }\n\n  // if nothing is being animated, assume everything is being animated\n  if (!rest.scale && !rest.translate && !rest.opacity) {\n    utilities.assign(rest, {\n      translate: true,\n      scale: true,\n      opacity: true\n    })\n  }\n\n  const dataAttributes: Record<string, string | undefined> = {\n    [constants.DATA_FLIP_CONFIG]: JSON.stringify(rest)\n  }\n\n  if (flipId !== undefined)\n    dataAttributes[constants.DATA_FLIP_ID] = String(flipId)\n  else if (inverseFlipId)\n    dataAttributes[constants.DATA_INVERSE_FLIP_ID] = String(inverseFlipId)\n  if (portalKey !== undefined) {\n    dataAttributes[constants.DATA_PORTAL_KEY] = portalKey\n  }\n  if (isFunctionAsChildren) {\n    return (child as Function)(dataAttributes)\n  }\n  return cloneElement(child as ReactElement<any>, dataAttributes)\n}\n// @ts-ignore\nexport const FlippedWithContext: FunctionComponent<FlippedProps> = ({\n  children,\n  flipId,\n  shouldFlip,\n  shouldInvert,\n  onAppear,\n  onStart,\n  onStartImmediate,\n  onComplete,\n  onExit,\n  onSpringUpdate,\n  ...rest\n}) => {\n  if (!children) {\n    return null\n  }\n  if (rest.inverseFlipId) {\n    return <Flipped {...rest}>{children}</Flipped>\n  }\n\n  return (\n    <PortalContext.Consumer>\n      {portalKey => (\n        <FlipContext.Consumer>\n          {data => {\n            // if there is no surrounding Flipper component,\n            // we don't want to throw an error, so check\n            // that data exists and is not the default string\n            if (utilities.isObject(data) && flipId) {\n              data[flipId] = {\n                shouldFlip,\n                shouldInvert,\n                onAppear,\n                onStart,\n                onStartImmediate,\n                onComplete,\n                onExit,\n                onSpringUpdate\n              }\n            }\n            return (\n              <Flipped flipId={flipId} {...rest} portalKey={portalKey}>\n                {children}\n              </Flipped>\n            )\n          }}\n        </FlipContext.Consumer>\n      )}\n    </PortalContext.Consumer>\n  )\n}\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  FlippedWithContext.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n    inverseFlipId: PropTypes.string,\n    flipId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    opacity: PropTypes.bool,\n    translate: PropTypes.bool,\n    scale: PropTypes.bool,\n    transformOrigin: PropTypes.string,\n    spring: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    onStart: PropTypes.func,\n    onStartImmediate: PropTypes.func,\n    onComplete: PropTypes.func,\n    onAppear: PropTypes.func,\n    onSpringUpdate: PropTypes.func,\n    shouldFlip: PropTypes.func,\n    shouldInvert: PropTypes.func,\n    onExit: PropTypes.func,\n    portalKey: PropTypes.string,\n    stagger: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n  }\n}\n\nFlippedWithContext.displayName = 'Flipped'\n\nexport default FlippedWithContext\n","import { FunctionComponent, cloneElement, ReactElement } from 'react'\nimport { constants } from 'flip-toolkit'\n\nconst ExitContainer: FunctionComponent = ({ children }) => {\n  return cloneElement(children as ReactElement<any>, {\n    [constants.DATA_EXIT_CONTAINER]: true\n  })\n}\n\nexport default ExitContainer\n"]},"metadata":{},"sourceType":"module"}