{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { createCancelablePromise, TimeoutTimer } from '../../../base/common/async.js';\nimport { RGBA } from '../../../base/common/color.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { hash } from '../../../base/common/hash.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { Range } from '../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { ColorProviderRegistry } from '../../common/modes.js';\nimport { getColors } from './color.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nconst MAX_DECORATORS = 500;\nlet ColorDetector = class ColorDetector extends Disposable {\n  constructor(_editor, _codeEditorService, _configurationService) {\n    super();\n    this._editor = _editor;\n    this._codeEditorService = _codeEditorService;\n    this._configurationService = _configurationService;\n    this._localToDispose = this._register(new DisposableStore());\n    this._decorationsIds = [];\n    this._colorDatas = new Map();\n    this._colorDecoratorIds = [];\n    this._decorationsTypes = new Set();\n\n    this._register(_editor.onDidChangeModel(() => {\n      this._isEnabled = this.isEnabled();\n      this.onModelChanged();\n    }));\n\n    this._register(_editor.onDidChangeModelLanguage(() => this.onModelChanged()));\n\n    this._register(ColorProviderRegistry.onDidChange(() => this.onModelChanged()));\n\n    this._register(_editor.onDidChangeConfiguration(() => {\n      let prevIsEnabled = this._isEnabled;\n      this._isEnabled = this.isEnabled();\n\n      if (prevIsEnabled !== this._isEnabled) {\n        if (this._isEnabled) {\n          this.onModelChanged();\n        } else {\n          this.removeAllDecorations();\n        }\n      }\n    }));\n\n    this._timeoutTimer = null;\n    this._computePromise = null;\n    this._isEnabled = this.isEnabled();\n    this.onModelChanged();\n  }\n\n  isEnabled() {\n    const model = this._editor.getModel();\n\n    if (!model) {\n      return false;\n    }\n\n    const languageId = model.getLanguageId(); // handle deprecated settings. [languageId].colorDecorators.enable\n\n    const deprecatedConfig = this._configurationService.getValue(languageId);\n\n    if (deprecatedConfig && typeof deprecatedConfig === 'object') {\n      const colorDecorators = deprecatedConfig['colorDecorators']; // deprecatedConfig.valueOf('.colorDecorators.enable');\n\n      if (colorDecorators && colorDecorators['enable'] !== undefined && !colorDecorators['enable']) {\n        return colorDecorators['enable'];\n      }\n    }\n\n    return this._editor.getOption(17\n    /* colorDecorators */\n    );\n  }\n\n  static get(editor) {\n    return editor.getContribution(this.ID);\n  }\n\n  dispose() {\n    this.stop();\n    this.removeAllDecorations();\n    super.dispose();\n  }\n\n  onModelChanged() {\n    this.stop();\n\n    if (!this._isEnabled) {\n      return;\n    }\n\n    const model = this._editor.getModel();\n\n    if (!model || !ColorProviderRegistry.has(model)) {\n      return;\n    }\n\n    this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\n      if (!this._timeoutTimer) {\n        this._timeoutTimer = new TimeoutTimer();\n\n        this._timeoutTimer.cancelAndSet(() => {\n          this._timeoutTimer = null;\n          this.beginCompute();\n        }, ColorDetector.RECOMPUTE_TIME);\n      }\n    }));\n\n    this.beginCompute();\n  }\n\n  beginCompute() {\n    this._computePromise = createCancelablePromise(token => {\n      const model = this._editor.getModel();\n\n      if (!model) {\n        return Promise.resolve([]);\n      }\n\n      return getColors(model, token);\n    });\n\n    this._computePromise.then(colorInfos => {\n      this.updateDecorations(colorInfos);\n      this.updateColorDecorators(colorInfos);\n      this._computePromise = null;\n    }, onUnexpectedError);\n  }\n\n  stop() {\n    if (this._timeoutTimer) {\n      this._timeoutTimer.cancel();\n\n      this._timeoutTimer = null;\n    }\n\n    if (this._computePromise) {\n      this._computePromise.cancel();\n\n      this._computePromise = null;\n    }\n\n    this._localToDispose.clear();\n  }\n\n  updateDecorations(colorDatas) {\n    const decorations = colorDatas.map(c => ({\n      range: {\n        startLineNumber: c.colorInfo.range.startLineNumber,\n        startColumn: c.colorInfo.range.startColumn,\n        endLineNumber: c.colorInfo.range.endLineNumber,\n        endColumn: c.colorInfo.range.endColumn\n      },\n      options: ModelDecorationOptions.EMPTY\n    }));\n    this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, decorations);\n    this._colorDatas = new Map();\n\n    this._decorationsIds.forEach((id, i) => this._colorDatas.set(id, colorDatas[i]));\n  }\n\n  updateColorDecorators(colorData) {\n    let decorations = [];\n    let newDecorationsTypes = {};\n\n    for (let i = 0; i < colorData.length && decorations.length < MAX_DECORATORS; i++) {\n      const {\n        red,\n        green,\n        blue,\n        alpha\n      } = colorData[i].colorInfo.color;\n      const rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\n      let subKey = hash(`rgba(${rgba.r},${rgba.g},${rgba.b},${rgba.a})`).toString(16);\n      let color = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\n      let key = 'colorBox-' + subKey;\n\n      if (!this._decorationsTypes.has(key) && !newDecorationsTypes[key]) {\n        this._codeEditorService.registerDecorationType('color-detector-color', key, {\n          before: {\n            contentText: ' ',\n            border: 'solid 0.1em #000',\n            margin: '0.1em 0.2em 0 0.2em',\n            width: '0.8em',\n            height: '0.8em',\n            backgroundColor: color\n          },\n          dark: {\n            before: {\n              border: 'solid 0.1em #eee'\n            }\n          }\n        }, undefined, this._editor);\n      }\n\n      newDecorationsTypes[key] = true;\n      decorations.push({\n        range: {\n          startLineNumber: colorData[i].colorInfo.range.startLineNumber,\n          startColumn: colorData[i].colorInfo.range.startColumn,\n          endLineNumber: colorData[i].colorInfo.range.endLineNumber,\n          endColumn: colorData[i].colorInfo.range.endColumn\n        },\n        options: this._codeEditorService.resolveDecorationOptions(key, true)\n      });\n    }\n\n    this._decorationsTypes.forEach(subType => {\n      if (!newDecorationsTypes[subType]) {\n        this._codeEditorService.removeDecorationType(subType);\n      }\n    });\n\n    this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, decorations);\n  }\n\n  removeAllDecorations() {\n    this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, []);\n    this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, []);\n\n    this._decorationsTypes.forEach(subType => {\n      this._codeEditorService.removeDecorationType(subType);\n    });\n  }\n\n  getColorData(position) {\n    const model = this._editor.getModel();\n\n    if (!model) {\n      return null;\n    }\n\n    const decorations = model.getDecorationsInRange(Range.fromPositions(position, position)).filter(d => this._colorDatas.has(d.id));\n\n    if (decorations.length === 0) {\n      return null;\n    }\n\n    return this._colorDatas.get(decorations[0].id);\n  }\n\n};\nColorDetector.ID = 'editor.contrib.colorDetector';\nColorDetector.RECOMPUTE_TIME = 1000; // ms\n\nColorDetector = __decorate([__param(1, ICodeEditorService), __param(2, IConfigurationService)], ColorDetector);\nexport { ColorDetector };\nregisterEditorContribution(ColorDetector.ID, ColorDetector);","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/colorDetector.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","createCancelablePromise","TimeoutTimer","RGBA","onUnexpectedError","hash","Disposable","DisposableStore","registerEditorContribution","ICodeEditorService","Range","ModelDecorationOptions","ColorProviderRegistry","getColors","IConfigurationService","MAX_DECORATORS","ColorDetector","constructor","_editor","_codeEditorService","_configurationService","_localToDispose","_register","_decorationsIds","_colorDatas","Map","_colorDecoratorIds","_decorationsTypes","Set","onDidChangeModel","_isEnabled","isEnabled","onModelChanged","onDidChangeModelLanguage","onDidChange","onDidChangeConfiguration","prevIsEnabled","removeAllDecorations","_timeoutTimer","_computePromise","model","getModel","languageId","getLanguageId","deprecatedConfig","getValue","colorDecorators","undefined","getOption","get","editor","getContribution","ID","dispose","stop","has","add","onDidChangeModelContent","cancelAndSet","beginCompute","RECOMPUTE_TIME","token","Promise","resolve","then","colorInfos","updateDecorations","updateColorDecorators","cancel","clear","colorDatas","decorations","map","range","startLineNumber","colorInfo","startColumn","endLineNumber","endColumn","options","EMPTY","deltaDecorations","forEach","id","set","colorData","newDecorationsTypes","red","green","blue","alpha","color","rgba","Math","round","subKey","g","b","a","toString","registerDecorationType","before","contentText","border","margin","width","height","backgroundColor","dark","push","resolveDecorationOptions","subType","removeDecorationType","getColorData","position","getDecorationsInRange","fromPositions","filter"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createCancelablePromise, TimeoutTimer } from '../../../base/common/async.js';\nimport { RGBA } from '../../../base/common/color.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { hash } from '../../../base/common/hash.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { Range } from '../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { ColorProviderRegistry } from '../../common/modes.js';\nimport { getColors } from './color.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nconst MAX_DECORATORS = 500;\nlet ColorDetector = class ColorDetector extends Disposable {\n    constructor(_editor, _codeEditorService, _configurationService) {\n        super();\n        this._editor = _editor;\n        this._codeEditorService = _codeEditorService;\n        this._configurationService = _configurationService;\n        this._localToDispose = this._register(new DisposableStore());\n        this._decorationsIds = [];\n        this._colorDatas = new Map();\n        this._colorDecoratorIds = [];\n        this._decorationsTypes = new Set();\n        this._register(_editor.onDidChangeModel(() => {\n            this._isEnabled = this.isEnabled();\n            this.onModelChanged();\n        }));\n        this._register(_editor.onDidChangeModelLanguage(() => this.onModelChanged()));\n        this._register(ColorProviderRegistry.onDidChange(() => this.onModelChanged()));\n        this._register(_editor.onDidChangeConfiguration(() => {\n            let prevIsEnabled = this._isEnabled;\n            this._isEnabled = this.isEnabled();\n            if (prevIsEnabled !== this._isEnabled) {\n                if (this._isEnabled) {\n                    this.onModelChanged();\n                }\n                else {\n                    this.removeAllDecorations();\n                }\n            }\n        }));\n        this._timeoutTimer = null;\n        this._computePromise = null;\n        this._isEnabled = this.isEnabled();\n        this.onModelChanged();\n    }\n    isEnabled() {\n        const model = this._editor.getModel();\n        if (!model) {\n            return false;\n        }\n        const languageId = model.getLanguageId();\n        // handle deprecated settings. [languageId].colorDecorators.enable\n        const deprecatedConfig = this._configurationService.getValue(languageId);\n        if (deprecatedConfig && typeof deprecatedConfig === 'object') {\n            const colorDecorators = deprecatedConfig['colorDecorators']; // deprecatedConfig.valueOf('.colorDecorators.enable');\n            if (colorDecorators && colorDecorators['enable'] !== undefined && !colorDecorators['enable']) {\n                return colorDecorators['enable'];\n            }\n        }\n        return this._editor.getOption(17 /* colorDecorators */);\n    }\n    static get(editor) {\n        return editor.getContribution(this.ID);\n    }\n    dispose() {\n        this.stop();\n        this.removeAllDecorations();\n        super.dispose();\n    }\n    onModelChanged() {\n        this.stop();\n        if (!this._isEnabled) {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !ColorProviderRegistry.has(model)) {\n            return;\n        }\n        this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\n            if (!this._timeoutTimer) {\n                this._timeoutTimer = new TimeoutTimer();\n                this._timeoutTimer.cancelAndSet(() => {\n                    this._timeoutTimer = null;\n                    this.beginCompute();\n                }, ColorDetector.RECOMPUTE_TIME);\n            }\n        }));\n        this.beginCompute();\n    }\n    beginCompute() {\n        this._computePromise = createCancelablePromise(token => {\n            const model = this._editor.getModel();\n            if (!model) {\n                return Promise.resolve([]);\n            }\n            return getColors(model, token);\n        });\n        this._computePromise.then((colorInfos) => {\n            this.updateDecorations(colorInfos);\n            this.updateColorDecorators(colorInfos);\n            this._computePromise = null;\n        }, onUnexpectedError);\n    }\n    stop() {\n        if (this._timeoutTimer) {\n            this._timeoutTimer.cancel();\n            this._timeoutTimer = null;\n        }\n        if (this._computePromise) {\n            this._computePromise.cancel();\n            this._computePromise = null;\n        }\n        this._localToDispose.clear();\n    }\n    updateDecorations(colorDatas) {\n        const decorations = colorDatas.map(c => ({\n            range: {\n                startLineNumber: c.colorInfo.range.startLineNumber,\n                startColumn: c.colorInfo.range.startColumn,\n                endLineNumber: c.colorInfo.range.endLineNumber,\n                endColumn: c.colorInfo.range.endColumn\n            },\n            options: ModelDecorationOptions.EMPTY\n        }));\n        this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, decorations);\n        this._colorDatas = new Map();\n        this._decorationsIds.forEach((id, i) => this._colorDatas.set(id, colorDatas[i]));\n    }\n    updateColorDecorators(colorData) {\n        let decorations = [];\n        let newDecorationsTypes = {};\n        for (let i = 0; i < colorData.length && decorations.length < MAX_DECORATORS; i++) {\n            const { red, green, blue, alpha } = colorData[i].colorInfo.color;\n            const rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\n            let subKey = hash(`rgba(${rgba.r},${rgba.g},${rgba.b},${rgba.a})`).toString(16);\n            let color = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\n            let key = 'colorBox-' + subKey;\n            if (!this._decorationsTypes.has(key) && !newDecorationsTypes[key]) {\n                this._codeEditorService.registerDecorationType('color-detector-color', key, {\n                    before: {\n                        contentText: ' ',\n                        border: 'solid 0.1em #000',\n                        margin: '0.1em 0.2em 0 0.2em',\n                        width: '0.8em',\n                        height: '0.8em',\n                        backgroundColor: color\n                    },\n                    dark: {\n                        before: {\n                            border: 'solid 0.1em #eee'\n                        }\n                    }\n                }, undefined, this._editor);\n            }\n            newDecorationsTypes[key] = true;\n            decorations.push({\n                range: {\n                    startLineNumber: colorData[i].colorInfo.range.startLineNumber,\n                    startColumn: colorData[i].colorInfo.range.startColumn,\n                    endLineNumber: colorData[i].colorInfo.range.endLineNumber,\n                    endColumn: colorData[i].colorInfo.range.endColumn\n                },\n                options: this._codeEditorService.resolveDecorationOptions(key, true)\n            });\n        }\n        this._decorationsTypes.forEach(subType => {\n            if (!newDecorationsTypes[subType]) {\n                this._codeEditorService.removeDecorationType(subType);\n            }\n        });\n        this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, decorations);\n    }\n    removeAllDecorations() {\n        this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, []);\n        this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, []);\n        this._decorationsTypes.forEach(subType => {\n            this._codeEditorService.removeDecorationType(subType);\n        });\n    }\n    getColorData(position) {\n        const model = this._editor.getModel();\n        if (!model) {\n            return null;\n        }\n        const decorations = model\n            .getDecorationsInRange(Range.fromPositions(position, position))\n            .filter(d => this._colorDatas.has(d.id));\n        if (decorations.length === 0) {\n            return null;\n        }\n        return this._colorDatas.get(decorations[0].id);\n    }\n};\nColorDetector.ID = 'editor.contrib.colorDetector';\nColorDetector.RECOMPUTE_TIME = 1000; // ms\nColorDetector = __decorate([\n    __param(1, ICodeEditorService),\n    __param(2, IConfigurationService)\n], ColorDetector);\nexport { ColorDetector };\nregisterEditorContribution(ColorDetector.ID, ColorDetector);\n"]},"metadata":{},"sourceType":"module"}