{"ast":null,"code":"var _jsxFileName = \"/home/umut/Documents/cs/cs410/Project2Group14/src/App.js\";\nimport './App.css';\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport MonacoEditor from 'react-monaco-editor';\nimport { Flipped, Flipper } from \"react-flip-toolkit\";\nimport Grid from '@mui/material/Grid';\nimport { FaArrowRight, FaArrowLeft, FaPlay } from 'react-icons/fa';\nimport { GrPowerReset } from 'react-icons/gr';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.body2,\n    padding: theme.spacing(2),\n    fontSize: '75%',\n    textAlign: 'center',\n    alignContent: 'center',\n    color: theme.palette.text.primary,\n    width: 35,\n    height: 35\n  };\n});\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    var inputArray = Array.from({\n      length: 12\n    }, () => Math.floor(Math.random() * 100));\n    this.state = {\n      array: inputArray,\n      originalArray: inputArray,\n      logIndex: 0,\n      logs: [],\n      runtime: 0,\n      highlighted: [],\n      buttonLock: true,\n      buttonDisabled: true,\n      sortSpeed: 100,\n      buttonSpeedLabel: \"fastest\",\n      isPlaying: false\n    };\n    this.onLogsReturned = this.onLogsReturned.bind(this);\n    this.onRandomizeInput = this.onRandomizeInput.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onLogsReturned(logs) {\n    this.setState({\n      logs: logs,\n      logIndex: 0,\n      buttonLock: false,\n      buttonDisabled: false\n    });\n  }\n\n  onRandomizeInput() {\n    this.setState({\n      logs: [],\n      logIndex: 0,\n      highlighted: [],\n      buttonDisabled: true,\n      array: Array.from({\n        length: 12\n      }, () => Math.floor(Math.random() * 100))\n    });\n  }\n\n  stepForward() {\n    if (this.state.buttonLock) return;\n    const logIndexNext = this.state.logIndex + 1;\n    const logs = this.state.logs;\n\n    if (logIndexNext >= logs.length) {\n      this.setState({\n        highlighted: this.state.array.map((num, index) => index)\n      });\n      return;\n    }\n\n    const currentLog = logs[logIndexNext];\n    this.setState({\n      logIndex: logIndexNext,\n      array: currentLog[\"array\"],\n      highlighted: currentLog[\"indices\"]\n    });\n  }\n\n  stepBack() {\n    if (this.state.buttonLock) return;\n    const logIndex = this.state.logIndex;\n    const logs = this.state.logs;\n\n    if (logIndex <= 0) {\n      return;\n    }\n\n    const prevLog = logs[logIndex - 1];\n    const currentLog = logs[logIndex];\n    this.setState({\n      logIndex: logIndex - 1,\n      array: prevLog[\"array\"],\n      highlighted: currentLog[\"indices\"]\n    });\n  }\n\n  async play() {\n    const timer = ms => new Promise(res => setTimeout(res, ms));\n\n    this.setState({\n      isPlaying: true\n    });\n\n    while (this.state.isPlaying && this.state.logIndex < this.state.logs.length) {\n      this.stepForward();\n      await timer(this.state.sortSpeed);\n    }\n\n    this.setState({\n      isPlaying: false\n    });\n  }\n\n  handleChange(event) {\n    var speedLabel = event.target.value;\n    var sortingSpeed;\n\n    if (speedLabel === \"fastest\") {\n      sortingSpeed = 187.5;\n    } else if (speedLabel === \"fast\") {\n      sortingSpeed = 375;\n    } else if (speedLabel === \"medium\") {\n      sortingSpeed = 750;\n    } else {\n      sortingSpeed = 1500;\n    }\n\n    this.setState({\n      buttonSpeedLabel: speedLabel,\n      sortSpeed: sortingSpeed\n    });\n  }\n\n  reset() {\n    this.setState({\n      logIndex: 0,\n      highlighted: [],\n      array: this.state.originalArray,\n      isPlaying: false\n    });\n  }\n\n  async onAnimationComplete() {\n    // Lock buttons and sleep\n    this.setState({\n      buttonLock: true\n    });\n    await new Promise(r => setTimeout(r, 200));\n    this.setState({\n      highlighted: [],\n      buttonLock: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"App-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"HeaderTitle\",\n              children: \"Sorting Visualizer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"StepCounterTitle\",\n              children: \"Step \" + this.state.logIndex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              className: \"Stack\",\n              direction: \"row\",\n              spacing: 2,\n              children: /*#__PURE__*/_jsxDEV(Flipper, {\n                flipKey: this.state.array.join(''),\n                onComplete: () => this.onAnimationComplete(),\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"list\",\n                  children: this.state.array.map((num, index) => /*#__PURE__*/_jsxDEV(Flipped, {\n                    flipId: num,\n                    children: /*#__PURE__*/_jsxDEV(Item, {\n                      style: this.state.highlighted.includes(index) ? {\n                        backgroundColor: '#BBB15AFF'\n                      } : {},\n                      children: num\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 25\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              className: \"Stack\",\n              direction: \"row\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                disabled: this.state.buttonDisabled,\n                onClick: () => this.stepBack(),\n                children: /*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                disabled: this.state.buttonDisabled,\n                onClick: () => this.stepForward(),\n                children: /*#__PURE__*/_jsxDEV(FaArrowRight, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              className: \"Stack\",\n              direction: \"row\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                disabled: this.state.buttonDisabled || this.state.isPlaying,\n                onClick: () => this.play(),\n                children: /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                disabled: this.state.buttonDisabled,\n                onClick: () => this.reset(),\n                children: /*#__PURE__*/_jsxDEV(GrPowerReset, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n              color: \"primary\",\n              value: this.state.buttonSpeedLabel,\n              exclusive: true,\n              onChange: this.handleChange,\n              children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                value: \"slow\",\n                children: \"1x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                value: \"medium\",\n                children: \"2x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                value: \"fast\",\n                children: \"3x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                value: \"fastest\",\n                children: \"4x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n          onLogsReturned: this.onLogsReturned,\n          onRandomizeInput: this.onRandomizeInput,\n          array: this.state.array\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass CodeEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: \"def sorting_algorithm(arr):\\n\\tprint('Hello world')\\n\",\n      output: [this.createOutputTextComponent(\"Please enter your code and press submit...\")]\n    };\n  }\n\n  submitCode() {\n    this.setState({\n      output: []\n    });\n    fetch('/user-code', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code: window.btoa(this.state.code),\n        array: this.props.array\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.message) {\n        this.constructError(data.message);\n      } else {\n        this.constructOutput(data);\n        this.props.onLogsReturned(data.arrayLog);\n      }\n    });\n  }\n\n  async constructOutput(data) {\n    this.setState({\n      output: [...this.state.output, this.createOutputTextComponent(\"Code run successfully!\")]\n    });\n    await new Promise(r => setTimeout(r, 1000));\n    this.setState({\n      output: [...this.state.output, this.createOutputTextComponent(\"Runtime: \" + data.runtime.toFixed(3) + \"ms\")]\n    });\n  }\n\n  async constructError(text) {\n    this.setState({\n      output: [...this.state.output, this.createOutputTextComponent(\"Code failed to run!\")]\n    });\n    await new Promise(r => setTimeout(r, 1000));\n    this.setState({\n      output: [...this.state.output, this.createOutputTextComponent(\"Error message: \" + text)]\n    });\n  }\n\n  createOutputTextComponent(text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"OutputText\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: [/*#__PURE__*/_jsxDEV(MonacoEditor, {\n        height: \"70%\",\n        language: \"python\",\n        theme: \"vs-light\",\n        value: this.state.code,\n        options: {\n          selectOnLineNumbers: false,\n          automaticLayout: true,\n          fontSize: 15,\n          minimap: {\n            enabled: false\n          }\n        },\n        onChange: (newValue, e) => this.setState({\n          code: newValue\n        }),\n        editorDidMount: (editor, monaco) => editor.focus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        className: \"Stack\",\n        direction: \"column\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              maxWidth: '60px',\n              paddingLeft: 40,\n              paddingRight: 40\n            },\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => this.submitCode(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              maxWidth: '400px',\n              paddingLeft: 20,\n              paddingRight: 20\n            },\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => {\n              this.setState({\n                output: [this.createOutputTextComponent(\"Please enter your code and press submit...\")]\n              });\n              this.props.onRandomizeInput();\n            },\n            children: \"Randomize Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), this.state.output]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/src/App.js"],"names":["React","Paper","Stack","Button","styled","MonacoEditor","Flipped","Flipper","Grid","FaArrowRight","FaArrowLeft","FaPlay","GrPowerReset","ToggleButton","ToggleButtonGroup","Item","theme","typography","body2","padding","spacing","fontSize","textAlign","alignContent","color","palette","text","primary","width","height","App","Component","constructor","props","inputArray","Array","from","length","Math","floor","random","state","array","originalArray","logIndex","logs","runtime","highlighted","buttonLock","buttonDisabled","sortSpeed","buttonSpeedLabel","isPlaying","onLogsReturned","bind","onRandomizeInput","handleChange","setState","stepForward","logIndexNext","map","num","index","currentLog","stepBack","prevLog","play","timer","ms","Promise","res","setTimeout","event","speedLabel","target","value","sortingSpeed","reset","onAnimationComplete","r","render","join","includes","backgroundColor","CodeEditor","code","output","createOutputTextComponent","submitCode","fetch","method","headers","body","JSON","stringify","window","btoa","then","json","data","message","constructError","constructOutput","arrayLog","toFixed","selectOnLineNumbers","automaticLayout","minimap","enabled","newValue","e","editor","monaco","focus","maxWidth","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import './App.css';\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport MonacoEditor from 'react-monaco-editor';\nimport { Flipped, Flipper } from \"react-flip-toolkit\";\nimport Grid from '@mui/material/Grid';\nimport { FaArrowRight, FaArrowLeft, FaPlay } from 'react-icons/fa';\nimport { GrPowerReset } from 'react-icons/gr';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  fontSize: '75%',\n  textAlign: 'center',\n  alignContent: 'center',\n  color: theme.palette.text.primary,\n  width: 35,\n  height: 35,\n}));\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    var inputArray = Array.from({ length: 12 }, () => Math.floor(Math.random() * 100))\n    this.state = {\n      array: inputArray,\n      originalArray: inputArray,\n      logIndex: 0,\n      logs: [],\n      runtime: 0,\n      highlighted: [],\n      buttonLock: true,\n      buttonDisabled: true,\n      sortSpeed: 100,\n      buttonSpeedLabel: \"fastest\",\n      isPlaying: false,\n    }\n\n    this.onLogsReturned = this.onLogsReturned.bind(this)\n    this.onRandomizeInput = this.onRandomizeInput.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  onLogsReturned(logs) {\n    this.setState({ logs: logs, logIndex: 0, buttonLock: false, buttonDisabled: false })\n  }\n\n  onRandomizeInput() {\n    this.setState({ logs: [], logIndex: 0, highlighted: [], buttonDisabled: true, array: Array.from({ length: 12 }, () => Math.floor(Math.random() * 100)) })\n  }\n\n  stepForward() {\n    if (this.state.buttonLock) return\n    const logIndexNext = this.state.logIndex + 1\n    const logs = this.state.logs\n    if (logIndexNext >= logs.length) {\n      this.setState({ highlighted: this.state.array.map((num, index) => index) })\n      return\n    }\n    const currentLog = logs[logIndexNext]\n    this.setState({ logIndex: logIndexNext, array: currentLog[\"array\"], highlighted: currentLog[\"indices\"] })\n  }\n\n  stepBack() {\n    if (this.state.buttonLock) return\n    const logIndex = this.state.logIndex\n    const logs = this.state.logs\n    if (logIndex <= 0) {\n      return\n    }\n    const prevLog = logs[logIndex - 1]\n    const currentLog = logs[logIndex]\n    this.setState({ logIndex: logIndex - 1, array: prevLog[\"array\"], highlighted: currentLog[\"indices\"] })\n  }\n\n  async play() {\n    const timer = ms => new Promise(res => setTimeout(res, ms))\n    this.setState({ isPlaying: true })\n    while (this.state.isPlaying && (this.state.logIndex < this.state.logs.length)) {\n      this.stepForward();\n      await timer(this.state.sortSpeed);\n    }\n    this.setState({ isPlaying: false })\n  }\n\n  handleChange(event) {\n    var speedLabel = event.target.value\n    var sortingSpeed\n\n    if (speedLabel === \"fastest\") {\n      sortingSpeed = 187.5\n    } else if (speedLabel === \"fast\") {\n      sortingSpeed = 375\n    } else if (speedLabel === \"medium\") {\n      sortingSpeed = 750\n    } else {\n      sortingSpeed = 1500\n    }\n\n    this.setState({ \n      buttonSpeedLabel: speedLabel,\n      sortSpeed: sortingSpeed\n    })\n  }\n\n  reset() {\n    this.setState({ logIndex: 0, highlighted: [], array: this.state.originalArray, isPlaying: false })\n  }\n\n  async onAnimationComplete() {\n    // Lock buttons and sleep\n    this.setState({ buttonLock: true })\n    await new Promise(r => setTimeout(r, 200));\n    this.setState({ highlighted: [], buttonLock: false })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Grid container>\n          <Grid item xs={8}>\n            <header className=\"App-header\">\n              <h1 className=\"HeaderTitle\">Sorting Visualizer</h1>\n\n              <h4 className=\"StepCounterTitle\">{\"Step \" + this.state.logIndex}</h4>\n\n              <Stack className=\"Stack\" direction=\"row\" spacing={2}>\n                <Flipper flipKey={this.state.array.join('')} onComplete={() => this.onAnimationComplete()}>\n                  <ul className=\"list\">\n                    {this.state.array.map((num, index) => (\n                      <Flipped key={index} flipId={num}>\n                        <Item style={this.state.highlighted.includes(index) ? { backgroundColor: '#BBB15AFF' } : {}}>{num}</Item>\n                      </Flipped>\n                    ))}\n                  </ul>\n                </Flipper>\n              </Stack>\n\n              <Stack className=\"Stack\" direction=\"row\" spacing={2}>\n                <Button variant=\"contained\" color=\"primary\" disabled={this.state.buttonDisabled} onClick={() => this.stepBack()}>\n                  <FaArrowLeft />\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" disabled={this.state.buttonDisabled} onClick={() => this.stepForward()}>\n                  <FaArrowRight />\n                </Button>\n              </Stack>\n              <Stack className=\"Stack\" direction=\"row\" spacing={2}>\n                <Button variant=\"contained\" color=\"primary\" disabled={this.state.buttonDisabled || this.state.isPlaying} onClick={() => this.play()}>\n                  <FaPlay />\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" disabled={this.state.buttonDisabled} onClick={() => this.reset()}>\n                  <GrPowerReset />\n                </Button>\n              </Stack>\n\n              <ToggleButtonGroup\n                color=\"primary\"\n                value={this.state.buttonSpeedLabel}\n                exclusive\n                onChange={this.handleChange}\n              >\n                <ToggleButton value=\"slow\">1x</ToggleButton>\n                <ToggleButton value=\"medium\">2x</ToggleButton>\n                <ToggleButton value=\"fast\">3x</ToggleButton>\n                <ToggleButton value=\"fastest\">4x</ToggleButton>\n              </ToggleButtonGroup>\n\n            </header>\n          </Grid>\n          <CodeEditor onLogsReturned={this.onLogsReturned} onRandomizeInput={this.onRandomizeInput} array={this.state.array} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nclass CodeEditor extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      code: \"def sorting_algorithm(arr):\\n\\tprint('Hello world')\\n\",\n      output: [this.createOutputTextComponent(\"Please enter your code and press submit...\")]\n    }\n  }\n\n  submitCode() {\n    this.setState({ output: [] })\n    fetch('/user-code', {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        code: window.btoa(this.state.code),\n        array: this.props.array\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.message) {\n        this.constructError(data.message)\n      } else {\n        this.constructOutput(data)\n        this.props.onLogsReturned(data.arrayLog)\n      }\n    });\n  }\n\n  async constructOutput(data) {\n    this.setState({ output: [...this.state.output, this.createOutputTextComponent(\"Code run successfully!\")] })\n    await new Promise(r => setTimeout(r, 1000));\n    this.setState({ output: [...this.state.output, this.createOutputTextComponent(\"Runtime: \" + data.runtime.toFixed(3) + \"ms\")] })\n  }\n\n  async constructError(text) {\n    this.setState({ output: [...this.state.output, this.createOutputTextComponent(\"Code failed to run!\")] })\n    await new Promise(r => setTimeout(r, 1000));\n    this.setState({ output: [...this.state.output, this.createOutputTextComponent(\"Error message: \" + text)] })\n  }\n\n  createOutputTextComponent(text) {\n    return <p className=\"OutputText\"><i>{text}</i></p>\n  }\n\n  render() {\n    return (\n      <Grid item xs={4}>\n        <MonacoEditor\n          height=\"70%\"\n          language=\"python\"\n          theme=\"vs-light\"\n          value={this.state.code}\n          options={{\n            selectOnLineNumbers: false,\n            automaticLayout: true,\n            fontSize: 15,\n            minimap: {\n              enabled: false\n            },\n          }}\n          onChange={(newValue, e) => this.setState({ code: newValue })}\n          editorDidMount={(editor, monaco) => editor.focus()}\n        />\n        <Stack className=\"Stack\" direction=\"column\" spacing={2}>\n          <Stack direction=\"row\" spacing={3}>\n            <Button style={{ maxWidth: '60px', paddingLeft: 40, paddingRight: 40 }} variant=\"contained\" color=\"primary\" onClick={() => this.submitCode()}>\n              Submit\n            </Button>\n            <Button style={{ maxWidth: '400px', paddingLeft: 20, paddingRight: 20 }} variant=\"contained\" color=\"primary\" onClick={() => {\n              this.setState({ output: [this.createOutputTextComponent(\"Please enter your code and press submit...\")] });\n              this.props.onRandomizeInput();\n            }}>\n              Randomize Input\n            </Button>\n          </Stack>\n          {this.state.output}\n        </Stack>\n      </Grid>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}