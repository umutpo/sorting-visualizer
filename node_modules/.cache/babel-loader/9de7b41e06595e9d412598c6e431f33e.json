{"ast":null,"code":"var _jsxFileName = \"/home/umut/Documents/cs/cs410/Project2Group14/src/App.js\";\nimport './App.css';\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport MonacoEditor from 'react-monaco-editor';\nimport { Flipped, Flipper } from \"react-flip-toolkit\";\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.body2,\n    padding: theme.spacing(2),\n    fontSize: '75%',\n    textAlign: 'center',\n    alignContent: 'center',\n    color: theme.palette.text.primary\n  };\n});\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logIndex: 0,\n      logs: [],\n      runtime: 0,\n      highlighted: [],\n      buttonLock: true\n    };\n    this.onLogsReturned = this.onLogsReturned.bind(this);\n  }\n\n  stepForward() {\n    if (this.state.buttonLock) return;\n    const logIndexNext = this.state.logIndex + 1;\n    const logs = this.state.logs;\n\n    if (logIndexNext >= logs.length) {\n      return;\n    }\n\n    const currentLog = logs[logIndexNext];\n    this.setState({\n      logIndex: logIndexNext,\n      array: currentLog[\"array\"],\n      highlighted: currentLog[\"indices\"]\n    });\n  }\n\n  stepBack() {\n    if (this.state.buttonLock) return;\n    const logIndex = this.state.logIndex;\n    const logs = this.state.logs;\n\n    if (logIndex <= 0) {\n      return;\n    }\n\n    const prevLog = logs[logIndex - 1];\n    const currentLog = logs[logIndex];\n    this.setState({\n      logIndex: logIndex - 1,\n      array: prevLog[\"array\"],\n      highlighted: currentLog[\"indices\"]\n    });\n  }\n\n  onLogsReturned(logs) {\n    this.setState({\n      logs: logs,\n      logIndex: 0,\n      buttonLock: false\n    });\n  }\n\n  renderCellWithColor(num, index) {\n    if (this.state.highlighted.includes(index)) {\n      return /*#__PURE__*/_jsxDEV(Item, {\n        style: {\n          backgroundColor: '#BBB15AFF'\n        },\n        children: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Item, {\n        children: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  async onAnimationComplete(flipped) {\n    // Lock buttons and sleep\n    this.setState({\n      buttonLock: true\n    });\n    await new Promise(r => setTimeout(r, 200));\n    this.setState({\n      highlighted: [],\n      buttonLock: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 7,\n          children: /*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"App-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"HeaderTitle\",\n              children: \"Sorting Visualizer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              className: \"Stack\",\n              direction: \"row\",\n              spacing: 2,\n              children: /*#__PURE__*/_jsxDEV(Flipper, {\n                flipKey: this.state.array.join(''),\n                onComplete: () => this.onAnimationComplete(),\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"list\",\n                  children: this.state.array.map((num, index) => /*#__PURE__*/_jsxDEV(Flipped, {\n                    flipId: num,\n                    children: this.renderCellWithColor(num, index)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              className: \"Stack\",\n              direction: \"row\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => {\n                  this.stepBack();\n                },\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => {\n                  this.stepForward();\n                },\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editor, {\n          onLogsReturned: this.onLogsReturned\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      runtime: 0,\n      array: Array.from({\n        length: 12\n      }, () => Math.floor(Math.random() * 100)),\n      code: \"def sorting_algorithm(arr):\\n\\tprint('Hello world')\\n\",\n      output: \"Please enter your code and press submit\"\n    };\n  }\n\n  submitCode() {\n    fetch('/user-code', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code: window.btoa(this.state.code),\n        array: this.state.array\n      })\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        runtime: data.runtime\n      });\n      this.props.onLogsReturned(data.arrayLog);\n    });\n  }\n\n  editorDidMount(editor, monaco) {\n    editor.focus();\n  }\n\n  onChange(newValue, e) {\n    this.setState({\n      code: newValue\n    });\n  }\n\n  render() {\n    const options = {\n      selectOnLineNumbers: false,\n      automaticLayout: true,\n      fontSize: 15,\n      minimap: {\n        enabled: false\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 5,\n      children: [/*#__PURE__*/_jsxDEV(MonacoEditor, {\n        height: \"70%\",\n        language: \"python\",\n        theme: \"vs-light\",\n        value: this.state.code,\n        options: options,\n        onChange: this.onChange.bind(this),\n        editorDidMount: this.editorDidMount.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        className: \"Stack\",\n        direction: \"column\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            maxWidth: '60px',\n            paddingLeft: 40,\n            paddingRight: 40\n          },\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => this.submitCode(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Error\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/src/App.js"],"names":["React","Paper","Stack","Button","styled","MonacoEditor","Flipped","Flipper","Grid","Item","theme","typography","body2","padding","spacing","fontSize","textAlign","alignContent","color","palette","text","primary","App","Component","constructor","props","state","logIndex","logs","runtime","highlighted","buttonLock","onLogsReturned","bind","stepForward","logIndexNext","length","currentLog","setState","array","stepBack","prevLog","renderCellWithColor","num","index","includes","backgroundColor","onAnimationComplete","flipped","Promise","r","setTimeout","render","join","map","Editor","Array","from","Math","floor","random","code","output","submitCode","fetch","method","headers","body","JSON","stringify","window","btoa","then","res","json","data","arrayLog","editorDidMount","editor","monaco","focus","onChange","newValue","e","options","selectOnLineNumbers","automaticLayout","minimap","enabled","maxWidth","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import './App.css';\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport MonacoEditor from 'react-monaco-editor';\nimport { Flipped, Flipper } from \"react-flip-toolkit\";\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  fontSize: '75%',\n  textAlign: 'center',\n  alignContent: 'center',\n  color: theme.palette.text.primary,\n}));\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      logIndex: 0,\n      logs: [],\n      runtime: 0,\n      highlighted: [],\n      buttonLock: true,\n    }\n\n    this.onLogsReturned = this.onLogsReturned.bind(this)\n  }\n\n  stepForward() {\n    if (this.state.buttonLock) return\n    const logIndexNext = this.state.logIndex + 1\n    const logs = this.state.logs\n    if (logIndexNext >= logs.length) {\n      return\n    }\n    const currentLog = logs[logIndexNext]\n    this.setState({ logIndex: logIndexNext, array: currentLog[\"array\"], highlighted: currentLog[\"indices\"] })\n  }\n\n  stepBack() {\n    if (this.state.buttonLock) return\n    const logIndex = this.state.logIndex\n    const logs = this.state.logs\n    if (logIndex <= 0) {\n      return\n    }\n    const prevLog = logs[logIndex - 1]\n    const currentLog = logs[logIndex]\n    this.setState({ logIndex: logIndex - 1, array: prevLog[\"array\"], highlighted: currentLog[\"indices\"] })\n  }\n\n  onLogsReturned(logs) {\n    this.setState({ logs: logs, logIndex: 0, buttonLock: false })\n  } \n\n  renderCellWithColor(num, index) {\n    if (this.state.highlighted.includes(index)) {\n      return <Item style={{ backgroundColor: '#BBB15AFF' }}>{num}</Item>\n    } else {\n      return <Item>{num}</Item>\n    }\n  }\n\n  async onAnimationComplete(flipped) {\n    // Lock buttons and sleep\n    this.setState({ buttonLock: true })\n    await new Promise(r => setTimeout(r, 200));\n    this.setState({ highlighted: [], buttonLock: false })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Grid container>\n          <Grid item xs={7}>\n            <header className=\"App-header\">\n              <h1 className=\"HeaderTitle\">Sorting Visualizer</h1>\n              <Stack className=\"Stack\" direction=\"row\" spacing={2}>\n                <Flipper flipKey={this.state.array.join('')} onComplete={() => this.onAnimationComplete()}>\n                  <ul className=\"list\">\n                    {this.state.array.map((num, index) => (\n                      <Flipped key={index} flipId={num}>\n                        {this.renderCellWithColor(num, index)}\n                      </Flipped>\n                    ))}\n                  </ul>\n                </Flipper>\n              </Stack>\n              <Stack className=\"Stack\" direction=\"row\" spacing={2}>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => { this.stepBack(); }}>\n                  Previous\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => { this.stepForward(); }}>\n                  Next\n                </Button>\n              </Stack>\n            </header>\n          </Grid>\n          <Editor onLogsReturned={this.onLogsReturned} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      runtime: 0,\n      array: Array.from({length: 12}, () => Math.floor(Math.random() * 100)),\n      code: \"def sorting_algorithm(arr):\\n\\tprint('Hello world')\\n\",\n      output: \"Please enter your code and press submit\"\n    }\n  }\n\n  submitCode() {\n    fetch('/user-code', {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        code: window.btoa(this.state.code),\n        array: this.state.array\n      })\n    }).then(res => res.json()).then(data => {\n      this.setState({ runtime: data.runtime })\n      this.props.onLogsReturned(data.arrayLog)\n    });\n  }\n\n  editorDidMount(editor, monaco) {\n    editor.focus();\n  }\n\n  onChange(newValue, e) {\n    this.setState({\n      code: newValue\n    })\n  }\n\n  render() {\n    const options = {\n      selectOnLineNumbers: false,\n      automaticLayout: true,\n      fontSize: 15,\n      minimap: {\n        enabled: false\n      },\n    };\n    return (\n      <Grid item xs={5}>\n        <MonacoEditor\n          height=\"70%\"\n          language=\"python\"\n          theme=\"vs-light\"\n          value={this.state.code}\n          options={options}\n          onChange={this.onChange.bind(this)}\n          editorDidMount={this.editorDidMount.bind(this)}\n        />\n        <Stack className=\"Stack\" direction=\"column\" spacing={2}>\n          <Button style={{ maxWidth: '60px', paddingLeft: 40, paddingRight: 40 }} variant=\"contained\" color=\"primary\" onClick={() => this.submitCode()}>\n            Submit\n          </Button>\n          <p className=\"Error\"><i>Error</i></p>\n        </Stack>\n      </Grid>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}