{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { $ } from '../../../base/browser/dom.js';\nexport class BrowserClipboardService {\n  constructor() {\n    this.mapTextToType = new Map(); // unsupported in web (only in-memory)\n\n    this.findText = ''; // unsupported in web (only in-memory)\n  }\n\n  writeText(text, type) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // With type: only in-memory is supported\n      if (type) {\n        this.mapTextToType.set(type, text);\n        return;\n      } // Guard access to navigator.clipboard with try/catch\n      // as we have seen DOMExceptions in certain browsers\n      // due to security policies.\n\n\n      try {\n        return yield navigator.clipboard.writeText(text);\n      } catch (error) {\n        console.error(error);\n      } // Fallback to textarea and execCommand solution\n\n\n      const activeElement = document.activeElement;\n      const textArea = document.body.appendChild($('textarea', {\n        'aria-hidden': true\n      }));\n      textArea.style.height = '1px';\n      textArea.style.width = '1px';\n      textArea.style.position = 'absolute';\n      textArea.value = text;\n      textArea.focus();\n      textArea.select();\n      document.execCommand('copy');\n\n      if (activeElement instanceof HTMLElement) {\n        activeElement.focus();\n      }\n\n      document.body.removeChild(textArea);\n      return;\n    });\n  }\n\n  readText(type) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // With type: only in-memory is supported\n      if (type) {\n        return this.mapTextToType.get(type) || '';\n      } // Guard access to navigator.clipboard with try/catch\n      // as we have seen DOMExceptions in certain browsers\n      // due to security policies.\n\n\n      try {\n        return yield navigator.clipboard.readText();\n      } catch (error) {\n        console.error(error);\n        return '';\n      }\n    });\n  }\n\n  readFindText() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.findText;\n    });\n  }\n\n  writeFindText(text) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.findText = text;\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/platform/clipboard/browser/clipboardService.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","$","BrowserClipboardService","constructor","mapTextToType","Map","findText","writeText","text","type","set","navigator","clipboard","error","console","activeElement","document","textArea","body","appendChild","style","height","width","position","focus","select","execCommand","HTMLElement","removeChild","readText","get","readFindText","writeFindText"],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { $ } from '../../../base/browser/dom.js';\nexport class BrowserClipboardService {\n    constructor() {\n        this.mapTextToType = new Map(); // unsupported in web (only in-memory)\n        this.findText = ''; // unsupported in web (only in-memory)\n    }\n    writeText(text, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                this.mapTextToType.set(type, text);\n                return;\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.writeText(text);\n            }\n            catch (error) {\n                console.error(error);\n            }\n            // Fallback to textarea and execCommand solution\n            const activeElement = document.activeElement;\n            const textArea = document.body.appendChild($('textarea', { 'aria-hidden': true }));\n            textArea.style.height = '1px';\n            textArea.style.width = '1px';\n            textArea.style.position = 'absolute';\n            textArea.value = text;\n            textArea.focus();\n            textArea.select();\n            document.execCommand('copy');\n            if (activeElement instanceof HTMLElement) {\n                activeElement.focus();\n            }\n            document.body.removeChild(textArea);\n            return;\n        });\n    }\n    readText(type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                return this.mapTextToType.get(type) || '';\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.readText();\n            }\n            catch (error) {\n                console.error(error);\n                return '';\n            }\n        });\n    }\n    readFindText() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.findText;\n        });\n    }\n    writeFindText(text) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.findText = text;\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}