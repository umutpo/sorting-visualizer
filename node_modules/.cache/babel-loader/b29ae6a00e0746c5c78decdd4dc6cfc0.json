{"ast":null,"code":"import { URI } from '../../../base/common/uri.js';\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport function isSingleFolderWorkspaceIdentifier(obj) {\n  const singleFolderIdentifier = obj;\n  return typeof (singleFolderIdentifier === null || singleFolderIdentifier === void 0 ? void 0 : singleFolderIdentifier.id) === 'string' && URI.isUri(singleFolderIdentifier.uri);\n}\nexport function toWorkspaceIdentifier(workspace) {\n  // Multi root\n  if (workspace.configuration) {\n    return {\n      id: workspace.id,\n      configPath: workspace.configuration\n    };\n  } // Single folder\n\n\n  if (workspace.folders.length === 1) {\n    return {\n      id: workspace.id,\n      uri: workspace.folders[0].uri\n    };\n  } // Empty workspace\n\n\n  return undefined;\n} //#endregion","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/platform/workspaces/common/workspaces.js"],"names":["URI","WORKSPACE_EXTENSION","isSingleFolderWorkspaceIdentifier","obj","singleFolderIdentifier","id","isUri","uri","toWorkspaceIdentifier","workspace","configuration","configPath","folders","length","undefined"],"mappings":"AAAA,SAASA,GAAT,QAAoB,6BAApB;AACA,OAAO,MAAMC,mBAAmB,GAAG,gBAA5B;AACP,OAAO,SAASC,iCAAT,CAA2CC,GAA3C,EAAgD;AACnD,QAAMC,sBAAsB,GAAGD,GAA/B;AACA,SAAO,QAAQC,sBAAsB,KAAK,IAA3B,IAAmCA,sBAAsB,KAAK,KAAK,CAAnE,GAAuE,KAAK,CAA5E,GAAgFA,sBAAsB,CAACC,EAA/G,MAAuH,QAAvH,IAAmIL,GAAG,CAACM,KAAJ,CAAUF,sBAAsB,CAACG,GAAjC,CAA1I;AACH;AACD,OAAO,SAASC,qBAAT,CAA+BC,SAA/B,EAA0C;AAC7C;AACA,MAAIA,SAAS,CAACC,aAAd,EAA6B;AACzB,WAAO;AACHL,MAAAA,EAAE,EAAEI,SAAS,CAACJ,EADX;AAEHM,MAAAA,UAAU,EAAEF,SAAS,CAACC;AAFnB,KAAP;AAIH,GAP4C,CAQ7C;;;AACA,MAAID,SAAS,CAACG,OAAV,CAAkBC,MAAlB,KAA6B,CAAjC,EAAoC;AAChC,WAAO;AACHR,MAAAA,EAAE,EAAEI,SAAS,CAACJ,EADX;AAEHE,MAAAA,GAAG,EAAEE,SAAS,CAACG,OAAV,CAAkB,CAAlB,EAAqBL;AAFvB,KAAP;AAIH,GAd4C,CAe7C;;;AACA,SAAOO,SAAP;AACH,C,CACD","sourcesContent":["import { URI } from '../../../base/common/uri.js';\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport function isSingleFolderWorkspaceIdentifier(obj) {\n    const singleFolderIdentifier = obj;\n    return typeof (singleFolderIdentifier === null || singleFolderIdentifier === void 0 ? void 0 : singleFolderIdentifier.id) === 'string' && URI.isUri(singleFolderIdentifier.uri);\n}\nexport function toWorkspaceIdentifier(workspace) {\n    // Multi root\n    if (workspace.configuration) {\n        return {\n            id: workspace.id,\n            configPath: workspace.configuration\n        };\n    }\n    // Single folder\n    if (workspace.folders.length === 1) {\n        return {\n            id: workspace.id,\n            uri: workspace.folders[0].uri\n        };\n    }\n    // Empty workspace\n    return undefined;\n}\n//#endregion\n"]},"metadata":{},"sourceType":"module"}