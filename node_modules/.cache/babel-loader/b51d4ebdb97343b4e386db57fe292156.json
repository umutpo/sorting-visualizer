{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\nexport class MovingAverage {\n  constructor() {\n    this._n = 1;\n    this._val = 0;\n  }\n\n  update(value) {\n    this._val = this._val + (value - this._val) / this._n;\n    this._n += 1;\n    return this;\n  }\n\n  get value() {\n    return this._val;\n  }\n\n}","map":{"version":3,"sources":["/home/umut/Documents/cs/cs410/Project2Group14/node_modules/monaco-editor/esm/vs/base/common/numbers.js"],"names":["clamp","value","min","max","Math","MovingAverage","constructor","_n","_val","update"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,KAAT,CAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AACnC,SAAOC,IAAI,CAACF,GAAL,CAASE,IAAI,CAACD,GAAL,CAASF,KAAT,EAAgBC,GAAhB,CAAT,EAA+BC,GAA/B,CAAP;AACH;AACD,OAAO,MAAME,aAAN,CAAoB;AACvBC,EAAAA,WAAW,GAAG;AACV,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,IAAL,GAAY,CAAZ;AACH;;AACDC,EAAAA,MAAM,CAACR,KAAD,EAAQ;AACV,SAAKO,IAAL,GAAY,KAAKA,IAAL,GAAY,CAACP,KAAK,GAAG,KAAKO,IAAd,IAAsB,KAAKD,EAAnD;AACA,SAAKA,EAAL,IAAW,CAAX;AACA,WAAO,IAAP;AACH;;AACQ,MAALN,KAAK,GAAG;AACR,WAAO,KAAKO,IAAZ;AACH;;AAZsB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\nexport class MovingAverage {\n    constructor() {\n        this._n = 1;\n        this._val = 0;\n    }\n    update(value) {\n        this._val = this._val + (value - this._val) / this._n;\n        this._n += 1;\n        return this;\n    }\n    get value() {\n        return this._val;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}